{"version":3,"sources":["../node_modules/@material-ui/icons/esm/CloseSharp.js","views/page/GCL/Warehouse/ScanShuttleCheckOut.js","../node_modules/@material-ui/icons/esm/PlayForWork.js","../node_modules/@material-ui/icons/esm/ExpandLess.js","views/page/GCL/Warehouse/ListShuttle.js"],"names":["createSvgIcon","React","d","tableHaderColumns","id","label","minWidth","align","ScanShuttleCheckOut","props","useState","dataTable","setDataTable","isLoadingdataTable","setIsLoadingdataTable","page","setPage","rowsPerPage","setRowsPerPage","isLoading","setIsLoading","msg","open","type","toast","setToast","location","gate_code","setGateCode","shuttle","setShuttle","useEffect","loadDataTable","a","GCLService","post","mode","then","res","isMockData","mockDataGCL","shuttleResult","data","_result","status","datas","message","onPost","reqData","elevation","style","width","height","padding","margin","marginBottom","maxWidth","fullWidth","required","value","autoComplete","InputProps","startAdornment","position","onChange","event","target","onKeyPress","key","variant","color","startIcon","size","onClick","className","maxHeight","stickyHeader","aria-label","map","column","backgroundColor","colSpan","slice","row","index","hover","role","tabIndex","overflowWrap","format","length","severity","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","useStyles","makeStyles","root","MonitorReceive","classes","isOpenCheckinModal","setIsOpenCheckinModal","isOpenCheckoutModal","setIsOpenCheckoutModal","inputLocation","setInputLocation","inputShuttle","setInputShuttle","window","loading","onLoading","get","onLoaded","ListShuttle","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Button","marginRight","PlayForWork","ExpandLess","toLowerCase","Alert","TablePagination","Dialog","aria-labelledby","DialogTitle","DialogContent","ScanShuttleCheckIn","DialogActions","CloseSharp","Snackbar"],"mappings":"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","file":"static/js/148.652d20ed.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseSharp');","import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Paper,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow,Snackbar,CircularProgress } from '@material-ui/core';\r\nimport {Button,TextField, Dialog, DialogActions,DialogContent,DialogContentText,DialogTitle,InputAdornment } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport GCLService from '../../../../components/function/GCLService'\r\nimport {AddCircleOutline,CloseSharp,BrightnessHigh,Extension,Save} from '@material-ui/icons'\r\n\r\nconst tableHaderColumns = [\r\n    {id: 'time', label: 'Time', minWidth: 120, align: 'center'},\r\n    {id: 'location', label: 'Gate\\u00a0Code', minWidth: 170 },\r\n    {id: 'shuttle',label: 'Shuttle Pallet', minWidth: 170, },\r\n    {id: 'result',label: 'Result', minWidth: 170},\r\n  ];\r\n\r\nconst ScanShuttleCheckOut=(props)=>{\r\n  const [dataTable, setDataTable] = useState([]);\r\n  const [isLoadingdataTable, setIsLoadingdataTable] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [isLoading,setIsLoading]=useState(false)\r\n  const [toast,setToast] = useState({msg:null,open:false,type:null});\r\n\r\n  const [gate_code,setGateCode]=useState(props.location||\"\")\r\n  const [shuttle,setShuttle]=useState(props.shuttle || \"\")\r\n\r\n  useEffect(() => {\r\n    loadDataTable()\r\n    //on component unmount\r\n    return () => {\r\n        \r\n    }\r\n  }, [])\r\n\r\n  const loadDataTable=async()=>{\r\n    setIsLoadingdataTable(true)\r\n    GCLService.post('/v2/Shuttle_ActionResult_Front',{mode:2}).then(res=>{\r\n      setIsLoadingdataTable(false)\r\n      if(GCLService.isMockData)return setDataTable(GCLService.mockDataGCL.shuttleResult)\r\n      if(!res.data._result.status) {\r\n        setToast({msg:\"Load data fail : \"+res.data._result.message ,open:true,type:'error'})\r\n        return ;\r\n      }\r\n      setDataTable(res.data.datas)\r\n    })\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onPost=()=>{\r\n    if(shuttle==\"\")return;\r\n    setIsLoading(true)\r\n    let reqData={mode:2, shuttle:shuttle}\r\n    if(gate_code!=\"\")reqData.location=gate_code\r\n    GCLService.post('/v2/Shuttle_CheckIn_Front',reqData).then(res=>{\r\n      setIsLoading(false)\r\n      if(!res.data._result.status) {\r\n        setToast({msg:\"Fail : \"+res.data._result.message ,open:true,type:'error'})\r\n        return ;\r\n      }\r\n\r\n      loadDataTable()\r\n      setGateCode(\"\")\r\n      setShuttle(\"\")\r\n      setToast({msg:\"Success\",open:true,type:'success'})\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={0} style={{width: '100%',height:'100%', padding:10}}>\r\n    <Paper elevation={0} style={{width: '100%',margin:'auto',marginBottom:25,maxWidth:800,padding:20}}>\r\n        <div>\r\n            <TextField \r\n                style={{marginBottom:20}}\r\n                type=\"text\"\r\n                id=\"shuttle\" \r\n                label=\"Shuttle\" \r\n                fullWidth required \r\n                value={shuttle}\r\n                autoComplete='off'\r\n                InputProps={{\r\n                    startAdornment: (<InputAdornment position=\"start\"><Extension /> </InputAdornment>),\r\n                }}\r\n                onChange={(event)=>setShuttle(event.target.value)}\r\n                onKeyPress={(event)=>{if(event.key === \"Enter\")onPost()}}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={isLoading?<CircularProgress color='inherit' size={30}/>:<Save/>} onClick={onPost}>POST</Button>\r\n        </div>\r\n    </Paper>\r\n    <Paper elevation={2} style={{width: '100%',minWidth:500,margin:'auto',marginBottom:20,maxWidth:800}}>\r\n        <div>\r\n            <TableContainer className=\"tableCustom\" style={{maxHeight: 400}}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {tableHaderColumns.map((column) => (\r\n                        <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth, backgroundColor:'#DDD',padding:10 }} >\r\n                        {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {isLoadingdataTable &&\r\n                      <TableRow>\r\n                        <TableCell align='center' colSpan='11'>\r\n                          <CircularProgress color='primary' size={50}/>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    }\r\n                    {dataTable.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                        {tableHaderColumns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                            <TableCell key={column.id} align={column.align} style={{padding:10, overflowWrap: 'anywhere'}}>\r\n                                {column.format ? column.format(value) : value}\r\n                            </TableCell>\r\n                            );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                    })}\r\n                    {(dataTable.length<=0 && !isLoadingdataTable) &&\r\n                    <TableRow>\r\n                        <TableCell colSpan='11' align='center'>\r\n                          <Alert severity='info' >Empty Data</Alert>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 30, 100]}\r\n                component=\"div\"\r\n                count={dataTable.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </div>\r\n    </Paper>\r\n    \r\n    {toast.open &&\r\n      <Snackbar anchorOrigin={{ vertical:'top', horizontal:'center' }} open={toast.open} autoHideDuration={5000} onClose={()=>setToast({msg:\"\",open:false,type:\"\"})}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={()=>setToast({msg:\"\",open:false,type:\"\"})} severity={toast.type}>\r\n          {toast.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      }\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ScanShuttleCheckOut","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Paper,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow,Snackbar,CircularProgress } from '@material-ui/core';\r\nimport {Button,IconButton,TextField, Dialog, DialogActions,DialogContent,DialogContentText,DialogTitle,Tooltip} from '@material-ui/core';\r\n// import ToastAlert from '../../../../components/function/ToastAlert';\r\nimport GCLService from '../../../../components/function/GCLService';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {AddCircleOutline,CloseSharp,PlayForWork, Cancel,ExpandLess,CheckCircle} from '@material-ui/icons'\r\nimport ScanShuttleCheckIn from './ScanShuttleCheckIn'\r\nimport ScanShuttleCheckOut from './ScanShuttleCheckOut'\r\nimport \"../../../../assets/css/TableCustom.css\";\r\n\r\nconst tableHaderColumns = [\r\n  {id: 'online', label: 'Online', minWidth: 100},\r\n  {id: 'warehouse', label: 'Warehouse', minWidth: 100},\r\n  {id: 'location', label: 'Location', minWidth: 170},\r\n  {id: 'shuttle', label: 'Shuttle Pallet', minWidth: 170 },\r\n  {id: 'action', label: '🛠', minWidth: 100, align:'center'},\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    padding:15,\r\n    maxWidth:1000,\r\n    minWidth:500,\r\n    margin:'auto'\r\n  },\r\n});\r\n\r\nconst MonitorReceive=(props)=>{\r\n  const classes = useStyles();\r\n  const [dataTable, setDataTable] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [toast,setToast] = useState({msg:null,open:false,type:null});\r\n  const [isOpenCheckinModal,setIsOpenCheckinModal]=useState(false);\r\n  const [isOpenCheckoutModal,setIsOpenCheckoutModal]=useState(false);\r\n  const [inputLocation,setInputLocation]=useState(\"\");\r\n  const [inputShuttle,setInputShuttle]=useState(\"\");\r\n\r\n  useEffect(() => {\r\n        window.loading.onLoading();\r\n        GCLService.get('/v2/Shuttle_List_Front').then(res=>{\r\n            window.loading.onLoaded();\r\n            if(GCLService.isMockData)return setDataTable(GCLService.mockDataGCL.ListShuttle)\r\n            if(!res.data._result.status) {\r\n              setToast({msg:\"Load data fail : \"+res.data._result.message ,open:true,type:'error'})\r\n              return ;\r\n            }\r\n            setDataTable(res.data.datas)\r\n        })\r\n\r\n        //on component unmount\r\n        return () => {\r\n        }\r\n  }, [])\r\n  \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className=\"tableCustom\" style={{maxHeight: 440}}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {tableHaderColumns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, backgroundColor:'#BBB',padding:10 }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {dataTable.length>0 && dataTable.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n              return (\r\n                <TableRow hover key={index}>\r\n                  {tableHaderColumns.map((column,key) => {\r\n                    const value = row[column.id]||'';\r\n                    if(column.id=='action'){\r\n                      return (\r\n                        <TableCell key={column.id+index} align={column.align} style={{padding:10}}>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={()=>{setIsOpenCheckinModal(true);setInputLocation(row.location);setInputShuttle(row.shuttle);}} style={{marginRight:5}}><PlayForWork /> in</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={()=>{setIsOpenCheckoutModal(true);setInputLocation(row.location);setInputShuttle(row.shuttle);}}><ExpandLess/> out</Button>\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                    return (\r\n                      column.id=='online'?\r\n                        <TableCell key={column.id+index} align={column.align} style={{padding:10, backgroundColor: (value.toLowerCase()=='Offile'.toLowerCase()||value.toLowerCase()=='Offline'.toLowerCase()) ? '#FF5980' : '#FFF' }}>\r\n                          {value}\r\n                        </TableCell>\r\n                        :<TableCell key={column.id+index} align={column.align} style={{padding:10}}>\r\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                        </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {dataTable.length<=0 &&\r\n              <TableRow>\r\n                <TableCell colSpan='11'>\r\n                  <Alert severity='info'>Empty Data</Alert>\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 30, 100]}\r\n        component=\"div\"\r\n        count={dataTable.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n\r\n      {/* checkin modal */}\r\n      <Dialog maxWidth='lg' onClose={()=>{setIsOpenCheckinModal(false);setInputLocation(null);setInputShuttle(null);}} aria-labelledby=\"simple-dialog-title\" open={isOpenCheckinModal}>\r\n        <DialogTitle>Shuttle Check-In</DialogTitle>\r\n        <DialogContent>\r\n            <ScanShuttleCheckIn shuttle={inputShuttle} location={inputLocation} />\r\n        </DialogContent>\r\n        <DialogActions style={{backgroundColor:'#eee'}}>\r\n          <Button size='medium' variant=\"contained\" onClick={()=>{setIsOpenCheckinModal(false);setInputLocation(null);setInputShuttle(null);}} color=\"secondary\" startIcon={<CloseSharp/>} >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* checkout modal */}\r\n      <Dialog maxWidth='lg' onClose={()=>{setIsOpenCheckoutModal(false);setInputLocation(null);setInputShuttle(null);}} aria-labelledby=\"simple-dialog-title\" open={isOpenCheckoutModal}>\r\n        <DialogTitle>Shuttle Check-Out</DialogTitle>\r\n        <DialogContent>\r\n            <ScanShuttleCheckOut shuttle={inputShuttle} location={inputLocation} />\r\n        </DialogContent>\r\n        <DialogActions style={{backgroundColor:'#eee'}}>\r\n          <Button size='medium' variant=\"contained\" onClick={()=>{setIsOpenCheckoutModal(false);setInputLocation(null);setInputShuttle(null);}} color=\"secondary\" startIcon={<CloseSharp/>} >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {toast.open &&\r\n      <Snackbar anchorOrigin={{ vertical:'top', horizontal:'center' }} open={toast.open} autoHideDuration={5000} onClose={()=>setToast({msg:\"\",open:false,type:\"\"})}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={()=>setToast({msg:\"\",open:false,type:\"\"})} severity={toast.type}>\r\n          {toast.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MonitorReceive"],"sourceRoot":""}