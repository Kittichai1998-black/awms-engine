{"version":3,"sources":["components/AmInput.js","components/function/CoreFunction2.js","components/AmDropdown.js","components/AmValidate.js"],"names":["CustomTextField","props","classes","className","styleType","defaultValue","required","onChange","onChangeV2","onMouseOver","onMouseOut","onKeyPress","onKeyUp","onKeyDown","onClick","onFocus","onBlur","InputProps","validate","msgError","msgSuccess","regExp","customValidate","styleValidate","onValidate","other","useState","value","setValue","size","classNames","root","event","target","style","display","alignItems","withStyles","theme","width","backgroundColor","borderBottomColor","status","primary","dark","error","main","default","color","red","fontSize","createMuiTheme","light","indigo","contrastText","grey","disabled","typography","useNextVariants","InputStyle","children","apicall","url","Axios","get","localStorage","getItem","then","res","data","_result","code","alert","message","sessionStorage","clear","dataR","trimObj","undefined","token","post","put","delete","utlArray","all","createQueryString","select","queryString","t","q","f","g","s","sk","l","IsEmptyObject","obj","Object","keys","length","constructor","Clone","copy","Date","setTime","getTime","Array","i","len","attr","hasOwnProperty","Error","isArray","reduce","acc","key","trim","selectStyles","ddlMinWidth","ddlMaxWidth","zIndex","shadow","control","provided","margin","menu","borderRadius","minWidth","maxWidth","boxShadow","menuPortal","base","Dropdown","isOpen","onClose","position","Menu","zindexval","ddlminwidth","ddlmaxwidth","Blanket","marginTop","marginBottom","bottom","left","top","right","Svg","p","height","viewBox","focusable","role","DropDownInputs","iconCloseButton","padding","cursor","input","marginLeft","flex","iconButton","id","placeholder","valueKey","onHandleClickClear","toggleOpen","onHandleDelete","readOnly","autoComplete","val","element","blur","ele","cancelBubble","inputProps","endAdornment","aria-label","inputComponent","inputRef","ref","DropdownIndicator1","CustomClearText","componentNormal","Control","justifyContent","fullWidth","selectProps","isDisabled","input2","innerRef","innerProps","textFieldProps","Placeholder","placeholderDisabled","SingleValue","singleValue","ValueContainer","valueContainer","NoOptionsMessage","noOptionsMessage","DropdownIndicator","ClearIndicator","getStyles","restInnerProps","IndicatorSeparator","componentSearch","colors","neutral20","d","fill","fillRule","DropdownComponent","returnDefaultValue","autoDefaultValue","fieldDataKey","queryApi","fieldLabel","labelPattern","ddlType","setOpen","valueData","setValueData","optionList","setOptionList","setValueKey","defaultVal","setDefaultVal","upreturnDefaultValue","setReturnDefaultValue","onSelectChange","e","getValueKey","showValueData","str","isEmpty","forEach","index","concat","qryString","a","datas","dataOptions","label","getLabel","resData","useEffect","getData","console","log","getDefaultByValue","hasOpt","some","opt","valuearray","dataoption","String","firstdata","autoFocus","name","backspaceRemovesValue","components","controlShouldRenderValue","hideSelectedOptions","isClearable","menuIsOpen","options","styles","tabSelectsValue","menuPortalTarget","document","body","maxMenuHeight","menuPlacement","isSearchable","textAlign","palette","text","font","clearIndicator","state","selectStyles2","defaultProps","flexWrap","spacing","withTheme","AmValidate","fontFamily","join","success","green","resValid","setResValid","showValid","setShowValid","values","toString","match","checkCustom"],"mappings":"sPAwCA,SAASA,EAAgBC,GACvB,IACEC,EAwBED,EAxBFC,QACAC,EAuBEF,EAvBFE,UACAC,EAsBEH,EAtBFG,UACAC,EAqBEJ,EArBFI,aACAC,EAoBEL,EApBFK,SACAC,EAmBEN,EAnBFM,SACAC,EAkBEP,EAlBFO,WACAC,EAiBER,EAjBFQ,YACAC,EAgBET,EAhBFS,WACAC,EAeEV,EAfFU,WACAC,EAcEX,EAdFW,QACAC,EAaEZ,EAbFY,UACAC,EAYEb,EAZFa,QACAC,EAWEd,EAXFc,QACAC,EAUEf,EAVFe,OAfF,EAyBIf,EATFgB,kBAhBF,MAgBe,GAhBf,EAiBEC,EAQEjB,EARFiB,SACAC,EAOElB,EAPFkB,SACAC,EAMEnB,EANFmB,WACAC,EAKEpB,EALFoB,OACAC,EAIErB,EAJFqB,eACAC,EAGEtB,EAHFsB,cACAC,EAEEvB,EAFFuB,WACGC,EAxBL,YAyBIxB,EAzBJ,yRA2BA,EAA0ByB,mBAASrB,GAA8B,IAAjE,mBAAOsB,EAAP,KAAcC,EAAd,KA2DA,OACE,oCACE,kBAAC,IAAD,eACEC,KAAM,QACN1B,UAAW2B,IAAW3B,GACtBc,WAAU,aACRf,QAAS,CACP6B,KAAMD,IAAW5B,EAAQ6B,KAAM7B,EAAQ,GAAD,OAAIE,OAEzCa,GAELZ,aAAcA,EACdE,SArEe,SAAAyB,GACfxB,IACFoB,EAASI,EAAMC,OAAON,OACtBnB,EAAWwB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KAmEjDpB,QAxCc,SAAAoB,GACdpB,IACFgB,EAASI,EAAMC,OAAON,OACtBf,EAAQoB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KAsC9CvB,YAjEkB,SAAAuB,GAClBvB,IACFmB,EAASI,EAAMC,OAAON,OACtBlB,EAAYuB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KA+DlDrB,WAtDiB,SAAAqB,GACjBrB,IACFiB,EAASI,EAAMC,OAAON,OACtBhB,EAAWqB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KAoDjDnB,UAjDgB,SAAAmB,GAChBnB,IACFe,EAASI,EAAMC,OAAON,OACtBd,EAAUmB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KA+ChDtB,WA9DiB,SAAAsB,GACjBtB,IACFkB,EAASI,EAAMC,OAAON,OACtBjB,EAAWsB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KA4DjDlB,QAvCc,SAAAkB,GACdlB,IACFc,EAASI,EAAMC,OAAON,OACtBb,EAAQkB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KAqC9ChB,OA5Ba,SAAAgB,GACbhB,GACFY,EAASI,EAAMC,OAAON,OACtBX,EAAOgB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,IACtCzB,IACTqB,EAASI,EAAMC,OAAON,OACtBpB,EAASyB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,KAuB/CjB,QAnCc,SAAAiB,GACdjB,IACFa,EAASI,EAAMC,OAAON,OACtBZ,EAAQiB,EAAMC,OAAON,MAAO,KAAMK,EAAMC,OAAQD,MAiC1CP,IAGN,yBACES,MAAK,aACHC,QAAS,cACTC,WAAY,UACTb,IAGJjB,EAAW,2BAAOH,UAAWD,EAAQI,UAA1B,KAAgD,KAC3DY,EACC,kBAAC,IAAD,CACES,MAAOA,EACPP,WAAYA,EACZD,SAAUA,EACVG,eAAgBA,EAChBD,OAAQA,EACRG,WAAYA,IAEZ,OAKZxB,EAAkBqC,aAlKH,SAAAC,GAAK,MAAK,CACvBP,KAAM,CACJQ,MAAO,OACPC,gBAAiB,QACjB,UAAW,CACTC,kBAAmBH,EAAMI,OAAOC,QAAQC,OAG5CD,QAAS,CACP,UAAW,CACTF,kBAAmBH,EAAMI,OAAOC,QAAQC,OAG5CC,MAAO,CACL,UAAW,CACTJ,kBAAmBH,EAAMI,OAAOG,MAAMC,OAG1CC,QAAS,CACP,UAAW,CACTN,kBAAmBH,EAAMI,OAAOK,QAAQD,OAG5CxC,SAAU,CACR0C,MAAOC,IAAI,KACXC,SAAU,WAyIIb,CAAmBrC,GAmBrC,IAAMsC,EAAQa,YAAe,CAC3BT,OAAQ,CACNC,QAAS,CACPS,MAAOC,IAAO,KACdP,KAAMO,IAAO,KACbT,KAAMS,IAAO,KACbC,aAAc,QAEhBT,MAAO,CACLO,MAAOH,IAAI,KACXH,KAAMG,IAAI,KACVL,KAAMK,IAAI,KACVK,aAAc,QAEhBP,QAAS,CACPK,MAAOG,IAAK,KACZT,KAAMS,IAAK,KACXX,KAAMW,IAAK,KACXD,aAAc,QAEhBE,SAAUD,IAAK,MAEjBE,WAAY,CAAEC,iBAAiB,KAWlBC,UARf,SAAoB1D,GAClB,OACE,kBAAC,IAAD,CAAkBqC,MAAOA,GACvB,kBAACtC,EAAoBC,GACpBA,EAAM2D,Y,uNC/MPC,G,+FAEF,SAAIC,GACA,OAAOC,IAAMC,IAAIF,EAAM,UAAYG,aAAaC,QAAQ,UAAUC,MAAK,SAACC,GAWpE,OAVgC,IAA5BA,EAAIC,KAAKC,QAAQ5B,QACa,UAA1B0B,EAAIC,KAAKC,QAAQC,OACjBC,MAAMJ,EAAIC,KAAKC,QAAQG,SACvBC,eAAeC,QACfV,aAAaU,SAMdP,O,kBAIf,SAAKN,EAAKc,GACN,IAAIP,EAAOQ,EAAQD,GAInB,YAHaE,IAATT,IACAA,EAAKU,MAAQd,aAAaC,QAAQ,UAE/BH,IAAMiB,KAAKlB,EAAKO,GAAMF,MAAK,SAACC,GAW/B,OAVgC,IAA5BA,EAAIC,KAAKC,QAAQ5B,QACa,UAA1B0B,EAAIC,KAAKC,QAAQC,OACjBC,MAAMJ,EAAIC,KAAKC,QAAQG,SACvBC,eAAeC,QACfV,aAAaU,SAMdP,O,iBAIf,SAAIN,EAAKc,GACL,IAAIP,EAAOQ,EAAQD,GAEnB,OADAP,EAAKU,MAAQd,aAAaC,QAAQ,SAC3BH,IAAMkB,IAAInB,EAAKO,GAAMF,MAAK,SAACC,GAW9B,OAVgC,IAA5BA,EAAIC,KAAKC,QAAQ5B,QACa,UAA1B0B,EAAIC,KAAKC,QAAQC,OACjBC,MAAMJ,EAAIC,KAAKC,QAAQG,SACvBC,eAAeC,QACfV,aAAaU,SAMdP,O,oBAIf,SAAON,EAAKc,GACR,IAAIP,EAAOQ,EAAQD,GAEnB,OADAP,EAAKU,MAAQd,aAAaC,QAAQ,SAC3BH,IAAMmB,OAAOpB,EAAKO,GAAMF,MAAK,SAACC,GAWjC,OAVgC,IAA5BA,EAAIC,KAAKC,QAAQ5B,QACa,UAA1B0B,EAAIC,KAAKC,QAAQC,OACjBC,MAAMJ,EAAIC,KAAKC,QAAQG,SACvBC,eAAeC,QACfV,aAAaU,SAMdP,O,iBAIf,SAAIe,GACA,OAAOpB,IAAMqB,IAAID,GAAUhB,MAAK,SAAAC,GAC5B,OAAOA,S,MAKbiB,EAAoB,SAACC,GAUvB,OATaA,EAAOC,aAA4B,KAAbD,EAAOE,EAAW,IAAM,MAAQF,EAAOE,IACtD,KAAbF,EAAOG,EAAW,GAAK,MAAQH,EAAOG,IACzB,KAAbH,EAAOI,EAAW,GAAK,MAAQJ,EAAOI,IACzB,KAAbJ,EAAOK,EAAW,GAAK,MAAQL,EAAOK,IACzB,KAAbL,EAAOM,EAAW,GAAK,MAAQN,EAAOM,IACxB,KAAdN,EAAOO,GAAY,GAAK,OAASP,EAAOO,KAC3B,IAAbP,EAAOQ,EAAU,GAAK,MAAQR,EAAOQ,IACtB,KAAfR,EAAOF,IAAa,GAAK,QAAUE,EAAOF,KAC3C,kBAIJW,EAAgB,SAACC,GACnB,MAAqB,kBAATA,IAC2B,IAA5BC,OAAOC,KAAKF,GAAKG,QAAgBH,EAAII,cAAgBH,SAK9DI,EAAQ,SAARA,EAASL,GACX,IAAIM,EAGJ,GAAI,MAAQN,GAAO,iBAAmBA,EAAK,OAAOA,EAGlD,GAAIA,aAAeO,KAGf,OAFAD,EAAO,IAAIC,MACNC,QAAQR,EAAIS,WACVH,EAIX,GAAIN,aAAeU,MAAO,CACtBJ,EAAO,GACP,IAAK,IAAIK,EAAI,EAAGC,EAAMZ,EAAIG,OAAQQ,EAAIC,EAAKD,IACvCL,EAAKK,GAAKN,EAAML,EAAIW,IAExB,OAAOL,EAIX,GAAIN,aAAeC,OAAQ,CAEvB,IAAK,IAAIY,KADTP,EAAO,GACUN,EACTA,EAAIc,eAAeD,KAAOP,EAAKO,GAAQR,EAAML,EAAIa,KAEzD,OAAOP,EAGX,MAAM,IAAIS,MAAM,kDAmCpB,SAASlC,EAAQmB,GACb,OAAY,OAARA,EACO,KAGNU,MAAMM,QAAQhB,IAAsB,iBAAPA,EAC3BC,OAAOC,KAAKF,GAAKiB,QAAO,SAAUC,EAAKC,GAE1C,OADAD,EAAIC,EAAIC,QAA6B,iBAAZpB,EAAImB,GAAmBnB,EAAImB,GAAKC,OAASvC,EAAQmB,EAAImB,IACvED,IACRR,MAAMM,QAAQhB,GAAO,GAAK,IAJ6BA,I,4PCtKxDjC,EAAQ,IAAIF,IAmDZwD,EAAe,SAACC,EAAaC,EAAaC,GAC5C,IAAMC,EAAS,2BACf,MACI,CACIC,QAAS,SAAAC,GAAQ,kCACVA,GADU,IAEbC,OAAQ,KAEZC,KAAM,SAAAF,GAAQ,kCACPA,GADO,IACGG,aAAc,cAAetF,gBAAiB,QAC3DoF,OAAQ,eAAgBG,SAAUT,EAAaU,SAAUT,EACzDU,UAAU,aAAD,OAAeR,EAAf,wBAAqCA,MAElDS,WAAY,SAAAC,GAAI,kCAAUA,GAAV,IAAgBX,OAAQA,OAI9CY,EAAW,SAACnI,GACd,IAAQ2D,EAAwE3D,EAAxE2D,SAAUyE,EAA8DpI,EAA9DoI,OAAQpG,EAAsDhC,EAAtDgC,OAAQqG,EAA8CrI,EAA9CqI,QAASd,EAAqCvH,EAArCuH,OAAQF,EAA6BrH,EAA7BqH,YAAaC,EAAgBtH,EAAhBsH,YAChE,OAAQ,yBAAKrF,MAAO,CAAEqG,SAAU,aAC3BtG,EACAoG,EAAS,kBAACG,EAAD,CAAMC,UAAWjB,EAAQkB,YAAapB,EAAaqB,YAAapB,GAAc3D,GAAmB,KAC1GyE,EAAS,kBAACO,EAAD,CAAS9H,QAASwH,IAAc,OAK5CE,EAAO,SAAAvI,GAET,OACI,uCACIiC,MAAO,CACH6F,SAAU9H,EAAMyI,YAChBV,SAAU/H,EAAM0I,YAChBnG,gBAAiB,QACjBsF,aAAc,cACdG,UAAU,aAAD,OARN,4BASHY,UAAW,EACXC,aAAc,EAGdP,SAAU,WACVf,OAAQvH,EAAMwI,YAEdxI,KAIV2I,EAAU,SAAA3I,GAAK,OACjB,uCACIiC,MAAO,CACH6G,OAAQ,EACRC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPX,SAAU,QACVf,OAAQ,IAERvH,KAINkJ,EAAM,SAAAC,GAAC,OACT,uCACI7G,MAAM,KACN8G,OAAO,KACPC,QAAQ,YACRC,UAAU,QACVC,KAAK,gBACDJ,KAeNK,EAAiBpH,aAAW,SAAAC,GAAK,MAAK,CACxCoH,gBAAiB,CAEbC,QAAS,EACT3G,MAAOO,IAAK,KACZL,SAAU,GACV,UAAW,CACPF,MAAOO,IAAK,KACZqG,OAAQ,YAGhBC,MAAO,CACH1H,QAAS,OACT2H,WAAY,EACZC,KAAM,EACN,UAAW,CACPH,OAAQ,WAEZrH,MAAO,QAGXyH,WAAY,CACRL,QAAS,GAEbrJ,SAAU,CACN0C,MAAOC,IAAI,SAzBIZ,EA2BnB,SAAApC,GACA,IAAQC,EACgED,EADhEC,QAAS+J,EACuDhK,EADvDgK,GAAIC,EACmDjK,EADnDiK,YAAa9J,EACsCH,EADtCG,UAAW+J,EAC2BlK,EAD3BkK,SAAUC,EACiBnK,EADjBmK,mBACnDC,EAAoEpK,EAApEoK,WAA4B7G,GAAwCvD,EAAxDqK,eAAwDrK,EAAxCuD,UAAUlD,EAA8BL,EAA9BK,SAAUiC,EAAoBtC,EAApBsC,MAAUd,EAD9D,YACwExB,EADxE,wIAIA,OACI,yBAAKiC,MAAO,CAAEC,QAAS,cAAeC,WAAY,WAC9C,kBAAC,UAAD,eAEI6H,GAAIA,EAAIM,UAAU,EAAMC,aAAa,MACrChH,SAAUA,EACVlD,SAAUA,EACV4J,YAAaA,EAAavI,MAAOwI,EACjCjI,MAAO,CAAEK,MAAOA,GAChBnC,UAAWA,EAEXW,QAASyC,GAAkB2G,EAAP,KAAyB,SAACM,EAAKzE,EAAK0E,EAAS1I,GAApB,OAA8B0I,EAAQC,QACnF7J,QAAS0C,EAAW,KAAO,SAACiH,EAAKzE,EAAK4E,EAAK5I,GACvCA,EAAM6I,cAAe,EACrBR,KAEJpJ,WAAY,CACR6J,WAAY,CACR3K,UAAWD,EAAQ2J,OAEvBkB,aACI,kBAAC,IAAD,CAAgBxC,SAAS,OACpB/E,EAAW,KAAO2G,EACf,kBAAC,IAAD,CAAWhK,UAAWD,EAAQwJ,gBAC1BxH,MAAO,CAAEsF,OAAQ,KACjB3F,KAAK,QAAQmJ,aAAW,QAAQlK,QAASsJ,IAC3C,KACN,kBAAC,IAAD,CAAYjK,UAAWD,EAAQ8J,WAAYxG,SAAUA,EAAU3B,KAAK,QAAQmJ,aAAW,SAASlK,QAASuJ,GACrG,kBAAC,IAAD,CAAmBnH,SAAS,cAKxCzB,QAkBpB,SAASwJ,EAAT,GAAiD,IAAvBC,EAAsB,EAAtBA,SAAajL,EAAS,4BAC5C,OAAO,uCAAKkL,IAAKD,GAAcjL,IAiDnC,IAAMmL,EAAqB/I,aAAW,SAAAC,GAAK,MAAK,CAC5CP,KAAM,CACF8G,UAAW,EACXC,aAAc,GAElBkB,WAAY,CACRL,QAAS,MANUtH,EAQvB,SAAApC,GACA,IAAQC,EAAsBD,EAAtBC,QAAR,YAA8BD,EAA9B,aACA,OAEI,yBAAKE,UAAWD,EAAQ6B,MACpB,kBAAC,IAAD,CAAY5B,UAAWD,EAAQ8J,WAAYnI,KAAK,QAAQmJ,aAAW,UAC/D,kBAAC,IAAD,CAAmB9H,SAAS,eAOtCmI,EAAkBhJ,aAAW,SAAAC,GAAK,MAAK,CACzCoH,gBAAiB,CACb1G,MAAOO,IAAK,KACZL,SAAU,GACV,UAAW,CACPF,MAAOO,IAAK,KACZqG,OAAQ,eANIvH,EASpB,SAAApC,GACA,OACI,kBAAC,IAAD,CAAWE,UAAWF,EAAMC,QAAQwJ,gBAAiB7H,KAAK,QAAQmJ,aAAW,aAsB/EM,EAAkB,CACpBC,QArGJ,SAAiBtL,GACb,OACI,yBAAKiC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUoJ,eAAgB,kBACjE,kBAAC,UAAD,eACIC,WAAS,EACTrL,UAAWH,EAAMyL,YAAYtL,UAC7BoD,SAAUvD,EAAM0L,WAChBrL,SAAUL,EAAMyL,YAAYpL,SAC5BW,WAAY,CACRgK,iBACAH,WAAW,aACP3K,UAAWF,EAAMyL,YAAYxL,QAAQ0L,OACrCV,SAAUjL,EAAM4L,SAChBjI,SAAU3D,EAAM2D,UACb3D,EAAM6L,cAGb7L,EAAMyL,YAAYK,mBAqFlCC,YAhFJ,SAAqB/L,GACjB,OACI,kBAAC,IAAD,eAEIE,UAAWF,EAAM0L,WAAa1L,EAAMyL,YAAYxL,QAAQ+L,oBAAsBhM,EAAMyL,YAAYxL,QAAQgK,aACpGjK,EAAM6L,YAET7L,EAAM2D,WA0EfsI,YArEJ,SAAqBjM,GACjB,OACI,kBAAC,IAAD,eAAYE,UAAWF,EAAMyL,YAAYxL,QAAQiM,aAAiBlM,EAAM6L,YACnE7L,EAAM2D,WAoEfwI,eA/DJ,SAAwBnM,GACpB,OAAO,yBAAKE,UAAWF,EAAMyL,YAAYxL,QAAQmM,gBAAiBpM,EAAM2D,WA+DxE0I,iBA1HJ,SAA0BrM,GACtB,OACI,kBAAC,IAAD,eACI+C,MAAM,gBACN7C,UAAWF,EAAMyL,YAAYxL,QAAQqM,kBACjCtM,EAAM6L,YAET7L,EAAM2D,WAoHf4I,kBAAmBpB,EACnBqB,eA3BmB,SAACxM,GACpB,MAA8FA,EAAtF2D,gBAAR,MAAmB,kBAACyH,EAAD,MAAnB,EAAwCqB,EAAsDzM,EAAtDyM,UAAxC,EAA8FzM,EAA3C6L,WAAcX,EAAjE,EAAiEA,IAAQwB,EAAzE,uBACA,OACI,yCAASA,EAAT,CAAyBxB,IAAKA,EAAKjJ,MAAOwK,EAAU,iBAAkBzM,KAEjE2D,IAuBTgJ,mBAAoB,MAElBC,EAAkB,CACpBL,kBAnNmB,kBACnB,yBAAKtK,MAAO,CAAEc,MAAO8J,SAAOC,UAAW1D,OAAQ,GAAI9G,MAAO,KACtD,kBAAC4G,EAAD,KACI,0BACI6D,EAAE,wIACFC,KAAK,eACLC,SAAS,eA8MrBN,mBAAoB,MAElBO,EAAoB,SAAClN,GACvB,IACIgK,EAsBahK,EAtBbgK,GACAzG,EAqBavD,EArBbuD,SACAlD,EAoBaL,EApBbK,SACAJ,EAmBaD,EAnBbC,QACAoC,EAkBarC,EAlBbqC,MACAkF,EAiBavH,EAjBbuH,OACA0C,EAgBajK,EAhBbiK,YACA9J,EAeaH,EAfbG,UACAuB,EAca1B,EAdb0B,MACAtB,EAaaJ,EAbbI,aACA+M,EAYanN,EAZbmN,mBACAC,EAWapN,EAXboN,iBACAC,EAUarN,EAVbqN,aACAC,EASatN,EATbsN,SACAlJ,EAQapE,EARboE,KACA9B,EAOatC,EAPbsC,MACA+E,EAMarH,EANbqH,YACAC,EAKatH,EALbsH,YACAiG,EAIavN,EAJbuN,WACAC,EAGaxN,EAHbwN,aACAlN,EAEaN,EAFbM,SACAmN,EACazN,EADbyN,QACGjM,EAvBP,YAuBiBxB,EAvBjB,wQAwBA,EAA0ByB,oBAAS,GAAnC,mBAAO2G,EAAP,KAAesF,EAAf,KACA,EAAkCjM,mBAAS,MAA3C,mBAAOkM,EAAP,KAAkBC,EAAlB,KACA,EAAoCnM,mBAAS,IAA7C,mBAAOoM,EAAP,KAAmBC,EAAnB,KACA,EAAgCrM,mBAAS,IAAzC,oBAAOyI,GAAP,MAAiB6D,GAAjB,MACA,GAAoCtM,mBAAS,MAA7C,qBAAOuM,GAAP,MAAmBC,GAAnB,MACA,GAA4CxM,mBAAS,MAArD,qBACA,IADA,YACsDA,mBAAS0L,IAA/D,qBAAOe,GAAP,MAA6BC,GAA7B,MAEM/D,GAAa,WACfsD,GAAStF,IAEPgG,GAAiB,SAACC,GACpBX,GAAStF,GACLiG,GACAF,IAAsB,GACtBF,GAAc,MACdL,EAAaS,GACbC,GAAYD,GACZ/N,EAAS+N,EAAE3M,MAAO2M,EAAGrE,EAAIqD,KAEzBc,IAAsB,GACtBP,EAAa,MACbK,GAAc,MACdF,GAAY,IACZzN,EAAS,KAAM,KAAM0J,EAAIqD,KAiGjC,SAASiB,GAAYC,GACjB,IAAIC,EAAM,IAwCd,SAAiBzI,GACb,IAAK,IAAImB,KAAOnB,EACZ,GAAIA,EAAIc,eAAeK,GACnB,OAAO,EAEf,OAAO,GA5CFuH,CAAQF,IACLhB,IACIC,EACAD,EAAWmB,SAAQ,SAAChN,EAAOiN,GAEnBH,EADAG,IAAUpB,EAAWrH,OAAS,EACxBsI,EAAII,OAAOL,EAAc7M,IAEzB8M,EAAII,OAAOL,EAAc7M,GAAQ8L,MAK/CD,EAAWmB,SAAQ,SAAChN,GAChB8M,EAAMA,EAAII,OAAOL,EAAc7M,QAM/CqM,GAAYS,GAvKiB,8CA0KjC,WAAuBK,GAAvB,eAAAC,EAAA,+EAE8BhL,EAAMC,IAAI8K,GAAW3K,MAAK,SAAAC,GAC5C,GAAIA,EAAIC,KAAK2K,MAAO,CAChB,IAAIC,EAAc7K,EAAIC,KAAK2K,MAK3B,OAJAC,EAAYN,SAAQ,SAAAK,GAChBA,EAAMrN,MAAQqN,EAAM1B,GACpB0B,EAAME,MAAQC,GAASH,MAEnBC,MATxB,OAEcG,EAFd,OAYQrB,EAAcqB,GAZtB,gDAcQrB,EAAc,IAdtB,0DA1KiC,sBA4DjCsB,qBAAU,WACN,GAAI9B,GA7DyB,qCA8DzB+B,CAAQjK,YAAkBkI,SAEvB,GAAIlJ,EAAM,CACb,IAAI4K,EAAc5K,EAClB4K,EAAYN,SAAQ,SAAAK,GAChBA,EAAMrN,MAAQqN,EAAM1B,GACpB0B,EAAME,MAAQC,GAASH,MAE3BjB,EAAckB,GACM,IAAhB5K,EAAK8B,aACgBrB,IAAjBzE,GAA8B+M,GAMvBC,GAAoBD,KAL3BgB,IAAsB,GACtBP,EAAa,MACbK,GAAc,MACdF,GAAY,IACZzN,EAAS,KAAM,KAAM0J,EAAIqD,KAS7BO,EAAa,WACQ/I,IAAjBzE,GAA8B+M,GAC9BgB,IAAsB,GACtBF,GAAc7N,IACPgN,GAAoBD,GAC3BgB,IAAsB,SAK9BL,EAAc,MAEnB,CAACR,EAAUlJ,IAEdgL,qBAAU,WACNE,QAAQC,IAAInP,QACSyE,IAAjBzE,GACA6N,GAAc7N,KAEnB,CAACA,IAEJgP,qBAAU,iBACcvK,IAAfmJ,IAA2C,OAAfA,IAAwBE,IAM9Cd,GAAoBc,MALvBP,EACArN,EAASqN,EAAUN,GAAeM,EAAW3D,EAAIqD,GAEjD/M,EAAS,KAAM,KAAM0J,EAAIqD,MASlC,CAACnD,GAAUyD,IACdyB,qBAAU,WAGN,GAFAxB,EAAalM,GAETmM,GACIA,EAAW3H,OAAS,EAEpB,GAAIxE,EACA8N,GAAkB9N,QAEjB,QAAmBmD,IAAfmJ,IAA2C,OAAfA,GAAqB,CACtD,IAAIyB,EAAS5B,EAAW6B,MAAK,SAAAC,GAAG,OAAIA,EAAItC,KAAkBW,MAEtDwB,GADAC,EACkBzB,GAEA,WAGjBZ,GACLoC,GAAkB,QAI/B,CAAC3B,EAAYnM,IAmDhB,IAAM8N,GAAoB,SAAC9N,GACvB,GAAImM,EAAW3H,OAAS,EAAG,CACvB,IAAI0J,EAAa,KACbC,EAAU,YAAOhC,GACrB,QAAchJ,IAAVnD,GAAiC,OAAVA,EACvBmO,EAAWnB,SAAQ,SAAClE,EAAKmE,GAEjBmB,OAAOpO,KAAWoO,OAAOtF,EAAI6C,MAC7BuC,EAAU,2BACHpF,GADG,IAEN9I,MAAO8I,EAAI6C,GACX4B,MAAOC,GAAS1E,aAIzB,CACH,IAAIuF,EAAYF,EAAW,GAC3BD,EAAU,2BACHG,GADG,IAENrO,MAAOqO,EAAU1C,GACjB4B,MAAOC,GAASa,KAIxBnC,EAAagC,GACbtB,GAAYsB,KAGdV,GAAW,SAACH,GACd,IAAIP,EAAM,GAgBV,OAfIjB,IACIC,EACAD,EAAWmB,SAAQ,SAAChN,EAAOiN,GAEnBH,EADAG,IAAUpB,EAAWrH,OAAS,EACxBsI,EAAII,OAAOG,EAAMrN,IAEjB8M,EAAII,OAAOG,EAAMrN,GAAQ8L,MAIvCD,EAAWmB,SAAQ,SAAChN,GAChB8M,EAAMA,EAAII,OAAOG,EAAMrN,QAI5B8M,GAqBX,OACI,oCACI,yBAAKtO,UAAWD,EAAQ6B,MAEP,WAAZ2L,EACG,kBAACtF,EAAD,CACIC,OAAQA,EACRC,QAAS+B,GACT7C,OAAQA,EACRF,YAAaA,EACbC,YAAaA,EACbtF,OACI,kBAACwH,EAAD,eACIQ,GAAIA,EACJzG,SAAUA,EACVpD,UAAWA,EACX8J,YAAaA,EACbG,WAAYA,GACZF,SAAUA,GACV5H,MAAOA,EACP6H,mBArOD,SAACkE,GACxBF,IAAsB,GACtBP,EAAa,MACbK,GAAc,MACdF,GAAY,IACZzN,EAAS,KAAM,KAAM0J,EAAIqD,IAiODhN,SAAUA,EACVD,aAAc4N,IACVxM,KAIZ,yBAAKS,MAAO,CAAEK,MAAOA,IACjB,kBAAC,IAAD,CACI0N,WAAS,EACTC,KAAMjG,EACNkG,uBAAuB,EACvBC,WAAYvD,EACZwD,0BAA0B,EAC1BC,qBAAqB,EACrBC,aAAa,EACbC,WAAYnI,EACZ9H,SAAU8N,GACVoC,QAAS3C,EACT5D,YAAY,YACZwG,OAAQrJ,EAAaC,EAAaC,EAAaC,GAC/CmJ,iBAAiB,EACjBhP,MAAOiM,EACPgD,iBAAkBC,SAASC,KAC3BC,cAAe,IAEfC,cAAe,WAIb,WAAZtD,EACE,yBAAKxL,MAAO,CAAEK,MAAOA,IACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI2N,KAAMjG,EACN7J,UAAWA,EACXuB,MAAOiM,EACPjC,aAAYnI,EACZlD,SAAUA,EACV2Q,cAAY,EACZ/Q,QAASA,EACTuQ,QAAS3C,EACT4C,OAhFV,SAAClJ,GACnB,MACI,CACIqC,MAAO,SAAC1B,GAAD,mBAAC,eACDA,GADA,IAEH+I,UAAW,OACXlO,MAAOV,EAAM6O,QAAQC,KAAKzO,QAC1B,UAAW,CACP0O,KAAM,cAGdC,eAAgB,SAACnJ,EAAMoJ,GAAP,mBAAC,eACVpJ,GADS,IAEZwB,QAAS,eAEbzB,WAAY,SAAAC,GAAI,kCAAUA,GAAV,IAAgBX,OAAQA,MAiEZgK,CAAchK,GACtB4I,WAAY9E,EACZ/K,SAAU8N,GACVnE,YAAaA,EACbqG,aAAW,EACXQ,cAAe,IACfH,iBAAkBC,SAASC,KAE3BE,cAAe,WAIzB,QA4C1B7D,EAAkBsE,aAAe,CAC7BnE,aAAc,QACdE,WAAY,CAAC,SACbE,QAAS,SACTlG,OAAQ,KACRF,YAAa,OACbC,YAAa,OACbhF,MAAO,OACP6K,oBAAoB,GAET/K,iBAptBA,SAAAC,GAAK,MAAK,CACrBP,KAAM,GAON6J,OAAQ,CACJzJ,QAAS,OAET,UAAW,CACPyH,OAAQ,YAGhByC,eAAgB,CAEZqF,SAAU,OACV3H,KAAM,EACN3H,WAAY,UAEhBmK,iBAAkB,CACd5C,QAAQ,GAAD,OAAKrH,EAAMqP,QAAQ,GAAnB,cAA2BrP,EAAMqP,QAAQ,GAAzC,OAEXxF,YAAa,CACTjJ,SAAU,IAEdgH,YAAa,CACT3B,SAAU,WACVS,KAAM,EACN9F,SAAU,GACVF,MAAO,uBAEXiJ,oBAAqB,CACjB1D,SAAU,WACVS,KAAM,EACN9F,SAAU,GACVF,MAAO,uBAEX0G,gBAAiB,CACbvH,QAAS,OACTwH,QAAS,EACT3G,MAAOC,IAAI,MAEf3C,SAAU,CACN0C,MAAOC,IAAI,SAuqBe,CAAE2O,WAAW,GAAhCvP,CAAwC8K,I,uGCpuBjD0E,EAAaxP,aAAW,SAAAC,GAAK,MAAK,CACtCP,KAAM,CACJ+P,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,MAETC,QAAS,CACPhP,MAAOiP,IAAM,MAEfpP,MAAO,CACLG,MAAOC,IAAI,SAnBIZ,EAqBf,SAAApC,GACF,IACEC,EAOED,EAPFC,QACAyB,EAME1B,EANF0B,MACAP,EAKEnB,EALFmB,WACAD,EAIElB,EAJFkB,SACAE,EAGEpB,EAHFoB,OACAC,EAEErB,EAFFqB,eAGF,GADIrB,EADFuB,WAE8BE,oBAAS,IAAzC,mBAAOwQ,EAAP,KAAiBC,EAAjB,KACA,EAAkCzQ,oBAAS,GAA3C,mBAAO0Q,EAAP,KAAkBC,EAAlB,KAoCA,OAnCAhD,qBAAU,WACR,IAAIiD,EAAS3Q,EAAM4Q,WACnB,GAAIlR,EACEiR,EAAOE,MAAMnR,GACf8Q,GAAY,GAGZA,GAAY,GAGVG,EAAOnM,OAAS,EAClBkM,GAAa,GAEbA,GAAa,GAED,UAAVhR,GACFgR,GAAa,QAEV,GAAI/Q,EAAgB,CACzB,IAAImR,EAAcnR,EAAegR,GACjCH,EAAYM,GAORH,EAAOnM,OAAS,EAClBkM,GAAa,GAEbA,GAAa,MAGhB,CAAC1Q,EAAON,EAAQC,IAEZ8Q,EACLF,EACE,2BAAO/R,UAAW2B,IAAW5B,EAAQ8R,QAAS9R,EAAQ6B,OACnDX,GAGH,2BAAOjB,UAAW2B,IAAW5B,EAAQ2C,MAAO3C,EAAQ6B,OACjDZ,GAGH,QASN0Q,EAAWJ,aAAe,CACxB9P,MAAO,GACPP,WAAY,GACZD,SAAU,IAEG0Q","file":"static/js/8.78693500.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles\r\n} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AmValidate from \"../components/AmValidate\";\r\nimport { indigo, grey, red } from \"@material-ui/core/colors\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"auto\",\r\n    backgroundColor: \"white\",\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.primary.dark\r\n    }\r\n  },\r\n  primary: {\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.primary.dark\r\n    }\r\n  },\r\n  error: {\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.error.main\r\n    }\r\n  },\r\n  default: {\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.default.main\r\n    }\r\n  },\r\n  required: {\r\n    color: red[600],\r\n    fontSize: \"18px\"\r\n  }\r\n});\r\n\r\nfunction CustomTextField(props) {\r\n  const {\r\n    classes,\r\n    className,\r\n    styleType,\r\n    defaultValue,\r\n    required,\r\n    onChange,\r\n    onChangeV2,\r\n    onMouseOver,\r\n    onMouseOut,\r\n    onKeyPress,\r\n    onKeyUp,\r\n    onKeyDown,\r\n    onClick,\r\n    onFocus,\r\n    onBlur,\r\n    InputProps = {},\r\n    validate,\r\n    msgError,\r\n    msgSuccess,\r\n    regExp,\r\n    customValidate,\r\n    styleValidate,\r\n    onValidate,\r\n    ...other\r\n  } = props;\r\n\r\n  const [value, setValue] = useState(defaultValue ? defaultValue : \"\");\r\n\r\n  const handleChange = event => {\r\n    if (onChangeV2) {\r\n      setValue(event.target.value);\r\n      onChangeV2(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleMouseOver = event => {\r\n    if (onMouseOver) {\r\n      setValue(event.target.value);\r\n      onMouseOver(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleMouseOut = event => {\r\n    if (onMouseOut) {\r\n      setValue(event.target.value);\r\n      onMouseOut(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleKeyPress = event => {\r\n    if (onKeyPress) {\r\n      setValue(event.target.value);\r\n      onKeyPress(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleKeyDown = event => {\r\n    if (onKeyDown) {\r\n      setValue(event.target.value);\r\n      onKeyDown(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleKeyUp = event => {\r\n    if (onKeyUp) {\r\n      setValue(event.target.value);\r\n      onKeyUp(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleClick = event => {\r\n    if (onClick) {\r\n      setValue(event.target.value);\r\n      onClick(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleFocus = event => {\r\n    if (onFocus) {\r\n      setValue(event.target.value);\r\n      onFocus(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleBlur = event => {\r\n    if (onBlur) {\r\n      setValue(event.target.value);\r\n      onBlur(event.target.value, null, event.target, event);\r\n    } else if (onChange) {\r\n      setValue(event.target.value);\r\n      onChange(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TextField\r\n        size={\"small\"}\r\n        className={classNames(className)}\r\n        InputProps={{\r\n          classes: {\r\n            root: classNames(classes.root, classes[`${styleType}`])\r\n          },\r\n          ...InputProps\r\n        }}\r\n        defaultValue={defaultValue}\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        onMouseOver={handleMouseOver}\r\n        onKeyPress={handleKeyPress}\r\n        onKeyDown={handleKeyDown}\r\n        onMouseOut={handleMouseOut}\r\n        onClick={handleClick}\r\n        onBlur={handleBlur}\r\n        onFocus={handleFocus}\r\n        {...other}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          display: \"inline-flex\",\r\n          alignItems: \"center\",\r\n          ...styleValidate\r\n        }}\r\n      >\r\n        {required ? <label className={classes.required}>*</label> : null}\r\n        {validate ? (\r\n          <AmValidate\r\n            value={value}\r\n            msgSuccess={msgSuccess}\r\n            msgError={msgError}\r\n            customValidate={customValidate}\r\n            regExp={regExp}\r\n            onValidate={onValidate}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nCustomTextField = withStyles(styles)(CustomTextField);\r\n\r\nInputStyle.propTypes = {\r\n  classes: PropTypes.object,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  styleType: PropTypes.string,\r\n  InputProps: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  onChangeV2: PropTypes.func,\r\n  onMouseOver: PropTypes.func,\r\n  onMouseOut: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  validate: PropTypes.bool,\r\n  defaultValue: PropTypes.any\r\n};\r\nconst theme = createMuiTheme({\r\n  status: {\r\n    primary: {\r\n      light: indigo[100],\r\n      main: indigo[400],\r\n      dark: indigo[800],\r\n      contrastText: \"#fff\"\r\n    },\r\n    error: {\r\n      light: red[100],\r\n      main: red[400],\r\n      dark: red[800],\r\n      contrastText: \"#000\"\r\n    },\r\n    default: {\r\n      light: grey[100],\r\n      main: grey[600],\r\n      dark: grey[800],\r\n      contrastText: \"#000\"\r\n    },\r\n    disabled: grey[500]\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nfunction InputStyle(props) {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CustomTextField {...props} />\r\n      {props.children}\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\nexport default InputStyle;\r\n","import React, { useState, useEffect, useContext, useReducer } from 'react';\r\nimport Axios from 'axios';\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment';\r\n// import * as Status from '../Warehouse/Status';\r\nimport queryString from 'query-string'\r\n\r\nconst SettimeAlert = () => {\r\n    //setTimeout(function () {\r\n    //    window.location.replace(\"/login\");\r\n    //}, 2500);\r\n\r\n}\r\n\r\nclass apicall {\r\n\r\n    get(url) {\r\n        return Axios.get(url + \"&token=\" + localStorage.getItem(\"Token\")).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                //alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    post(url, dataR) {\r\n        let data = trimObj(dataR)\r\n        if (data !== undefined) {\r\n            data.token = localStorage.getItem(\"Token\")\r\n        }\r\n        return Axios.post(url, data).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                //alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    put(url, dataR) {\r\n        let data = trimObj(dataR)\r\n        data.token = localStorage.getItem(\"Token\")\r\n        return Axios.put(url, data).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                // alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    delete(url, dataR) {\r\n        let data = trimObj(dataR)\r\n        data.token = localStorage.getItem(\"Token\")\r\n        return Axios.delete(url, data).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                //alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    all(utlArray) {\r\n        return Axios.all(utlArray).then(res => {\r\n            return res\r\n        })\r\n    }\r\n}\r\n\r\nconst createQueryString = (select) => {\r\n    let queryS = select.queryString + (select.t === \"\" ? \"?\" : \"?t=\" + select.t)\r\n        + (select.q === \"\" ? \"\" : \"&q=\" + select.q)\r\n        + (select.f === \"\" ? \"\" : \"&f=\" + select.f)\r\n        + (select.g === \"\" ? \"\" : \"&g=\" + select.g)\r\n        + (select.s === \"\" ? \"\" : \"&s=\" + select.s)\r\n        + (select.sk === \"\" ? \"\" : \"&sk=\" + select.sk)\r\n        + (select.l === 0 ? \"\" : \"&l=\" + select.l)\r\n        + (select.all === \"\" ? \"\" : \"&all=\" + select.all)\r\n        + \"&isCounts=true\"\r\n    return queryS\r\n}\r\n\r\nconst IsEmptyObject = (obj) => {\r\n    if (typeof (obj) === \"object\")\r\n        return Object.keys(obj).length === 0 && obj.constructor === Object\r\n    else\r\n        return false;\r\n}\r\n\r\nconst Clone = (obj) => {\r\n    let copy;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = Clone(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = Clone(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n}\r\n\r\nconst DateTimeConverter = (value, format) => {\r\n    const date = moment(value);\r\n    return date.format(format);\r\n}\r\n\r\n// const GenerateDropDownStatus = (status) => {\r\n//     let statusList = []\r\n//     statusList.push({ 'value': \"*\", 'label': \"All\" })\r\n//     Status[status].forEach(row => {\r\n//         statusList.push({ 'value': row.code, 'label': row.status })\r\n//     })\r\n//     return statusList\r\n// }\r\n\r\nfunction FilterURL(seacrhlocation, select) {\r\n    const search = queryString.parse(encodeURI(seacrhlocation))\r\n    var url = select;\r\n    var sel = [];\r\n    if (url.q) {\r\n        sel = JSON.parse(url.q)\r\n    }\r\n    for (let value in search) {\r\n        if (search[value]) {\r\n            if (search[value] !== \"\") {\r\n                sel.push({ \"f\": value, \"c\": \"like\", \"v\": \"*\" + encodeURIComponent(search[value]) + \"*\" })\r\n            }\r\n        }\r\n    }\r\n    url[\"q\"] = JSON.stringify(sel)\r\n    return url;\r\n}\r\n\r\nfunction trimObj(obj) {\r\n    if (obj === null) {\r\n        return null\r\n    }\r\n\r\n    if (!Array.isArray(obj) && typeof obj != 'object') return obj;\r\n    return Object.keys(obj).reduce(function (acc, key) {\r\n        acc[key.trim()] = typeof obj[key] == 'string' ? obj[key].trim() : trimObj(obj[key]);\r\n        return acc;\r\n    }, Array.isArray(obj) ? [] : {});\r\n}\r\n\r\nexport { apicall, createQueryString, Clone, DateTimeConverter, FilterURL, IsEmptyObject }\r\n","import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { colors } from 'react-select/lib/theme';\r\nimport { grey, red } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport PropTypes from 'prop-types';\r\nimport ReactSelect, { components } from 'react-select';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AmInput from \"./AmInput\";\r\nimport { apicall, createQueryString } from './function/CoreFunction2'\r\n\r\nconst Axios = new apicall();\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        // width: 'auto',\r\n    },\r\n    // input: {\r\n    //     display: 'flex',\r\n    //     // padding: '7px 0 6px',\r\n    // },\r\n    input2: {\r\n        display: 'flex',\r\n        // padding: '5px 8px',\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    valueContainer: {\r\n        // display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    noOptionsMessage: {\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n    },\r\n    singleValue: {\r\n        fontSize: 14,\r\n    },\r\n    placeholder: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    placeholderDisabled: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.18)',\r\n    },\r\n    iconCloseButton: {\r\n        display: 'none',\r\n        padding: 0,\r\n        color: red[500]\r\n    },\r\n    required: {\r\n        color: red[600]\r\n    }\r\n});\r\n\r\nconst selectStyles = (ddlMinWidth, ddlMaxWidth, zIndex) => {\r\n    const shadow = 'hsla(218, 50%, 10%, 0.1)';\r\n    return (\r\n        {\r\n            control: provided => ({\r\n                ...provided,\r\n                margin: 4,\r\n            }),\r\n            menu: provided => ({\r\n                ...provided, borderRadius: '0 0 4px 4px', backgroundColor: 'white',\r\n                margin: '4px 0 0 -4px', minWidth: ddlMinWidth, maxWidth: ddlMaxWidth,\r\n                boxShadow: `0 0 0 1px ${shadow}, 0 4px 11px ${shadow}`\r\n            }),\r\n            menuPortal: base => ({ ...base, zIndex: zIndex })\r\n        })\r\n};\r\n\r\nconst Dropdown = (props) => {\r\n    const { children, isOpen, target, onClose, zIndex, ddlMinWidth, ddlMaxWidth } = props;\r\n    return (<div style={{ position: 'relative' }}>\r\n        {target}\r\n        {isOpen ? <Menu zindexval={zIndex} ddlminwidth={ddlMinWidth} ddlmaxwidth={ddlMaxWidth}>{children}</Menu> : null}\r\n        {isOpen ? <Blanket onClick={onClose} /> : null}\r\n    </div>\r\n    );\r\n};\r\n\r\nconst Menu = props => {\r\n    const shadow = 'hsla(218, 50%, 10%, 0.1)';\r\n    return (\r\n        <div\r\n            style={{\r\n                minWidth: props.ddlminwidth,\r\n                maxWidth: props.ddlmaxwidth,\r\n                backgroundColor: 'white',\r\n                borderRadius: '4px 4px 0 0',\r\n                boxShadow: `0 0 0 1px ${shadow}`,\r\n                marginTop: 8,\r\n                marginBottom: 0,\r\n                // padding: '1px 0px',\r\n                // position: 'relative',\r\n                position: 'absolute',\r\n                zIndex: props.zindexval,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\nconst Blanket = props => (\r\n    <div\r\n        style={{\r\n            bottom: 0,\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        }}\r\n        {...props}\r\n    />\r\n);\r\n\r\nconst Svg = p => (\r\n    <svg\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        focusable=\"false\"\r\n        role=\"presentation\"\r\n        {...p}\r\n    />\r\n);\r\nconst DropdownSearch = () => (\r\n    <div style={{ color: colors.neutral20, height: 24, width: 32 }}>\r\n        <Svg>\r\n            <path\r\n                d=\"M16.436 15.085l3.94 4.01a1 1 0 0 1-1.425 1.402l-3.938-4.006a7.5 7.5 0 1 1 1.423-1.406zM10.5 16a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11z\"\r\n                fill=\"currentColor\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n        </Svg>\r\n    </div>\r\n);\r\n\r\nconst DropDownInputs = withStyles(theme => ({\r\n    iconCloseButton: {\r\n        // display: 'none',\r\n        padding: 0,\r\n        color: grey[400],\r\n        fontSize: 16,\r\n        '&:hover': {\r\n            color: grey[800],\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'flex',\r\n        marginLeft: 0, //8\r\n        flex: 1,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n        width: '100%',\r\n        // padding: '8px 0 5px'\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n    required: {\r\n        color: red[600],\r\n    }\r\n}))(props => {\r\n    const { classes, id, placeholder, styleType, valueKey, onHandleClickClear,\r\n        toggleOpen, onHandleDelete, disabled, required, width, ...other } = props;\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'inline-flex', alignItems: 'center' }} >\r\n            <AmInput\r\n                //fullWidth \r\n                id={id} readOnly={true} autoComplete=\"off\"\r\n                disabled={disabled}\r\n                required={required}\r\n                placeholder={placeholder} value={valueKey}\r\n                style={{ width: width }}\r\n                styleType={styleType}\r\n                // className={classes.input}\r\n                onFocus={disabled ? null : valueKey ? null : (val, obj, element, event) => element.blur()}\r\n                onClick={disabled ? null : (val, obj, ele, event) => {\r\n                    event.cancelBubble = true;\r\n                    toggleOpen();\r\n                }}\r\n                InputProps={{\r\n                    inputProps: {\r\n                        className: classes.input,\r\n                    },\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {disabled ? null : valueKey ?\r\n                                <CloseIcon className={classes.iconCloseButton}\r\n                                    style={{ zIndex: 900 }}\r\n                                    size=\"small\" aria-label=\"Close\" onClick={onHandleClickClear} />\r\n                                : null}\r\n                            <IconButton className={classes.iconButton} disabled={disabled} size=\"small\" aria-label=\"Search\" onClick={toggleOpen}>\r\n                                <ArrowDropDownIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                {...other}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nfunction NoOptionsMessage(props) {\r\n    return (\r\n        <Typography\r\n            color=\"textSecondary\"\r\n            className={props.selectProps.classes.noOptionsMessage}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n    return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props) {\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <AmInput\r\n                fullWidth\r\n                styleType={props.selectProps.styleType}\r\n                disabled={props.isDisabled}\r\n                required={props.selectProps.required}\r\n                InputProps={{\r\n                    inputComponent,\r\n                    inputProps: {\r\n                        className: props.selectProps.classes.input2,\r\n                        inputRef: props.innerRef,\r\n                        children: props.children,\r\n                        ...props.innerProps,\r\n                    },\r\n                }}\r\n                {...props.selectProps.textFieldProps}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nfunction Placeholder(props) {\r\n    return (\r\n        <Typography\r\n            // color=\"textSecondary\"\r\n            className={props.isDisabled ? props.selectProps.classes.placeholderDisabled : props.selectProps.classes.placeholder}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction SingleValue(props) {\r\n    return (\r\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction ValueContainer(props) {\r\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nconst DropdownIndicator1 = withStyles(theme => ({\r\n    root: {\r\n        marginTop: 2,\r\n        marginBottom: 2\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n}))(props => {\r\n    const { classes, ...other } = props;\r\n    return (\r\n        // <components.DropdownIndicator {...other}>\r\n        <div className={classes.root} >\r\n            <IconButton className={classes.iconButton} size=\"small\" aria-label=\"select\">\r\n                <ArrowDropDownIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </div>\r\n        // </components.DropdownIndicator>\r\n    );\r\n});\r\n\r\nconst CustomClearText = withStyles(theme => ({\r\n    iconCloseButton: {\r\n        color: grey[400],\r\n        fontSize: 14,\r\n        '&:hover': {\r\n            color: grey[800],\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n}))(props => {\r\n    return (\r\n        <CloseIcon className={props.classes.iconCloseButton} size=\"small\" aria-label=\"Close\" />\r\n    )\r\n});\r\nconst ClearIndicator = (props) => {\r\n    const { children = <CustomClearText />, getStyles, innerProps: { ref, ...restInnerProps } } = props;\r\n    return (\r\n        <div {...restInnerProps} ref={ref} style={getStyles('clearIndicator', props)}>\r\n            {/* <div style={{ padding: '0px 0px', display: 'inline-block' }}> */}\r\n            {children}\r\n            {/* </div> */}\r\n        </div>\r\n    );\r\n};\r\nconst MenuCustom = props => {\r\n    // const { children, getStyles, innerProps: { ref, ...restInnerProps } } = props;\r\n    // return (\r\n    //     <div {...restInnerProps} ref={ref} style={getStyles('menu', props)}>\r\n    //         {children}\r\n    //     </div>\r\n    // );\r\n};\r\n\r\nconst componentNormal = {\r\n    Control,\r\n    Placeholder,\r\n    SingleValue,\r\n    // Menu: MenuCustom,\r\n    ValueContainer,\r\n    NoOptionsMessage,\r\n    DropdownIndicator: DropdownIndicator1,\r\n    ClearIndicator,\r\n    IndicatorSeparator: null\r\n};\r\nconst componentSearch = {\r\n    DropdownIndicator: DropdownSearch,\r\n    IndicatorSeparator: null\r\n};\r\nconst DropdownComponent = (props) => {\r\n    const {\r\n        id,\r\n        disabled,\r\n        required,\r\n        classes,\r\n        theme,\r\n        zIndex,\r\n        placeholder,\r\n        styleType,\r\n        value,\r\n        defaultValue,\r\n        returnDefaultValue,\r\n        autoDefaultValue,\r\n        fieldDataKey,\r\n        queryApi,\r\n        data,\r\n        width,\r\n        ddlMinWidth,\r\n        ddlMaxWidth,\r\n        fieldLabel,\r\n        labelPattern,\r\n        onChange,\r\n        ddlType,\r\n        ...other } = props;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [valueData, setValueData] = useState(null);\r\n    const [optionList, setOptionList] = useState([]);\r\n    const [valueKey, setValueKey] = useState(\"\");\r\n    const [defaultVal, setDefaultVal] = useState(null);\r\n    const [autoDefaultVal, setAutoDefaultVal] = useState(null);\r\n    const [upreturnDefaultValue, setReturnDefaultValue] = useState(returnDefaultValue);\r\n\r\n    const toggleOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n    const onSelectChange = (e) => {\r\n        setOpen(!isOpen)\r\n        if (e) {\r\n            setReturnDefaultValue(false)\r\n            setDefaultVal(null);\r\n            setValueData(e);\r\n            getValueKey(e);\r\n            onChange(e.value, e, id, fieldDataKey);\r\n        } else {\r\n            setReturnDefaultValue(false)\r\n            setValueData(null);\r\n            setDefaultVal(null);\r\n            setValueKey(\"\");\r\n            onChange(null, null, id, fieldDataKey)\r\n        }\r\n    };\r\n    const onHandleClickClear = (e) => {\r\n        setReturnDefaultValue(false)\r\n        setValueData(null);\r\n        setDefaultVal(null);\r\n        setValueKey(\"\");\r\n        onChange(null, null, id, fieldDataKey)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (queryApi) {\r\n            getData(createQueryString(queryApi));\r\n            \r\n        } else if (data) {\r\n            var dataOptions = data;\r\n            dataOptions.forEach(datas => {\r\n                datas.value = datas[fieldDataKey];\r\n                datas.label = getLabel(datas);\r\n            });\r\n            setOptionList(dataOptions);\r\n            if (data.length === 0) {\r\n                if (defaultValue !== undefined && returnDefaultValue) {\r\n                    setReturnDefaultValue(false)\r\n                    setValueData(null);\r\n                    setDefaultVal(null);\r\n                    setValueKey(\"\");\r\n                    onChange(null, null, id, fieldDataKey)\r\n                } else if (autoDefaultValue && returnDefaultValue) {\r\n                    setReturnDefaultValue(false)\r\n                    setValueData(null);\r\n                    setDefaultVal(null);\r\n                    setValueKey(\"\");\r\n                    onChange(null, null, id, fieldDataKey)\r\n                }\r\n            } else {\r\n                setValueData(null);\r\n                if (defaultValue !== undefined && returnDefaultValue) {\r\n                    setReturnDefaultValue(true)\r\n                    setDefaultVal(defaultValue);\r\n                } else if (autoDefaultValue && returnDefaultValue) {\r\n                    setReturnDefaultValue(true)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            setOptionList([]);\r\n        }\r\n    }, [queryApi, data]);\r\n\r\n    useEffect(() => {\r\n        console.log(defaultValue)\r\n        if (defaultValue !== undefined) {\r\n            setDefaultVal(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n        if ((defaultVal !== undefined && defaultVal !== null) && upreturnDefaultValue) {\r\n            if (valueData) {\r\n                onChange(valueData[fieldDataKey], valueData, id, fieldDataKey);\r\n            } else {\r\n                onChange(null, null, id, fieldDataKey);\r\n            }\r\n        } else if (autoDefaultValue && upreturnDefaultValue) {\r\n            if (valueData) {\r\n                onChange(valueData[fieldDataKey], valueData, id, fieldDataKey);\r\n            } else {\r\n                onChange(null, null, id, fieldDataKey);\r\n            }\r\n        }\r\n    }, [valueKey, valueData]);\r\n    useEffect(() => {\r\n        setValueData(value)\r\n\r\n        if (optionList) {\r\n            if (optionList.length > 0) {\r\n\r\n                if (value) {\r\n                    getDefaultByValue(value);\r\n                }\r\n                else if (defaultVal !== undefined && defaultVal !== null) {\r\n                    let hasOpt = optionList.some(opt => opt[fieldDataKey] === defaultVal)\r\n                    if (hasOpt) {\r\n                        getDefaultByValue(defaultVal);\r\n                    } else {\r\n                        getDefaultByValue(null);\r\n                    }\r\n                }\r\n                else if (autoDefaultValue) {\r\n                    getDefaultByValue(null);\r\n                }\r\n            }\r\n        }\r\n    }, [optionList, value]);\r\n\r\n    function getValueKey(showValueData) {\r\n        let str = \"\";\r\n        if (!isEmpty(showValueData)) {\r\n            if (fieldLabel) {\r\n                if (labelPattern) {\r\n                    fieldLabel.forEach((value, index) => {\r\n                        if (index === fieldLabel.length - 1) {\r\n                            str = str.concat(showValueData[value]);\r\n                        } else {\r\n                            str = str.concat(showValueData[value], labelPattern);\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    fieldLabel.forEach((value) => {\r\n                        str = str.concat(showValueData[value]);\r\n                    })\r\n                }\r\n\r\n            }\r\n        }\r\n        setValueKey(str);\r\n    }\r\n\r\n    async function getData(qryString) {\r\n        try {\r\n            const resData = await Axios.get(qryString).then(res => {\r\n                if (res.data.datas) {\r\n                    var dataOptions = res.data.datas;\r\n                    dataOptions.forEach(datas => {\r\n                        datas.value = datas[fieldDataKey];\r\n                        datas.label = getLabel(datas);\r\n                    });\r\n                    return (dataOptions);\r\n                }\r\n            });\r\n            setOptionList(resData);\r\n        } catch (err) {\r\n            setOptionList([]);\r\n        }\r\n    }\r\n    function isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const getDefaultByValue = (value) => {\r\n        if (optionList.length > 0) {\r\n            let valuearray = null;\r\n            let dataoption = [...optionList];\r\n            if (value !== undefined && value !== null) {\r\n                dataoption.forEach((val, index) => {\r\n\r\n                    if (String(value) === String(val[fieldDataKey])) {\r\n                        valuearray = ({\r\n                            ...val,\r\n                            value: val[fieldDataKey],\r\n                            label: getLabel(val),\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                let firstdata = dataoption[0];\r\n                valuearray = ({\r\n                    ...firstdata,\r\n                    value: firstdata[fieldDataKey],\r\n                    label: getLabel(firstdata),\r\n                })\r\n            }\r\n\r\n            setValueData(valuearray);\r\n            getValueKey(valuearray);\r\n        }\r\n    }\r\n    const getLabel = (datas) => {\r\n        var str = \"\";\r\n        if (fieldLabel) {\r\n            if (labelPattern) {\r\n                fieldLabel.forEach((value, index) => {\r\n                    if (index === fieldLabel.length - 1) {\r\n                        str = str.concat(datas[value]);\r\n                    } else {\r\n                        str = str.concat(datas[value], labelPattern);\r\n                    }\r\n                })\r\n            } else {\r\n                fieldLabel.forEach((value) => {\r\n                    str = str.concat(datas[value]);\r\n                })\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    const selectStyles2 = (zIndex) => {\r\n        return (\r\n            {\r\n                input: (base) => ({\r\n                    ...base,\r\n                    textAlign: \"left\",\r\n                    color: theme.palette.text.primary,//rgba(0, 0, 0, 0.87)\r\n                    '& input': {\r\n                        font: 'inherit',\r\n                    },\r\n                }),\r\n                clearIndicator: (base, state) => ({\r\n                    ...base,\r\n                    padding: '2px 0 0 0',\r\n                }),\r\n                menuPortal: base => ({ ...base, zIndex: zIndex })\r\n            })\r\n    };\r\n    return (\r\n        <>\r\n            <div className={classes.root} >\r\n\r\n                {ddlType === \"search\" ?\r\n                    <Dropdown\r\n                        isOpen={isOpen}\r\n                        onClose={toggleOpen}\r\n                        zIndex={zIndex}\r\n                        ddlMinWidth={ddlMinWidth}\r\n                        ddlMaxWidth={ddlMaxWidth}\r\n                        target={\r\n                            <DropDownInputs\r\n                                id={id}\r\n                                disabled={disabled}\r\n                                styleType={styleType}\r\n                                placeholder={placeholder}\r\n                                toggleOpen={toggleOpen}\r\n                                valueKey={valueKey}\r\n                                width={width}\r\n                                onHandleClickClear={onHandleClickClear}\r\n                                required={required}\r\n                                defaultValue={defaultVal}\r\n                                {...other}\r\n                            />\r\n                        }\r\n                    >\r\n                        <div style={{ width: width }}>\r\n                            <ReactSelect\r\n                                autoFocus\r\n                                name={id}\r\n                                backspaceRemovesValue={false}\r\n                                components={componentSearch}\r\n                                controlShouldRenderValue={false}\r\n                                hideSelectedOptions={false}\r\n                                isClearable={false}\r\n                                menuIsOpen={isOpen}\r\n                                onChange={onSelectChange}\r\n                                options={optionList}\r\n                                placeholder=\"Search...\"\r\n                                styles={selectStyles(ddlMinWidth, ddlMaxWidth, zIndex)}\r\n                                tabSelectsValue={false}\r\n                                value={valueData}\r\n                                menuPortalTarget={document.body}\r\n                                maxMenuHeight={300}\r\n                                // menuPosition={'fixed'}\r\n                                menuPlacement={'auto'}\r\n                            />\r\n                        </div>\r\n                    </Dropdown>\r\n                    : ddlType === \"normal\" ?\r\n                        <div style={{ width: width }}>\r\n                            <NoSsr>\r\n                                <ReactSelect\r\n                                    name={id}\r\n                                    styleType={styleType}\r\n                                    value={valueData}\r\n                                    isDisabled={disabled ? true : false}\r\n                                    required={required}\r\n                                    isSearchable\r\n                                    classes={classes}\r\n                                    options={optionList}\r\n                                    styles={selectStyles2(zIndex)}\r\n                                    components={componentNormal}\r\n                                    onChange={onSelectChange}\r\n                                    placeholder={placeholder}\r\n                                    isClearable\r\n                                    maxMenuHeight={300}\r\n                                    menuPortalTarget={document.body}\r\n                                    // menuPosition={'fixed'} \r\n                                    menuPlacement={'auto'}\r\n                                />\r\n                            </NoSsr>\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nDropdownComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    // id: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    defaultValue: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    data: PropTypes.array,\r\n    queryApi: PropTypes.object,\r\n    width: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    ddlMinWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    ddlMaxWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    fieldDataKey: PropTypes.string.isRequired,\r\n    labelPattern: PropTypes.string,\r\n    fieldLabel: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    ddlType: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    zIndex: PropTypes.number,\r\n    returnDefaultValue: PropTypes.bool,\r\n    autoDefaultValue: PropTypes.bool\r\n}\r\nDropdownComponent.defaultProps = {\r\n    fieldDataKey: \"value\",\r\n    fieldLabel: [\"label\"],\r\n    ddlType: \"normal\",\r\n    zIndex: 9999,\r\n    ddlMinWidth: 'auto',\r\n    ddlMaxWidth: 'auto',\r\n    width: 'auto',\r\n    returnDefaultValue: false\r\n}\r\nexport default withStyles(styles, { withTheme: true })(DropdownComponent);","import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\n\r\nconst AmValidate = withStyles(theme => ({\r\n  root: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  },\r\n  success: {\r\n    color: green[500]\r\n  },\r\n  error: {\r\n    color: red[800]\r\n  }\r\n}))(props => {\r\n  const {\r\n    classes,\r\n    value,\r\n    msgSuccess,\r\n    msgError,\r\n    regExp,\r\n    customValidate,\r\n    onValidate\r\n  } = props;\r\n  const [resValid, setResValid] = useState(true);\r\n  const [showValid, setShowValid] = useState(true);\r\n  useEffect(() => {\r\n    var values = value.toString();\r\n    if (regExp) {\r\n      if (values.match(regExp)) {\r\n        setResValid(true);\r\n        //onValidate(true, msgSuccess)\r\n      } else {\r\n        setResValid(false);\r\n        //onValidate(false, msgError)\r\n      }\r\n      if (values.length > 0) {\r\n        setShowValid(true);\r\n      } else {\r\n        setShowValid(false);\r\n      }\r\n      if (regExp == \"/^.+$/\") {\r\n        setShowValid(true);\r\n      }\r\n    } else if (customValidate) {\r\n      let checkCustom = customValidate(values);\r\n      setResValid(checkCustom);\r\n      if (checkCustom) {\r\n        //onValidate(true, msgSuccess)\r\n      } else {\r\n        //onValidate(false, msgError)\r\n      }\r\n\r\n      if (values.length > 0) {\r\n        setShowValid(true);\r\n      } else {\r\n        setShowValid(false);\r\n      }\r\n    }\r\n  }, [value, regExp, customValidate]);\r\n\r\n  return showValid ? (\r\n    resValid ? (\r\n      <label className={classNames(classes.success, classes.root)}>\r\n        {msgSuccess}\r\n      </label>\r\n    ) : (\r\n      <label className={classNames(classes.error, classes.root)}>\r\n        {msgError}\r\n      </label>\r\n    )\r\n  ) : null;\r\n});\r\nAmValidate.propTypes = {\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  msgSuccess: PropTypes.string,\r\n  msgError: PropTypes.string,\r\n  regExp: PropTypes.any,\r\n  customValidate: PropTypes.func\r\n};\r\nAmValidate.defaultProps = {\r\n  value: \"\",\r\n  msgSuccess: \"\",\r\n  msgError: \"\"\r\n};\r\nexport default AmValidate;\r\n"],"sourceRoot":""}