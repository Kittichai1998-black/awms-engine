{"version":3,"sources":["components/AmButton.js","components/function/Clone.js","views/pageComponent/AmDashboardChart/AmChartBar.js","views/pageComponent/AmDashboardChart/AmChartPie.js","views/pageComponent/AmDashboardChart/AmChartLine.js","views/pageComponent/AmDashboardChart/AmChartTable.js","views/pageComponent/AmDashboardChart/AmDashboardChart.js","views/page/Dashboard/DashboardSummary.js"],"names":["withStyles","theme","root","fontWeight","color","textTransform","lineHeight","width","fontFamily","join","boxShadow","transition","add","border","backgroundColor","green","add_clear","grey","add_outline","borderColor","delete","red","delete_clear","delete_outline","confirm","indigo","confirm_clear","confirm_outline","info","lightBlue","info_clear","info_outline","warning","yellow","orange","warning_clear","amber","warning_outline","default","default_clear","default_outline","dark","dark_clear","dark_outline","props","children","classes","className","styleType","onClick","onMouseDown","onMouseUp","append","other","t","useTranslation","textShow","Array","isArray","split","reduce","textAll","text","trim","substring","length","classNames","event","target","Clone","obj","copy","Date","setTime","getTime","i","len","Object","attr","hasOwnProperty","Error","Axios","apicall","GenerateChart","chartConfig","chartContainer","useRef","useState","setChartInstance","useEffect","current","get","window","apipath","spname","then","res","data","datas","console","log","labels","map","e","datasets","datalist","key","push","numDatasets","Set","item","_label","_data","parseInt","x","_backgroundColor","_hoverBackgroundColor","_hoverBorderColor","_hoverBorderWidth","_borderColor","_borderWidth","_borderSkipped","datasetTemp","label","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","borderWidth","borderSkipped","datalabels","title","defaultOptions","display","options_title_text","fontColor","options_title_fontColor","fontSize","options_title_fontSize","position","options_title_position","responsive","legend","options_legend_position","fullWidth","scales","xAxes","offset","scaleLabel","scales_xAxes_labelString","labelString","yAxes","ticks","beginAtZero","scales_yAxes_labelString","chart","type","options","newChartInstance","Chart","catch","error","ref","style","borderAlign","weight","y","_fill","_hoverBorderCapStyle","_hoverBorderDash","_hoverBorderDashOffset","_hoverBorderJoinStyle","_borderCapStyle","_borderDash","_borderDashOffset","_showLine","_lineTension","_order","_pointBackgroundColor","_pointBorderColor","_pointBorderWidth","_pointHitRadius","_pointHoverBackgroundColor","_pointHoverBorderColor","_pointHoverBorderWidth","_pointHoverRadius","_pointRadius","_pointRotation","_pointStyle","fill","useStyles","makeStyles","paper","overflowX","marginBottom","spacing","table","minWidth","showTable","setShowTable","subTitle","dataHeader","_header","_position","_width","_bgColor","_borderRight","_fontColor","borderRight","dataTitle","tempTable","genTableRow","dataRows","marginTop","textAlign","TableContainer","component","Paper","Table","size","TableHead","TableRow","row","idx","TableCell","align","TableBody","rowx","idxs","scope","React","createRef","DashboardChartComponent","time","format","showTime","chartConfigs","delay","isFullScreen","clock","propsTime","date","setDate","dateClient","dateServer","dbTime","timerID","setInterval","runningCurrentDate","clearInterval","localStorage","getItem","currentDateTime","Moment","useClock","innerWidth","height","innerHeight","set_width_height","time_show","chartCreateShow","setChartCreateShow","setTimeout","configs","AmChartBar","AmChartPie","AmChartLine","AmChartTable","undefined","newChartCreateShow","index","Grid","container","col","md","Typography","gutterBottom","paddingTop","paddingGrid","direction","justify","alignItems","xs","sm","xl","AmButton","input","document","getElementById","html2canvas","canvas","canvaswidth","canvasheight","imgData","toDataURL","pdf","jsPDF","orientation","unit","addImage","save","startIcon","id","defaultProps","paddingRight","leftIcon","marginRight","ChartJS","AmDashboardChart"],"mappings":"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","file":"static/js/150.3d42f810.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    red,\r\n    purple,\r\n    indigo,\r\n    blue,\r\n    lightBlue,\r\n    green,\r\n    lightGreen,\r\n    yellow,\r\n    amber,\r\n    grey,\r\n    blueGrey,\r\n    brown,\r\n    orange\r\n} from '@material-ui/core/colors';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// 1. We define the styles.\r\nconst styles = theme => ({\r\n    root: {\r\n        fontWeight: '500',\r\n        color: '#fff',\r\n        textTransform: 'none',\r\n        lineHeight: 1.45,\r\n        width: 'auto',\r\n        // minWidth: '130px',\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:active': {\r\n            boxShadow: '0 5px 12px rgba(0,0,0,0.4)',\r\n            transition: 'opacity 0.3s ease-in-out',\r\n        }\r\n    },\r\n    add: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[800],\r\n        },\r\n        '&:disabled': {\r\n            color: green[900],\r\n            backgroundColor: green[800],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: green[800],\r\n        }\r\n    },\r\n    add_clear: {\r\n        color: green[900],\r\n        '&:hover': {\r\n            backgroundColor: green[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: green[50],\r\n        }\r\n    },\r\n    add_outline: {\r\n        color: green[900],\r\n        border: '1px solid rgba(76, 175, 80, 0.79)',\r\n        '&:hover': {\r\n            backgroundColor: green[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: green[100],\r\n            borderColor: green[600],\r\n        },\r\n        '&:disabled': {\r\n            color: green[900],\r\n            backgroundColor: green[50],\r\n        }\r\n    },\r\n    delete: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: red[500],\r\n        '&:hover': {\r\n            backgroundColor: red[700],\r\n        },\r\n        '&:disabled': {\r\n            color: red[900],\r\n            backgroundColor: red[700],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: red[700],\r\n        }\r\n    },\r\n    delete_clear: {\r\n        color: red[900],\r\n        '&:hover': {\r\n            backgroundColor: red[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: red[50],\r\n        }\r\n    },\r\n    delete_outline: {\r\n        color: red[900],\r\n        border: '1px solid rgba(183,28,28, 0.79)',\r\n        '&:hover': {\r\n            backgroundColor: red[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: red[100],\r\n            borderColor: red[600],\r\n        },\r\n        '&:disabled': {\r\n            color: red[900],\r\n            backgroundColor: red[50],\r\n        }\r\n    },\r\n    confirm: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: indigo[500],\r\n        '&:hover': {\r\n            backgroundColor: indigo[700],\r\n        },\r\n        '&:disabled': {\r\n            color: indigo[900],\r\n            backgroundColor: indigo[700],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: indigo[700],\r\n        }\r\n    },\r\n    confirm_clear: {\r\n        color: indigo[900],\r\n        '&:hover': {\r\n            backgroundColor: indigo[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: indigo[50],\r\n        }\r\n    },\r\n    confirm_outline: {\r\n        color: indigo[900],\r\n        border: '1px solid rgba(13,71,161,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: indigo[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: indigo[100],\r\n            borderColor: indigo[600],\r\n        },\r\n        '&:disabled': {\r\n            color: indigo[900],\r\n            backgroundColor: indigo[50],\r\n        }\r\n    },\r\n    info: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: lightBlue[400],\r\n        '&:hover': {\r\n            color: '#fff',\r\n            backgroundColor: lightBlue[600],\r\n        },\r\n        '&:disabled': {\r\n            color: lightBlue[900],\r\n            backgroundColor: lightBlue[600],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: lightBlue[600],\r\n        }\r\n    },\r\n    info_clear: {\r\n        color: lightBlue[900],\r\n        '&:hover': {\r\n            backgroundColor: lightBlue[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: lightBlue[50],\r\n        }\r\n    },\r\n    info_outline: {\r\n        color: lightBlue[700],\r\n        border: '1px solid rgba(3,155,229,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: lightBlue[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: lightBlue[100],\r\n            borderColor: lightBlue[200],\r\n        },\r\n        '&:disabled': {\r\n            color: lightBlue[900],\r\n            backgroundColor: lightBlue[50],\r\n        }\r\n    },\r\n    warning: {\r\n        color: grey[900],\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: yellow[700],\r\n        '&:hover': {\r\n            backgroundColor: yellow[800],\r\n        },\r\n        '&:disabled': {\r\n            color: orange[800],\r\n            backgroundColor: yellow[800],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: yellow[800],\r\n        }\r\n    },\r\n    warning_clear: {\r\n        color: yellow[900],\r\n        '&:hover': {\r\n            backgroundColor: amber[100],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: amber[100],\r\n        }\r\n    },\r\n    warning_outline: {\r\n        color: orange[800],\r\n        border: '1px solid rgba(255,111,0,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: amber[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: amber[100],\r\n            borderColor: amber[600],\r\n        },\r\n        '&:disabled': {\r\n            color: orange[800],\r\n            backgroundColor: amber[50],\r\n        }\r\n    },\r\n    default: {\r\n        color: grey[900],\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: grey[200],\r\n        '&:hover': {\r\n            backgroundColor: grey[300],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[500],\r\n            backgroundColor: grey[300],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: grey[300],\r\n        }\r\n    },\r\n    default_clear: {\r\n        color: grey[800],\r\n        '&:hover': {\r\n            backgroundColor: grey[200],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[50],\r\n        }\r\n    },\r\n    default_outline: {\r\n        color: grey[900],\r\n        border: '1px solid rgba(158,158,158,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[200],\r\n            borderColor: grey[500],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[900],\r\n            backgroundColor: grey[200],\r\n            borderColor: grey[300],\r\n        }\r\n    },\r\n    dark: {\r\n        color: grey[900],\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: grey[500],\r\n        '&:hover': {\r\n            color: '#fff',\r\n            backgroundColor: grey[800],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[900],\r\n            backgroundColor: grey[800],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: grey[800],\r\n        }\r\n    },\r\n    dark_clear: {\r\n        color: grey[900],\r\n        '&:hover': {\r\n            backgroundColor: grey[500],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[500],\r\n        }\r\n    },\r\n    dark_outline: {\r\n        color: grey[900],\r\n        border: '1px solid rgba(33,33,33,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: grey[400],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[100],\r\n            borderColor: grey[400],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[900],\r\n            backgroundColor: grey[400],\r\n            borderColor: grey[500],\r\n        }\r\n    },\r\n});\r\n\r\nfunction ButtonStyle(props) {\r\n    const {\r\n        children,\r\n        classes,\r\n        className,\r\n        styleType,\r\n        //disabled = false,\r\n        onClick,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        append,\r\n        ...other } = props;\r\n    const { t } = useTranslation();\r\n    const handleMouseDown = (event) => {\r\n        if (onMouseDown)\r\n            onMouseDown(null, null, event.target, event)\r\n    }\r\n    const handleMouseUp = (event) => {\r\n        if (onMouseUp)\r\n            onMouseUp(null, null, event.target, event)\r\n    }\r\n    const handleClick = (event) => {\r\n        if (onClick)\r\n            onClick(null, null, event.target, event)\r\n    }\r\n\r\n    let textInitial\r\n    if (Array.isArray(children)) {\r\n        textInitial = children.join(\"\")\r\n    } else {\r\n        textInitial = children || \"\"\r\n    }\r\n\r\n    let findColon = textInitial.split(\":\")\r\n    let textShow = findColon.reduce((textAll, text) => textAll += t(text.trim(), text.trim() ? text.trim() + \"\" : \"\") + \" : \", \"\")\r\n    textShow = textShow.substring(0, textShow.length - 2);\r\n\r\n    return (\r\n        <Button\r\n            className={classNames(\r\n                classes.root, classes[`${styleType}`],\r\n                className,\r\n            )}\r\n            onClick={handleClick}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={handleMouseUp}\r\n            {...other}\r\n        >\r\n            {textShow}\r\n            {append}\r\n\r\n        </Button>\r\n    );\r\n}\r\n\r\nButtonStyle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    styleType: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onMouseDown: PropTypes.func,\r\n    onMouseUp: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonStyle);","const Clone = (obj) => {\r\n    let copy;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = Clone(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = Clone(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n}\r\nexport default Clone","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport datalabels from 'chartjs-plugin-datalabels';\r\nimport { apicall } from '../../../components/function/CoreFunction'\r\nconst Axios = new apicall();\r\n\r\nconst GenerateChart = props => {\r\n    const {\r\n        classes,\r\n        chartConfig,\r\n\r\n    } = props;\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n\r\n            const res = Axios.get(window.apipath + \"/v2/GetSPReportAPI?&spname=\"\r\n                + chartConfig.spname)\r\n                .then(res => {\r\n                    if (res.data.datas) {\r\n\r\n                        let datas = res.data.datas;\r\n                        console.log(datas)\r\n\r\n                        let labels = datas.length > 1 ? datas.map(e => e.labels) : datas[0].labels.split(',');\r\n\r\n                        let datasets = []\r\n\r\n                        let datalist = []\r\n                        for (var key in datas[0]) {\r\n                            console.log(key)\r\n                            if (key.substring(key.length - 2, key.length - 1) === '_') {\r\n                                datalist.push(key.substring(key.length - 1, key.length))\r\n                            }\r\n                        }\r\n                        console.log(datalist)\r\n                        let numDatasets = new Set([...datalist]);\r\n                        console.log(numDatasets)\r\n                        for (let item of numDatasets) {\r\n                            let _label = datas[0]['label_' + item] ? datas[0]['label_' + item] : '';\r\n                            // let _data = datas.map(e => parseInt(e['data_' + item]));\r\n                            let _data = datas.length > 1 ? datas.map(e => parseInt(e['data_' + item])) : datas[0]['data_' + item] ? datas[0]['data_' + item].split(',').map(x => { return parseInt(x) }) : [];\r\n                            console.log(_data)\r\n                            let _backgroundColor = datas.map(e => e['backgroundColor_' + item]);\r\n\r\n                            let _hoverBackgroundColor = datas.map(e => e['hoverBackgroundColor_' + item]);\r\n                            let _hoverBorderColor = datas.map(e => e['hoverBorderColor_' + item]);\r\n                            let _hoverBorderWidth = datas.map(e => e['hoverBorderWidth_' + item]);\r\n\r\n                            let _borderColor = datas.map(e => e['borderColor_' + item]);\r\n                            let _borderWidth = datas[0]['borderWidth_' + item] ? datas[0]['borderWidth_' + item] : '';\r\n                            let _borderSkipped = datas[0]['borderSkipped_' + item] ? datas[0]['borderSkipped_' + item] : false;\r\n\r\n                            let datasetTemp = {\r\n                                label: _label,\r\n                                data: _data,\r\n\r\n                                backgroundColor: _backgroundColor.length === 1 ? _backgroundColor[0] : _backgroundColor,\r\n\r\n                                hoverBackgroundColor: _hoverBackgroundColor.length === 1 ? _hoverBackgroundColor[0] : _hoverBackgroundColor,\r\n                                hoverBorderColor: _hoverBorderColor.length === 1 ? _hoverBorderColor[0] : _hoverBorderColor,\r\n                                hoverBorderWidth: _hoverBorderWidth.length === 1 ? _hoverBorderWidth[0] : _hoverBorderWidth,\r\n\r\n                                borderColor: _borderColor.length === 1 ? _borderColor[0] : _borderColor,\r\n                                borderWidth: _borderWidth,\r\n                                borderSkipped: _borderSkipped,\r\n\r\n                                datalabels: {\r\n                                    labels: {\r\n                                        title: null\r\n                                    },\r\n                                }\r\n                            }\r\n\r\n                            datasets.push(datasetTemp)\r\n                        }\r\n                        // console.log(datasets)\r\n                        let defaultOptions = {\r\n                            title: {\r\n                                display: datas[0].options_title_text ? true : false,\r\n                                text: datas[0].options_title_text ? datas[0].options_title_text : null,\r\n                                fontColor: datas[0].options_title_fontColor ? datas[0].options_title_fontColor : \"#000000\",\r\n                                fontSize: datas[0].options_title_fontSize ? datas[0].options_title_fontSize : 18,\r\n                                position: datas[0].options_title_position ? datas[0].options_title_position : 'top'\r\n                            },\r\n                            responsive: true,\r\n                            legend: {\r\n                                display: true,\r\n                                position: datas[0].options_legend_position ? datas[0].options_legend_position : 'top',\r\n                                fullWidth: true,\r\n                            },\r\n                            scales: {\r\n                                xAxes: [{\r\n                                    offset: true,\r\n                                    scaleLabel: {\r\n                                        display: datas[0].scales_xAxes_labelString ? true : false,\r\n                                        labelString: datas[0].scales_xAxes_labelString ? datas[0].scales_xAxes_labelString : '',\r\n                                    },\r\n                                }],\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    },\r\n                                    scaleLabel: {\r\n                                        display: datas[0].scales_yAxes_labelString ? true : false,\r\n                                        labelString: datas[0].scales_yAxes_labelString ? datas[0].scales_yAxes_labelString : ''\r\n                                    }\r\n                                }]\r\n                            },\r\n\r\n                        };\r\n\r\n                        const chart = {\r\n                            type: chartConfig.type,\r\n                            data: {\r\n                                labels: labels,\r\n                                datasets: datasets\r\n                            },\r\n                            options: defaultOptions\r\n                        }\r\n                        console.log(chart)\r\n                        const newChartInstance = new Chart(chartContainer.current, chart);\r\n                        setChartInstance(newChartInstance);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n\r\n        }\r\n    }, [chartContainer]);\r\n\r\n\r\n    return (\r\n        <canvas ref={chartContainer} style={{ width: '100%' }} />\r\n    )\r\n}\r\n\r\nexport default GenerateChart;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport datalabels from 'chartjs-plugin-datalabels';\r\nimport { apicall } from '../../../components/function/CoreFunction'\r\nconst Axios = new apicall();\r\n\r\n// Chart.helpers.merge(Chart.defaults.global, {\r\n//     maintainAspectRatio: false,\r\n//     tooltips: true,\r\n//     layout: {\r\n//         padding: 36\r\n//     },\r\n//     elements: {\r\n//         line: {\r\n//             fill: false\r\n//         },\r\n//         point: {\r\n//             hoverRadius: 7,\r\n//             radius: 5\r\n//         }\r\n//     },\r\n//     plugins: {\r\n//         legend: true,\r\n//         title: true,\r\n//     }\r\n// });\r\nconst GenerateChart = props => {\r\n    const {\r\n        classes,\r\n        chartConfig,\r\n\r\n    } = props;\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n\r\n            const res = Axios.get(window.apipath + \"/v2/GetSPReportAPI?&spname=\"\r\n                + chartConfig.spname)\r\n                .then(res => {\r\n                    if (res.data.datas) {\r\n\r\n                        let datas = res.data.datas;\r\n                        // console.log(datas)\r\n\r\n                        let labels = datas.map(e => e.labels)\r\n\r\n                        let datasets = []\r\n\r\n                        let datalist = []\r\n                        for (var key in datas[0]) {\r\n                            if (key.substring(key.length - 2, key.length - 1) === '_') {\r\n                                datalist.push(key.substring(key.length - 1, key.length))\r\n                            }\r\n                        }\r\n                        let numDatasets = new Set([...datalist]);\r\n                        for (let item of numDatasets) {\r\n                            let _label = datas[0]['label_' + item] ? datas[0]['label_' + item] : '';\r\n                            let _data = datas.map(e => parseInt(e['data_' + item]));\r\n\r\n                            let _backgroundColor = datas.map(e => e['backgroundColor_' + item]);\r\n\r\n                            let _borderAlign = datas[0]['borderAlign_' + item] ? datas[0]['borderAlign_' + item] : 'center';\r\n                            let _borderColor = datas.map(e => e['borderColor_' + item]);\r\n                            let _borderWidth = datas[0]['borderWidth_' + item] ? datas[0]['borderWidth_' + item] : '';\r\n\r\n                            let _hoverBackgroundColor = datas.map(e => e['hoverBackgroundColor_' + item]);\r\n                            let _hoverBorderColor = datas.map(e => e['hoverBorderColor_' + item]);\r\n                            let _hoverBorderWidth = datas.map(e => e['hoverBorderWidth_' + item]);\r\n\r\n                            let _weight = datas[0]['weight_' + item] ? parseInt(datas[0]['weight_' + item]) : 1;\r\n                            let datasetTemp = {\r\n                                label: _label,\r\n                                data: _data,\r\n\r\n                                backgroundColor: _backgroundColor,\r\n\r\n                                borderAlign: _borderAlign,\r\n                                borderColor: _borderColor,\r\n                                borderWidth: _borderWidth,\r\n\r\n                                hoverBackgroundColor: _hoverBackgroundColor,\r\n                                hoverBorderColor: _hoverBorderColor,\r\n                                hoverBorderWidth: _hoverBorderWidth,\r\n                                weight: _weight,\r\n\r\n                                datalabels: {\r\n                                    labels: {\r\n                                        title: null\r\n                                    },\r\n                                }\r\n                            }\r\n\r\n                            datasets.push(datasetTemp)\r\n                        }\r\n                        // console.log(datasets)\r\n                        let defaultOptions = {\r\n                            title: {\r\n                                display: datas[0].options_title_text ? true : false,\r\n                                text: datas[0].options_title_text ? datas[0].options_title_text : null,\r\n                                fontColor: datas[0].options_title_fontColor ? datas[0].options_title_fontColor : \"#000000\",\r\n                                fontSize: datas[0].options_title_fontSize ? datas[0].options_title_fontSize : 18,\r\n                                position: datas[0].options_title_position ? datas[0].options_title_position : 'top'\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: datas[0].options_legend_position ? datas[0].options_legend_position : 'top',\r\n                                fullWidth: true,\r\n                            },\r\n                            responsive: true,\r\n\r\n                        };\r\n\r\n                        const chart = {\r\n                            type: chartConfig.type,\r\n                            data: {\r\n                                labels: labels,\r\n                                datasets: datasets\r\n                            },\r\n                            options: defaultOptions\r\n                        }\r\n                        // console.log(chart)\r\n                        const newChartInstance = new Chart(chartContainer.current, chart);\r\n                        setChartInstance(newChartInstance);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n\r\n        }\r\n    }, [chartContainer]);\r\n\r\n\r\n    return (\r\n        <canvas ref={chartContainer} style={{ width: '100%' }} />\r\n    )\r\n}\r\n\r\nexport default GenerateChart;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js\";\r\nimport datalabels from 'chartjs-plugin-datalabels';\r\nimport { apicall } from '../../../components/function/CoreFunction'\r\nconst Axios = new apicall();\r\n\r\nconst GenerateChart = props => {\r\n    const {\r\n        classes,\r\n        chartConfig,\r\n\r\n    } = props;\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n\r\n            const res = Axios.get(window.apipath + \"/v2/GetSPReportAPI?&spname=\"\r\n                + chartConfig.spname)\r\n                .then(res => {\r\n                    if (res.data.datas) {\r\n\r\n                        let datas = res.data.datas;\r\n                        // console.log(datas)\r\n\r\n                        let labels = datas.map(e => e.labels)\r\n\r\n                        let datasets = []\r\n\r\n                        let datalist = []\r\n                        for (var key in datas[0]) {\r\n                            if (key.substring(key.length - 2, key.length - 1) === '_') {\r\n                                datalist.push(key.substring(key.length - 1, key.length))\r\n                            }\r\n                        }\r\n                        let numDatasets = new Set([...datalist]);\r\n                        for (let item of numDatasets) {\r\n                            let _label = datas[0]['label_' + item] ? datas[0]['label_' + item] : '';\r\n\r\n                            let _data = [];\r\n                            let _typeData = datas[0]['typeData_' + item] ? datas[0]['typeData_' + item] : 'number';\r\n\r\n                            if (_typeData === 'point') {\r\n                                datas.map(e => {\r\n                                    _data.push(\r\n                                        {\r\n                                            x: parseInt(e['dataX_' + item]),\r\n                                            y: parseInt(e['dataY_' + item])\r\n                                        }\r\n                                    )\r\n                                });\r\n                            } else {\r\n                                _data = datas.map(e => parseInt(e['data_' + item]));\r\n                            }\r\n\r\n                            let _backgroundColor = datas[0]['backgroundColor_' + item] ? datas[0]['backgroundColor_' + item] : '';\r\n                            let _fill = datas[0]['fill_' + item] ? (datas[0]['fill_' + item] === 'true') : false;\r\n\r\n                            //border , line\r\n                            let _hoverBackgroundColor = datas[0]['hoverBackgroundColor_' + item] ? datas[0]['hoverBackgroundColor_' + item] : '';\r\n                            let _hoverBorderCapStyle = datas[0]['hoverBorderCapStyle_' + item] ? datas[0]['hoverBorderCapStyle_' + item] : '';\r\n                            let _hoverBorderColor = datas[0]['hoverBorderColor_' + item] ? datas[0]['hoverBorderColor_' + item] : '';\r\n                            let _hoverBorderDash = datas[0]['hoverBorderDash_' + item] ? datas[0]['hoverBorderDash_' + item].split(',') : [];\r\n                            let _hoverBorderDashOffset = datas[0]['hoverBorderDashOffset_' + item] ? parseInt(datas[0]['hoverBorderDashOffset_' + item]) : 0;\r\n                            let _hoverBorderJoinStyle = datas[0]['hoverBorderJoinStyle_' + item] ? datas[0]['hoverBorderJoinStyle_' + item] : '';\r\n                            let _hoverBorderWidth = datas[0]['hoverBorderWidth_' + item] ? datas[0]['hoverBorderWidth_' + item] : '';\r\n\r\n                            let _borderColor = datas[0]['borderColor_' + item] ? datas[0]['borderColor_' + item] : '';\r\n                            let _borderWidth = datas[0]['borderWidth_' + item] ? datas[0]['borderWidth_' + item] : '';\r\n                            let _borderCapStyle = datas[0]['borderCapStyle_' + item] ? datas[0]['borderCapStyle_' + item] : '';\r\n                            let _borderDash = datas[0]['borderDash_' + item] ? datas[0]['borderDash_' + item].split(',') : [];\r\n                            let _borderDashOffset = datas[0]['borderDashOffset_' + item] ? parseInt(datas[0]['borderDashOffset_' + item]) : 0;\r\n\r\n                            let _showLine = datas[0]['showLine_' + item] ? (datas[0]['showLine_' + item] === 'true') : true;\r\n\r\n                            let _lineTension = datas[0]['lineTension_' + item] ? parseInt(datas[0]['lineTension_' + item]) : 0.4;\r\n                            let _order = datas[0]['order_' + item] ? parseInt(datas[0]['order_' + item]) : 0;\r\n                            //point\r\n                            let _pointBackgroundColor = datas.map(e => e['pointBackgroundColor_' + item]);\r\n                            let _pointBorderColor = datas.map(e => e['pointBorderColor_' + item]);\r\n                            let _pointBorderWidth = datas.map(e => e['pointBorderWidth_' + item]);\r\n                            let _pointHitRadius = datas.map(e => e['pointHitRadius_' + item]);\r\n\r\n                            let _pointHoverBackgroundColor = datas.map(e => e['pointHoverBackgroundColor_' + item]);\r\n                            let _pointHoverBorderColor = datas.map(e => e['pointHoverBorderColor_' + item]);\r\n                            let _pointHoverBorderWidth = datas.map(e => e['pointHoverBorderWidth_' + item]);\r\n                            let _pointHoverRadius = datas.map(e => e['pointHoverRadius_' + item]);\r\n                            let _pointRadius = datas.map(e => e['pointRadius_' + item]);\r\n                            let _pointRotation = datas.map(e => e['pointRotation_' + item]);\r\n                            let _pointStyle = datas.map(e => e['pointStyle_' + item]);\r\n\r\n\r\n                            let datasetTemp = {\r\n                                label: _label,\r\n                                data: _data,\r\n                                backgroundColor: _backgroundColor,\r\n                                fill: _fill,\r\n                                hoverBackgroundColor: _hoverBackgroundColor,\r\n                                hoverBackgroundColor: _hoverBorderCapStyle,\r\n                                hoverBorderColor: _hoverBorderColor,\r\n                                hoverBorderDash: _hoverBorderDash,\r\n                                hoverBorderDashOffset: _hoverBorderDashOffset,\r\n                                hoverBorderJoinStyle: _hoverBorderJoinStyle,\r\n                                hoverBorderWidth: _hoverBorderWidth,\r\n\r\n                                borderColor: _borderColor,\r\n                                borderWidth: _borderWidth,\r\n                                borderCapStyle: _borderCapStyle,\r\n                                borderDash: _borderDash,\r\n                                borderDashOffset: _borderDashOffset,\r\n                                showLine: _showLine,\r\n                                lineTension: _lineTension,\r\n                                order: _order,\r\n\r\n                                pointBackgroundColor: _pointBackgroundColor,\r\n                                pointBorderColor: _pointBorderColor,\r\n                                pointBorderWidth: _pointBorderWidth,\r\n                                pointHitRadius: _pointHitRadius,\r\n                                pointHoverBackgroundColor: _pointHoverBackgroundColor,\r\n                                pointHoverBorderColor: _pointHoverBorderColor,\r\n                                pointHoverBorderWidth: _pointHoverBorderWidth,\r\n                                pointHoverRadius: _pointHoverRadius,\r\n                                pointRadius: _pointRadius,\r\n                                pointRotation: _pointRotation,\r\n                                pointStyle: _pointStyle,\r\n\r\n                                datalabels: {\r\n                                    labels: {\r\n                                        title: null\r\n                                    },\r\n                                }\r\n                            }\r\n\r\n                            datasets.push(datasetTemp)\r\n                        }\r\n                        // console.log(datasets)\r\n                        let defaultOptions = {\r\n                            title: {\r\n                                display: datas[0].options_title_text ? true : false,\r\n                                text: datas[0].options_title_text ? datas[0].options_title_text : null,\r\n                                fontColor: datas[0].options_title_fontColor ? datas[0].options_title_fontColor : \"#000000\",\r\n                                fontSize: datas[0].options_title_fontSize ? datas[0].options_title_fontSize : 18,\r\n                                position: datas[0].options_title_position ? datas[0].options_title_position : 'top'\r\n                            },\r\n                            legend: {\r\n                                display: true,\r\n                                position: datas[0].options_legend_position ? datas[0].options_legend_position : 'top',\r\n                                fullWidth: true,\r\n                            },\r\n                            responsive: true,\r\n\r\n                        };\r\n\r\n                        const chart = {\r\n                            type: chartConfig.type,\r\n                            data: {\r\n                                labels: labels,\r\n                                datasets: datasets\r\n                            },\r\n                            options: defaultOptions\r\n                        }\r\n                        // console.log(chart)\r\n                        const newChartInstance = new Chart(chartContainer.current, chart);\r\n                        setChartInstance(newChartInstance);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n\r\n        }\r\n    }, [chartContainer]);\r\n\r\n\r\n    return (\r\n        <canvas ref={chartContainer} style={{ width: '100%' }} />\r\n    )\r\n}\r\n\r\nexport default GenerateChart;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { apicall } from '../../../components/function/CoreFunction'\r\nconst Axios = new apicall();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    // marginTop: theme.spacing(3),\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n}));\r\nconst GenerateChart = props => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    // classes,\r\n    chartConfig,\r\n  } = props;\r\n\r\n  const [dataRow, setDataRow] = useState([]);\r\n  const [showTable, setShowTable] = useState(null);\r\n  const [subTitle, setSubTitle] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const res = Axios.get(window.apipath + \"/v2/GetSPReportAPI?&spname=\"\r\n      + chartConfig.spname)\r\n      .then(res => {\r\n\r\n        let datas = res.data.datas;\r\n\r\n        let dataHeader = []\r\n\r\n        let datalist = []\r\n        console.log(datas[0])\r\n\r\n        for (var key in datas[0]) {\r\n          if (key.substring(key.length - 2, key.length - 1) === '_') {\r\n            datalist.push(key.substring(key.length - 1, key.length))\r\n          }\r\n        }\r\n        console.log(datalist)\r\n\r\n        let numDatasets = new Set([...datalist]);\r\n        console.log(numDatasets)\r\n        for (let item of numDatasets) {\r\n\r\n          let _header = datas[0]['header_' + item] ? datas[0]['header_' + item] : '';\r\n          let _position = datas[0]['headerPosition_' + item] ? datas[0]['headerPosition_' + item] : '';\r\n          let _width = datas[0]['headerWidth_' + item] ? datas[0]['headerWidth_' + item] : '';\r\n          let _bgColor = datas[0]['headerBGColor_' + item] ? datas[0]['headerBGColor_' + item] : '';\r\n          let _borderRight = datas[0]['headerBorderRight_' + item] ? datas[0]['headerBorderRight_' + item] : '';\r\n          let _fontColor = datas[0]['headerFontColor_' + item] ? datas[0]['headerFontColor_' + item] : '';\r\n          dataHeader.push({\r\n            label: _header,\r\n            position: _position,\r\n            width: _width,\r\n            backgroundColor: _bgColor,\r\n            borderRight: _borderRight,\r\n            fontColor: _fontColor\r\n          });\r\n        }\r\n        let dataTitle = {\r\n          title: datas[0].options_title_text ? datas[0].options_title_text : null,\r\n          position: datas[0].options_title_position ? datas[0].options_title_position : null,\r\n          fontColor: datas[0].options_title_fontColor ? datas[0].options_title_fontColor : null,\r\n          fontSize: datas[0].options_title_fontSize ? datas[0].options_title_fontSize : null,\r\n        }\r\n        console.log(dataTitle)\r\n\r\n        let temp = {\r\n          dataHeader: dataHeader,\r\n          dataRows: datas,\r\n          dataTitle: dataTitle\r\n        }\r\n        const tempTable = genTableRow(temp);\r\n        setShowTable(tempTable)\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n\r\n  }, [chartConfig])\r\n\r\n  const genTableRow = (datas) => {\r\n    console.log(datas)\r\n    return (\r\n      <div>\r\n        {datas.dataTitle.title ?\r\n          <div style={{\r\n            marginTop: '4px',\r\n            textAlign: datas.dataTitle.position\r\n          }}>\r\n            <label color={datas.dataTitle.fontColor ? datas.dataTitle.fontColor : '#000000'}\r\n              style={{\r\n                fontWeight: 'bolder',\r\n                fontSize: datas.dataTitle.fontSize ? datas.dataTitle.fontSize : 18,\r\n                color: datas.dataTitle.fontColor ? datas.dataTitle.fontColor : '#000000'\r\n              }}>\r\n              {datas.dataTitle.title}\r\n            </label>\r\n          </div>\r\n          : null\r\n        }\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\" >\r\n            <TableHead >\r\n              <TableRow >\r\n                {datas.dataHeader.map((row, idx) => (\r\n                  (idx + 1) !== datas.dataHeader.length ?\r\n                    <TableCell style={{\r\n                      fontWeight: 'bolder', width: row.width,\r\n                      backgroundColor: row.backgroundColor ? row.backgroundColor : '#bdbdbd',\r\n                      borderRight: row.borderRight ? row.borderRight : '1px solid #9e9e9e',\r\n                      color: row.fontColor\r\n                    }}\r\n                      key={idx} align={row.position}>{row.label}</TableCell>\r\n                    :\r\n                    <TableCell style={{\r\n                      fontWeight: 'bolder',\r\n                      backgroundColor: row.backgroundColor ? row.backgroundColor : '#bdbdbd',\r\n                      color: row.fontColor\r\n                    }}\r\n                      key={idx} align={row.position}>{row.label}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {datas.dataRows.map((row, idx) => (\r\n                <TableRow key={idx}>\r\n                  {\r\n                    datas.dataHeader.map((rowx, idxs) => (\r\n                      idxs === 0 ?\r\n                        <TableCell key={idxs} component=\"th\" scope=\"row\" align={row['cellPosition_' + (idxs + 1)]}\r\n                          style={{\r\n                            borderRight: row['cellBorderRight_' + (idxs + 1)] ? row['cellBorderRight_' + (idxs + 1)] : '1px solid #e0e0e0',\r\n                            backgroundColor: row['cellBGColor_' + (idxs + 1)] ? row['cellBGColor_' + (idxs + 1)] : null,\r\n                            color: row['cellFontColor_' + (idxs + 1)] ? row['cellFontColor_' + (idxs + 1)] : null\r\n                          }}>\r\n                          {row['data_' + (idxs + 1)]}\r\n                        </TableCell>\r\n                        :\r\n                        (idxs + 1) !== datas.dataHeader.length ?\r\n                          <TableCell key={idxs} align={row['cellPosition_' + (idxs + 1)]}\r\n                            style={{\r\n                              borderRight: row['cellBorderRight_' + (idxs + 1)] ? row['cellBorderRight_' + (idxs + 1)] : '1px solid #e0e0e0',\r\n                              backgroundColor: row['cellBGColor_' + (idxs + 1)] ? row['cellBGColor_' + (idxs + 1)] : null,\r\n                              color: row['cellFontColor_' + (idxs + 1)] ? row['cellFontColor_' + (idxs + 1)] : null\r\n                            }}>\r\n                            {row['data_' + (idxs + 1)]}\r\n                          </TableCell> :\r\n                          <TableCell key={idxs} align={row['cellPosition_' + (idxs + 1)]}\r\n                            style={{\r\n                              backgroundColor: row['cellBGColor_' + (idxs + 1)] ? row['cellBGColor_' + (idxs + 1)] : null,\r\n                              color: row['cellFontColor_' + (idxs + 1)] ? row['cellFontColor_' + (idxs + 1)] : null\r\n                            }}>\r\n                            {row['data_' + (idxs + 1)]}\r\n                          </TableCell>\r\n                    ))\r\n                  }\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          {subTitle}\r\n          {showTable}\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default GenerateChart;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport AmChartBar from './AmChartBar';\r\nimport AmChartPie from './AmChartPie';\r\nimport AmChartLine from './AmChartLine';\r\nimport AmChartTable from './AmChartTable';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Clone from \"../../../components/function/Clone\";\r\nimport _ from 'lodash'\r\nimport Moment from 'moment';\r\nimport Axios from 'axios'\r\n// import Pdf from \"react-to-pdf\";\r\nimport AmButton from \"../../../components/AmButton\";\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport classNames from 'classnames';\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst ref = React.createRef();\r\n\r\nconst styles = theme => ({\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    paddingGrid: {\r\n        paddingRight: '15px'\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(),\r\n    },\r\n});\r\nconst useClock = (propsTime, t) => {\r\n    const [date, setDate] = useState()\r\n    const [time, setTime] = useState()\r\n\r\n    useEffect(() => {\r\n        Axios.get(window.apipath + \"/v2/time\").then((res) => {\r\n            if (res) {\r\n                setDate({\r\n                    dateClient: new Date(),\r\n                    dateServer: new Date(res.data.dbTime + \"+07:00\"),\r\n                });\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (date) {\r\n            var timerID = setInterval(() => runningCurrentDate(), 250);\r\n            return () => {\r\n                clearInterval(timerID);\r\n            };\r\n        }\r\n    }, [date, localStorage.getItem(\"Lang\")])\r\n\r\n    useEffect(() => {\r\n        if (date)\r\n            runningCurrentDate()\r\n    }, [localStorage.getItem(\"Lang\")])\r\n\r\n    const runningCurrentDate = () => {\r\n        let currentDateTime = new Date(date.dateServer.getTime() + (new Date().getTime() - date.dateClient.getTime())),\r\n            label = propsTime.label ? t(propsTime.label) + \" : \" : \"\"\r\n        setTime(label + Moment(currentDateTime).format(propsTime.format))\r\n    }\r\n    return time\r\n}\r\nconst options = {\r\n    orientation: 'landscape',\r\n    unit: \"cm\",\r\n    format: [890, 720]  //3508 x 2480\r\n};\r\nconst DashboardChartComponent = (props) => {\r\n    const { t } = useTranslation()\r\n    const timeDefault = {\r\n        format: \"DD/MM/YYYY HH:mm:ss\", //formet in moment\r\n        // label: \"Date/Time\"\r\n    }\r\n    const {\r\n        classes,\r\n        time = timeDefault,\r\n        showTime = false,\r\n        chartConfigs,\r\n        delay\r\n    } = props;\r\n\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [calHeight, setCalHeight] = useState(0.35);\r\n    const clock = useClock(time, t)\r\n\r\n    const [width_height, set_width_height] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    })\r\n    const time_show = showTime && time ? clock : null\r\n\r\n    const [chartCreateShow, setChartCreateShow] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            set_width_height({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight\r\n            })\r\n        }, 30);\r\n    }, [isFullScreen])\r\n\r\n    const goFull = () => {\r\n        setIsFullScreen(true);\r\n        setCalHeight(0.4);\r\n    }\r\n    const goMin = () => {\r\n        setIsFullScreen(false);\r\n        setCalHeight(0.35);\r\n    }\r\n\r\n\r\n    const CreateChart = (charts) => {\r\n\r\n        return charts.map((row, index) => {\r\n            if (row.length === 1) {\r\n                return (\r\n                    <Grid container key={index}>\r\n                        {row.map((x, col) => {\r\n                            return (\r\n                                <Grid item md={12} key={col}>\r\n                                    {x.title ? <Typography className={classes.title} gutterBottom>{x.title}</Typography> : null}\r\n                                    {GenerateChart(x)}\r\n                                </Grid>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Grid container key={index} style={{ paddingTop: '10px' }}>\r\n                        {row.map((x, col) => {\r\n                            return (\r\n                                <Grid item md={6} key={col} className={classes.paddingGrid}>\r\n                                    {x.title ? <Typography className={classes.title} gutterBottom>{x.title}</Typography> : null}\r\n                                    {GenerateChart(x)}\r\n                                </Grid>\r\n\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                )\r\n            }\r\n        });\r\n    };\r\n\r\n    const GenerateChart = (configs) => {\r\n        if (configs) {\r\n            if (configs.type === 'bar' || configs.type === 'horizontalBar') {\r\n                return <AmChartBar\r\n                    chartConfig={configs}\r\n                />\r\n            } else if (configs.type === 'pie' || configs.type === 'doughnut') {\r\n                return <AmChartPie\r\n                    chartConfig={configs}\r\n                />\r\n            } else if (configs.type === 'line') {\r\n                return <AmChartLine\r\n                    chartConfig={configs}\r\n                />\r\n            } else if (configs.type === 'table') {\r\n                return <AmChartTable\r\n                    chartConfig={configs}\r\n                />\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chartConfigs !== undefined && chartConfigs !== null && chartConfigs.length > 0) {\r\n            // console.log(chartConfigs)\r\n            const newChartCreateShow = CreateChart(chartConfigs);\r\n            setChartCreateShow(newChartCreateShow);\r\n        }\r\n    }, [chartConfigs]);\r\n\r\n    const printDocument = () => {\r\n        const input = document.getElementById('chartShow');\r\n        html2canvas(input)\r\n            .then((canvas) => {\r\n               \r\n                let canvaswidth = parseInt(canvas.width);\r\n                let canvasheight = parseInt(canvas.height);\r\n                // console.log(canvas)\r\n\r\n                const imgData = canvas.toDataURL('image/png');\r\n\r\n                const pdf = new jsPDF({\r\n                    orientation: 'p',\r\n                    unit: 'pt',\r\n                    format: [canvaswidth, canvasheight]\r\n                });\r\n                pdf.addImage(imgData, 'JPEG', 20, 20);\r\n                pdf.save(\"Dashboard.pdf\");\r\n            })\r\n            ;\r\n    }\r\n\r\n\r\n    return (\r\n        // <Fullscreen enabled={isFullScreen} onChange={isFull => setIsFullScreen(isFull)}>\r\n        // <div style={isFullScreen ? { backgroundColor: '#e4e7ea', height: 'inherit', width: width_height.width, padding: '1em 1.8em 1.8em 2em' } : {}} className=\"fullscreen\">\r\n        <>\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"stretch\" >\r\n                <Grid item xs={12} sm={6} md={6} xl={6}>\r\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                        <label style={{ marginTop: 7, marginBottom: 3, fontSize: 'calc(0.5em + 1.5vw)', fontWeight: 'bold' }}>{time_show}</label>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6} xl={6}>\r\n                    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" >\r\n                        <Grid item >\r\n                            {/* <IconButton style={{ marginLeft: 5, padding: 4 }} onClick={isFullScreen ? goMin : goFull}>\r\n                                    {isFullScreen ?\r\n                                        <FullscreenExitIcon style={{ fontSize: 'calc(0.75em + 1.25vw)' }} />\r\n                                        : <FullscreenIcon style={{ fontSize: 'calc(0.75em + 1.25vw)' }} />\r\n                                    }\r\n                                </IconButton> */}\r\n                            {/* <Pdf targetRef={ref} filename=\"code-example.pdf\" options={options} x={1} y={.5} scale={1}>\r\n                                {({ toPdf }) =>\r\n                                    // <button onClick={toPdf}>Generate Pdf</button>\r\n                                    <AmButton styleType=\"default_clear\"  onClick={toPdf}\r\n                                        startIcon={<PictureAsPdfIcon  />}>\r\n                                        {'Export PDF'}\r\n                                    </AmButton>\r\n                                }\r\n                            </Pdf> */}\r\n                            <AmButton styleType=\"default_clear\" onClick={printDocument}\r\n                                startIcon={<PictureAsPdfIcon />}>\r\n                                {'Export PDF'}\r\n                            </AmButton>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <div ref={ref} id=\"chartShow\" >\r\n                {chartCreateShow}\r\n            </div>\r\n        </>\r\n        // </Fullscreen>\r\n    );\r\n\r\n}\r\n\r\nDashboardChartComponent.propTypes = {\r\n    time: PropTypes.object,\r\n    chartConfigs: PropTypes.array.isRequired,\r\n    delay: PropTypes.number\r\n}\r\nDashboardChartComponent.defaultProps = {\r\n    delay: 1000,\r\n}\r\n\r\nexport default withStyles(styles)(DashboardChartComponent)","import React, { useEffect, useRef, useState } from \"react\";\r\nimport AmDashboardChart from '../../pageComponent/AmDashboardChart/AmDashboardChart';\r\n \r\nconst ChartJS = (props) => {\r\n  const chartConfigs = [\r\n    [\r\n      {\r\n        type: 'bar',\r\n        title: \"The Statistics of Receiving & Issue by Hourly\",\r\n        spname: 'DASHBOARD_CHART_RECEIVEISSUE_HOUR',\r\n      },\r\n      {\r\n        type: 'bar',\r\n        title: \"The Statistics of Receiving & Issue by Daily\",\r\n        spname: 'DASHBOARD_CHART_RECEIVEISSUE_DAY',\r\n      },\r\n    ],\r\n    // [\r\n    //   {\r\n    //     type: 'pie',\r\n    //     title: \"The Statistics of Receiving\",\r\n    //     spname: 'DASHBOARD_CHART_PIE_RECEIVE',\r\n    //   },\r\n    //   {\r\n    //     type: 'pie',\r\n    //     title: \"The Statistics of Issue\",\r\n    //     spname: 'DASHBOARD_CHART_PIE_ISSUE',\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        type: 'bar',\r\n        title: \"The Statistics of Throughtpu by Hourly\",\r\n        spname: 'DASHBOARD_CHART_THROUGHPUT_HOUR',\r\n      },\r\n      {\r\n        type: 'bar',\r\n        title: \"The Statistics of Throughtpu by Daily\",\r\n        spname: 'DASHBOARD_CHART_THROUGHPUT_DAY',\r\n      }\r\n    ]\r\n  ];\r\n\r\n  return (\r\n      <AmDashboardChart\r\n        chartConfigs={chartConfigs}\r\n        showTime={true}\r\n      />\r\n  );\r\n};\r\n\r\nexport default ChartJS;\r\n"],"sourceRoot":""}