{"version":3,"sources":["components/AmButton.js","components/AmInput.js","components/function/CoreFunction2.js","components/AmDropdown.js","components/AmExportExcel.js","components/AmValidate.js","components/table/AmPagination.js","components/table/AmExportDataTable.js","components/table/AmTable.js","components/AmDatePicker.js","components/AmFindPopup.js","components/AmChipInput.js","components/AmMultiDropdown.js","components/function/RangeNumUtill.js","views/page/FindpopupDDL.js"],"names":["withStyles","theme","root","fontWeight","color","textTransform","lineHeight","width","fontFamily","join","boxShadow","transition","add","border","backgroundColor","green","add_clear","grey","add_outline","borderColor","delete","red","delete_clear","delete_outline","confirm","indigo","confirm_clear","confirm_outline","info","lightBlue","info_clear","info_outline","warning","yellow","orange","warning_clear","amber","warning_outline","default","default_clear","default_outline","dark","dark_clear","dark_outline","props","children","classes","className","styleType","onClick","onMouseDown","onMouseUp","append","other","t","useTranslation","textShow","Array","isArray","split","reduce","textAll","text","trim","substring","length","classNames","event","target","CustomTextField","defaultValue","required","onChange","onChangeV2","onMouseOver","onMouseOut","onKeyPress","onKeyUp","onKeyDown","onFocus","onBlur","InputProps","validate","msgError","msgSuccess","regExp","customValidate","styleValidate","onValidate","useState","value","setValue","size","style","display","alignItems","borderBottomColor","status","primary","error","main","fontSize","createMuiTheme","light","contrastText","disabled","typography","useNextVariants","InputStyle","apicall","url","Axios","get","localStorage","getItem","then","res","data","_result","code","alert","message","sessionStorage","clear","dataR","trimObj","undefined","token","post","put","utlArray","all","createQueryString","select","queryString","q","f","g","s","sk","l","IsEmptyObject","obj","Object","keys","constructor","Clone","copy","Date","setTime","getTime","i","len","attr","hasOwnProperty","Error","acc","key","selectStyles","ddlMinWidth","ddlMaxWidth","zIndex","shadow","control","provided","margin","menu","borderRadius","minWidth","maxWidth","menuPortal","base","Dropdown","isOpen","onClose","position","Menu","zindexval","ddlminwidth","ddlmaxwidth","Blanket","marginTop","marginBottom","bottom","left","top","right","Svg","p","height","viewBox","focusable","role","DropDownInputs","iconCloseButton","padding","cursor","input","marginLeft","flex","iconButton","id","placeholder","valueKey","onHandleClickClear","toggleOpen","onHandleDelete","readOnly","autoComplete","val","element","blur","ele","cancelBubble","inputProps","endAdornment","aria-label","inputComponent","inputRef","ref","DropdownIndicator1","CustomClearText","componentNormal","Control","justifyContent","fullWidth","selectProps","isDisabled","input2","innerRef","innerProps","textFieldProps","Placeholder","placeholderDisabled","SingleValue","singleValue","ValueContainer","valueContainer","NoOptionsMessage","noOptionsMessage","DropdownIndicator","ClearIndicator","getStyles","restInnerProps","IndicatorSeparator","componentSearch","colors","neutral20","d","fill","fillRule","DropdownComponent","returnDefaultValue","autoDefaultValue","fieldDataKey","queryApi","fieldLabel","labelPattern","ddlType","setOpen","valueData","setValueData","optionList","setOptionList","setValueKey","defaultVal","setDefaultVal","upreturnDefaultValue","setReturnDefaultValue","onSelectChange","e","getValueKey","showValueData","str","isEmpty","forEach","index","concat","qryString","a","datas","dataOptions","label","getLabel","resData","useEffect","getData","console","log","getDefaultByValue","hasOpt","some","opt","valuearray","dataoption","String","firstdata","autoFocus","name","backspaceRemovesValue","components","controlShouldRenderValue","hideSelectedOptions","isClearable","menuIsOpen","options","styles","tabSelectsValue","menuPortalTarget","document","body","maxMenuHeight","menuPlacement","isSearchable","textAlign","palette","font","clearIndicator","state","selectStyles2","defaultProps","flexWrap","spacing","withTheme","React","memo","isLoading","fileName","columns","onToggleLoad","headerItemNo","defaultNumRows","dataSrc","setDataSrc","moment","format","newfileName","getElementById","click","datass","map","datarow","xfield","isNaN","toString","filename","preventDefault","Sheet","newColumn","header","Header","_","uniqBy","item","idx","Column","accessor","getColums","AmValidate","success","resValid","setResValid","showValid","setShowValid","values","match","checkCustom","overrides","MuiTablePagination","toolbar","minHeight","TablePaginationActionsWrapped","flexShrink","secondary","count","page","rowsPerPage","onChangePage","direction","Math","ceil","max","Pageination","setPage","onPageChange","resetPage","marginRight","colSpan","rowsPerPageOptions","component","totalSize","pageSize","backIconButtonProps","nextIconButtonProps","SelectProps","displayEmpty","labelRowsPerPage","onChangeRowsPerPage","ActionsComponent","useExportExcel","initialData","onExcelFooter","queryAPI","onClickLoad","GetDataExport","Export","excelQueryAPI","cols","isLoad","setIsLoad","AmButton","AmExportExcel","ReactTableFixedColumns","withFixedColumns","ReactTable","AmTable","loading","setLoading","setData","selection","setSelection","selectAll","setSelectAll","tableRef","useRef","defaultSelection","createColumn","x","Cell","overflow","textOverflow","title","original","selectionType","unshift","mode","fixed","sortable","checked","checkSelection","primaryKey","Radio","type","onHandleSelection","Checkbox","currentPage","numrow","viewIndex","parseInt","column","row","Moment","isValid","dateFormat","Footer","findFooter","sumFooter","find","footer","sumData","getFooterProps","setColumns","reload","getSelection","filter","rowdata","tableData","selectionData","splice","push","_original","float","renderCustomButtonB4","exportData","AmExportDataTable","excelData","fileNameTable","renderCustomButtonAF","editable","filterable","defaultPageSize","resizable","showPagination","multiSort","minRows","headerStyle","background","maxHeight","onSortedChange","sorted","sort","sortDirection","desc","getTdProps","col","instance","getTrProps","rowInfo","editFlag","onRowClick","renderCustomButtonBTMLeft","renderCustomButtonBTMRight","useStyles","makeStyles","container","textField","DateAndTimePickers","fieldID","TypeDate","setTimeZero","datetime","dataReturn","fieldDataObject","getFormatDateTime","noValidate","InputLabelProps","shrink","newDate","SearchInput","divider","onClickSearch","onKeypress","keywordRef","current","SearchText","onClickOpen","onClickClear","inputWidth","onHandleClick","idicon","popupref","DialogTitle","borderBottom","closeButton","disableTypography","variant","DialogContent","overflowY","MuiDialogContent","DialogActions","borderTop","MuiDialogActions","StyledSearch","styled","div","FindPopup","labelTitle","search","open","keywordSub","setKeywordSub","query","setQuery","dataObjects","setDataObjects","setTotalSize","setSort","getDefaultByQuery","queryEdit","JSON","parse","stringify","field","order","modifySelect","newQueryStr","sel","getDataDefault","onHandleClickChange","counts","queryStrEdit","defaultSel","newSel","encodeURIComponent","dataObject","onHandleClickClose","aria-labelledby","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","keyCodes","ChipInput","chips","customChips","errorText","focusedChip","inputValue","isClean","isFocused","prevPropsValue","focus","actualInput","setState","handleInputBlur","blurBehavior","delayBeforeAdd","numChipsBefore","inputBlurTimeout","setTimeout","numChipsAfter","handleAddChip","clearInput","handleInputFocus","handleKeyDown","_keyPressed","_preventChipCreation","isDefaultPrevented","newChipKeyCodes","indexOf","keyCode","handleDeleteChip","handleKeyUp","updateInput","handleKeyPress","handleUpdateInput","onUpdateInput","setActualInputRef","labelRef","createRef","this","labelNode","ReactDOM","findDOMNode","forceUpdate","clearTimeout","chip","onBeforeAdd","dataSourceConfig","allowDuplicates","c","onAdd","updateChips","onDelete","slice","additionalUpdates","alwaysShowPlaceholder","chipRenderer","defaultChipRenderer","clearInputValueOnChange","dataSource","disableUnderline","FormHelperTextProps","fullWidthInput","helperText","rootRef","onCustomDelete","customValue","actualInputValue","hasInput","shrinkFloatingLabel","chipComponents","handleClick","handleDelete","InputMore","notched","labelWidth","offsetWidth","startAdornment","Fragment","InputComponent","FormControl","cx","InputLabel","htmlFor","labelShrink","focused","chipContainer","inkbar","underline","labeled","inputRoot","FormHelperText","newState","Component","bottomLineColor","paddingBottom","boxSizing","paddingTop","whiteSpace","appearance","WebkitTapHighlightColor","flexFlow","content","transform","transitions","create","duration","shorter","easing","easeOut","pointerEvents","easeIn","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Chip","blue","deleteIcon","menuList","ChipInputs","inputAdor","AmChipInput","InputAdornment","IconButton","MultiDropdown","valueChips","setValueChips","valuekey","arrayLabel","val1","val2","temp","labelDel","chipData","chipToDelete","tempLabel","valueSel","closeMenuOnSelect","isMulti","FormInline","LabelH","InputDiv","optiontest","suggestions","suggestion","txtQuery","window","apipath","UnitTypeQuery","SKUMasterTypeQuery","button","txtCode","txtUnitType","ddlUnitType","ddlUnitType2","ddlSKUType","ddlTest","ddlSKUType2","ddlTest2","ddlTest3","txtEmail","txtEmail2","valueText","setValueText","onHandleChange","inputID","onHandleDDLChange","onHandleInputChange","AmDatePicker","AmFindPopup","AmDropdown","AmMultiDropdown","AmInput","convertData"],"mappings":"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","file":"static/js/126.149e80dd.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    red,\r\n    purple,\r\n    indigo,\r\n    blue,\r\n    lightBlue,\r\n    green,\r\n    lightGreen,\r\n    yellow,\r\n    amber,\r\n    grey,\r\n    blueGrey,\r\n    brown,\r\n    orange\r\n} from '@material-ui/core/colors';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// 1. We define the styles.\r\nconst styles = theme => ({\r\n    root: {\r\n        fontWeight: '500',\r\n        color: '#fff',\r\n        textTransform: 'none',\r\n        lineHeight: 1.45,\r\n        width: 'auto',\r\n        // minWidth: '130px',\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:active': {\r\n            boxShadow: '0 5px 12px rgba(0,0,0,0.4)',\r\n            transition: 'opacity 0.3s ease-in-out',\r\n        }\r\n    },\r\n    add: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[800],\r\n        },\r\n        '&:disabled': {\r\n            color: green[900],\r\n            backgroundColor: green[800],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: green[800],\r\n        }\r\n    },\r\n    add_clear: {\r\n        color: green[900],\r\n        '&:hover': {\r\n            backgroundColor: green[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: green[50],\r\n        }\r\n    },\r\n    add_outline: {\r\n        color: green[900],\r\n        border: '1px solid rgba(76, 175, 80, 0.79)',\r\n        '&:hover': {\r\n            backgroundColor: green[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: green[100],\r\n            borderColor: green[600],\r\n        },\r\n        '&:disabled': {\r\n            color: green[900],\r\n            backgroundColor: green[50],\r\n        }\r\n    },\r\n    delete: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: red[500],\r\n        '&:hover': {\r\n            backgroundColor: red[700],\r\n        },\r\n        '&:disabled': {\r\n            color: red[900],\r\n            backgroundColor: red[700],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: red[700],\r\n        }\r\n    },\r\n    delete_clear: {\r\n        color: red[900],\r\n        '&:hover': {\r\n            backgroundColor: red[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: red[50],\r\n        }\r\n    },\r\n    delete_outline: {\r\n        color: red[900],\r\n        border: '1px solid rgba(183,28,28, 0.79)',\r\n        '&:hover': {\r\n            backgroundColor: red[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: red[100],\r\n            borderColor: red[600],\r\n        },\r\n        '&:disabled': {\r\n            color: red[900],\r\n            backgroundColor: red[50],\r\n        }\r\n    },\r\n    confirm: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: indigo[500],\r\n        '&:hover': {\r\n            backgroundColor: indigo[700],\r\n        },\r\n        '&:disabled': {\r\n            color: indigo[900],\r\n            backgroundColor: indigo[700],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: indigo[700],\r\n        }\r\n    },\r\n    confirm_clear: {\r\n        color: indigo[900],\r\n        '&:hover': {\r\n            backgroundColor: indigo[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: indigo[50],\r\n        }\r\n    },\r\n    confirm_outline: {\r\n        color: indigo[900],\r\n        border: '1px solid rgba(13,71,161,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: indigo[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: indigo[100],\r\n            borderColor: indigo[600],\r\n        },\r\n        '&:disabled': {\r\n            color: indigo[900],\r\n            backgroundColor: indigo[50],\r\n        }\r\n    },\r\n    info: {\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: lightBlue[400],\r\n        '&:hover': {\r\n            color: '#fff',\r\n            backgroundColor: lightBlue[600],\r\n        },\r\n        '&:disabled': {\r\n            color: lightBlue[900],\r\n            backgroundColor: lightBlue[600],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: lightBlue[600],\r\n        }\r\n    },\r\n    info_clear: {\r\n        color: lightBlue[900],\r\n        '&:hover': {\r\n            backgroundColor: lightBlue[50],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: lightBlue[50],\r\n        }\r\n    },\r\n    info_outline: {\r\n        color: lightBlue[700],\r\n        border: '1px solid rgba(3,155,229,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: lightBlue[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: lightBlue[100],\r\n            borderColor: lightBlue[200],\r\n        },\r\n        '&:disabled': {\r\n            color: lightBlue[900],\r\n            backgroundColor: lightBlue[50],\r\n        }\r\n    },\r\n    warning: {\r\n        color: grey[900],\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: yellow[700],\r\n        '&:hover': {\r\n            backgroundColor: yellow[800],\r\n        },\r\n        '&:disabled': {\r\n            color: orange[800],\r\n            backgroundColor: yellow[800],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: yellow[800],\r\n        }\r\n    },\r\n    warning_clear: {\r\n        color: yellow[900],\r\n        '&:hover': {\r\n            backgroundColor: amber[100],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: amber[100],\r\n        }\r\n    },\r\n    warning_outline: {\r\n        color: orange[800],\r\n        border: '1px solid rgba(255,111,0,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: amber[100],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: amber[100],\r\n            borderColor: amber[600],\r\n        },\r\n        '&:disabled': {\r\n            color: orange[800],\r\n            backgroundColor: amber[50],\r\n        }\r\n    },\r\n    default: {\r\n        color: grey[900],\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: grey[200],\r\n        '&:hover': {\r\n            backgroundColor: grey[300],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[500],\r\n            backgroundColor: grey[300],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: grey[300],\r\n        }\r\n    },\r\n    default_clear: {\r\n        color: grey[800],\r\n        '&:hover': {\r\n            backgroundColor: grey[200],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[50],\r\n        }\r\n    },\r\n    default_outline: {\r\n        color: grey[900],\r\n        border: '1px solid rgba(158,158,158,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[200],\r\n            borderColor: grey[500],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[900],\r\n            backgroundColor: grey[200],\r\n            borderColor: grey[300],\r\n        }\r\n    },\r\n    dark: {\r\n        color: grey[900],\r\n        border: '0',\r\n        boxShadow: '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n        backgroundColor: grey[500],\r\n        '&:hover': {\r\n            color: '#fff',\r\n            backgroundColor: grey[800],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[900],\r\n            backgroundColor: grey[800],\r\n        },\r\n        '&:active': {\r\n            backgroundColor: grey[800],\r\n        }\r\n    },\r\n    dark_clear: {\r\n        color: grey[900],\r\n        '&:hover': {\r\n            backgroundColor: grey[500],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[600],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[500],\r\n        }\r\n    },\r\n    dark_outline: {\r\n        color: grey[900],\r\n        border: '1px solid rgba(33,33,33,0.79)',\r\n        '&:hover': {\r\n            backgroundColor: grey[400],\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: grey[100],\r\n            borderColor: grey[400],\r\n        },\r\n        '&:disabled': {\r\n            color: grey[900],\r\n            backgroundColor: grey[400],\r\n            borderColor: grey[500],\r\n        }\r\n    },\r\n});\r\n\r\nfunction ButtonStyle(props) {\r\n    const {\r\n        children,\r\n        classes,\r\n        className,\r\n        styleType,\r\n        //disabled = false,\r\n        onClick,\r\n        onMouseDown,\r\n        onMouseUp,\r\n        append,\r\n        ...other } = props;\r\n    const { t } = useTranslation();\r\n    const handleMouseDown = (event) => {\r\n        if (onMouseDown)\r\n            onMouseDown(null, null, event.target, event)\r\n    }\r\n    const handleMouseUp = (event) => {\r\n        if (onMouseUp)\r\n            onMouseUp(null, null, event.target, event)\r\n    }\r\n    const handleClick = (event) => {\r\n        if (onClick)\r\n            onClick(null, null, event.target, event)\r\n    }\r\n\r\n    let textInitial\r\n    if (Array.isArray(children)) {\r\n        textInitial = children.join(\"\")\r\n    } else {\r\n        textInitial = children || \"\"\r\n    }\r\n\r\n    let findColon = textInitial.split(\":\")\r\n    let textShow = findColon.reduce((textAll, text) => textAll += t(text.trim(), text.trim() ? text.trim() + \"\" : \"\") + \" : \", \"\")\r\n    textShow = textShow.substring(0, textShow.length - 2);\r\n\r\n    return (\r\n        <Button\r\n            className={classNames(\r\n                classes.root, classes[`${styleType}`],\r\n                className,\r\n            )}\r\n            onClick={handleClick}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={handleMouseUp}\r\n            {...other}\r\n        >\r\n            {textShow}\r\n            {append}\r\n\r\n        </Button>\r\n    );\r\n}\r\n\r\nButtonStyle.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    styleType: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onMouseDown: PropTypes.func,\r\n    onMouseUp: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonStyle);","import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles\r\n} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AmValidate from \"../components/AmValidate\";\r\nimport { indigo, grey, red } from \"@material-ui/core/colors\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"auto\",\r\n    backgroundColor: \"white\",\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.primary.dark\r\n    }\r\n  },\r\n  primary: {\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.primary.dark\r\n    }\r\n  },\r\n  error: {\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.error.main\r\n    }\r\n  },\r\n  default: {\r\n    \"&:after\": {\r\n      borderBottomColor: theme.status.default.main\r\n    }\r\n  },\r\n  required: {\r\n    color: red[600],\r\n    fontSize: \"18px\"\r\n  }\r\n});\r\n\r\nfunction CustomTextField(props) {\r\n  const {\r\n    classes,\r\n    className,\r\n    styleType,\r\n    defaultValue,\r\n    required,\r\n    onChange,\r\n    onChangeV2,\r\n    onMouseOver,\r\n    onMouseOut,\r\n    onKeyPress,\r\n    onKeyUp,\r\n    onKeyDown,\r\n    onClick,\r\n    onFocus,\r\n    onBlur,\r\n    InputProps = {},\r\n    validate,\r\n    msgError,\r\n    msgSuccess,\r\n    regExp,\r\n    customValidate,\r\n    styleValidate,\r\n    onValidate,\r\n    ...other\r\n  } = props;\r\n\r\n  const [value, setValue] = useState(defaultValue ? defaultValue : \"\");\r\n\r\n  const handleChange = event => {\r\n    if (onChangeV2) {\r\n      setValue(event.target.value);\r\n      onChangeV2(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleMouseOver = event => {\r\n    if (onMouseOver) {\r\n      setValue(event.target.value);\r\n      onMouseOver(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleMouseOut = event => {\r\n    if (onMouseOut) {\r\n      setValue(event.target.value);\r\n      onMouseOut(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleKeyPress = event => {\r\n    if (onKeyPress) {\r\n      setValue(event.target.value);\r\n      onKeyPress(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleKeyDown = event => {\r\n    if (onKeyDown) {\r\n      setValue(event.target.value);\r\n      onKeyDown(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleKeyUp = event => {\r\n    if (onKeyUp) {\r\n      setValue(event.target.value);\r\n      onKeyUp(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleClick = event => {\r\n    if (onClick) {\r\n      setValue(event.target.value);\r\n      onClick(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleFocus = event => {\r\n    if (onFocus) {\r\n      setValue(event.target.value);\r\n      onFocus(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  const handleBlur = event => {\r\n    if (onBlur) {\r\n      setValue(event.target.value);\r\n      onBlur(event.target.value, null, event.target, event);\r\n    } else if (onChange) {\r\n      setValue(event.target.value);\r\n      onChange(event.target.value, null, event.target, event);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TextField\r\n        size={\"small\"}\r\n        className={classNames(className)}\r\n        InputProps={{\r\n          classes: {\r\n            root: classNames(classes.root, classes[`${styleType}`])\r\n          },\r\n          ...InputProps\r\n        }}\r\n        defaultValue={defaultValue}\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        onMouseOver={handleMouseOver}\r\n        onKeyPress={handleKeyPress}\r\n        onKeyDown={handleKeyDown}\r\n        onMouseOut={handleMouseOut}\r\n        onClick={handleClick}\r\n        onBlur={handleBlur}\r\n        onFocus={handleFocus}\r\n        {...other}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          display: \"inline-flex\",\r\n          alignItems: \"center\",\r\n          ...styleValidate\r\n        }}\r\n      >\r\n        {required ? <label className={classes.required}>*</label> : null}\r\n        {validate ? (\r\n          <AmValidate\r\n            value={value}\r\n            msgSuccess={msgSuccess}\r\n            msgError={msgError}\r\n            customValidate={customValidate}\r\n            regExp={regExp}\r\n            onValidate={onValidate}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nCustomTextField = withStyles(styles)(CustomTextField);\r\n\r\nInputStyle.propTypes = {\r\n  classes: PropTypes.object,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  styleType: PropTypes.string,\r\n  InputProps: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  onChangeV2: PropTypes.func,\r\n  onMouseOver: PropTypes.func,\r\n  onMouseOut: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  validate: PropTypes.bool,\r\n  defaultValue: PropTypes.any\r\n};\r\nconst theme = createMuiTheme({\r\n  status: {\r\n    primary: {\r\n      light: indigo[100],\r\n      main: indigo[400],\r\n      dark: indigo[800],\r\n      contrastText: \"#fff\"\r\n    },\r\n    error: {\r\n      light: red[100],\r\n      main: red[400],\r\n      dark: red[800],\r\n      contrastText: \"#000\"\r\n    },\r\n    default: {\r\n      light: grey[100],\r\n      main: grey[600],\r\n      dark: grey[800],\r\n      contrastText: \"#000\"\r\n    },\r\n    disabled: grey[500]\r\n  },\r\n  typography: { useNextVariants: true }\r\n});\r\n\r\nfunction InputStyle(props) {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CustomTextField {...props} />\r\n      {props.children}\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\nexport default InputStyle;\r\n","import React, { useState, useEffect, useContext, useReducer } from 'react';\r\nimport Axios from 'axios';\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment';\r\n// import * as Status from '../Warehouse/Status';\r\nimport queryString from 'query-string'\r\n\r\nconst SettimeAlert = () => {\r\n    //setTimeout(function () {\r\n    //    window.location.replace(\"/login\");\r\n    //}, 2500);\r\n\r\n}\r\n\r\nclass apicall {\r\n\r\n    get(url) {\r\n        return Axios.get(url + \"&token=\" + localStorage.getItem(\"Token\")).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                //alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    post(url, dataR) {\r\n        let data = trimObj(dataR)\r\n        if (data !== undefined) {\r\n            data.token = localStorage.getItem(\"Token\")\r\n        }\r\n        return Axios.post(url, data).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                //alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    put(url, dataR) {\r\n        let data = trimObj(dataR)\r\n        data.token = localStorage.getItem(\"Token\")\r\n        return Axios.put(url, data).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                // alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    delete(url, dataR) {\r\n        let data = trimObj(dataR)\r\n        data.token = localStorage.getItem(\"Token\")\r\n        return Axios.delete(url, data).then((res) => {\r\n            if (res.data._result.status === 0) {\r\n                if (res.data._result.code === \"A0001\") {\r\n                    alert(res.data._result.message)\r\n                    sessionStorage.clear();\r\n                    localStorage.clear();\r\n                    SettimeAlert();\r\n                }\r\n                else { }\r\n                //alert(res.data._result.message)\r\n            }\r\n            return res\r\n        });\r\n    }\r\n\r\n    all(utlArray) {\r\n        return Axios.all(utlArray).then(res => {\r\n            return res\r\n        })\r\n    }\r\n}\r\n\r\nconst createQueryString = (select) => {\r\n    let queryS = select.queryString + (select.t === \"\" ? \"?\" : \"?t=\" + select.t)\r\n        + (select.q === \"\" ? \"\" : \"&q=\" + select.q)\r\n        + (select.f === \"\" ? \"\" : \"&f=\" + select.f)\r\n        + (select.g === \"\" ? \"\" : \"&g=\" + select.g)\r\n        + (select.s === \"\" ? \"\" : \"&s=\" + select.s)\r\n        + (select.sk === \"\" ? \"\" : \"&sk=\" + select.sk)\r\n        + (select.l === 0 ? \"\" : \"&l=\" + select.l)\r\n        + (select.all === \"\" ? \"\" : \"&all=\" + select.all)\r\n        + \"&isCounts=true\"\r\n    return queryS\r\n}\r\n\r\nconst IsEmptyObject = (obj) => {\r\n    if (typeof (obj) === \"object\")\r\n        return Object.keys(obj).length === 0 && obj.constructor === Object\r\n    else\r\n        return false;\r\n}\r\n\r\nconst Clone = (obj) => {\r\n    let copy;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = Clone(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = Clone(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n}\r\n\r\nconst DateTimeConverter = (value, format) => {\r\n    const date = moment(value);\r\n    return date.format(format);\r\n}\r\n\r\n// const GenerateDropDownStatus = (status) => {\r\n//     let statusList = []\r\n//     statusList.push({ 'value': \"*\", 'label': \"All\" })\r\n//     Status[status].forEach(row => {\r\n//         statusList.push({ 'value': row.code, 'label': row.status })\r\n//     })\r\n//     return statusList\r\n// }\r\n\r\nfunction FilterURL(seacrhlocation, select) {\r\n    const search = queryString.parse(encodeURI(seacrhlocation))\r\n    var url = select;\r\n    var sel = [];\r\n    if (url.q) {\r\n        sel = JSON.parse(url.q)\r\n    }\r\n    for (let value in search) {\r\n        if (search[value]) {\r\n            if (search[value] !== \"\") {\r\n                sel.push({ \"f\": value, \"c\": \"like\", \"v\": \"*\" + encodeURIComponent(search[value]) + \"*\" })\r\n            }\r\n        }\r\n    }\r\n    url[\"q\"] = JSON.stringify(sel)\r\n    return url;\r\n}\r\n\r\nfunction trimObj(obj) {\r\n    if (obj === null) {\r\n        return null\r\n    }\r\n\r\n    if (!Array.isArray(obj) && typeof obj != 'object') return obj;\r\n    return Object.keys(obj).reduce(function (acc, key) {\r\n        acc[key.trim()] = typeof obj[key] == 'string' ? obj[key].trim() : trimObj(obj[key]);\r\n        return acc;\r\n    }, Array.isArray(obj) ? [] : {});\r\n}\r\n\r\nexport { apicall, createQueryString, Clone, DateTimeConverter, FilterURL, IsEmptyObject }\r\n","import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { colors } from 'react-select/lib/theme';\r\nimport { grey, red } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport PropTypes from 'prop-types';\r\nimport ReactSelect, { components } from 'react-select';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AmInput from \"./AmInput\";\r\nimport { apicall, createQueryString } from './function/CoreFunction2'\r\n\r\nconst Axios = new apicall();\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        // width: 'auto',\r\n    },\r\n    // input: {\r\n    //     display: 'flex',\r\n    //     // padding: '7px 0 6px',\r\n    // },\r\n    input2: {\r\n        display: 'flex',\r\n        // padding: '5px 8px',\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    valueContainer: {\r\n        // display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    noOptionsMessage: {\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n    },\r\n    singleValue: {\r\n        fontSize: 14,\r\n    },\r\n    placeholder: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n    placeholderDisabled: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.18)',\r\n    },\r\n    iconCloseButton: {\r\n        display: 'none',\r\n        padding: 0,\r\n        color: red[500]\r\n    },\r\n    required: {\r\n        color: red[600]\r\n    }\r\n});\r\n\r\nconst selectStyles = (ddlMinWidth, ddlMaxWidth, zIndex) => {\r\n    const shadow = 'hsla(218, 50%, 10%, 0.1)';\r\n    return (\r\n        {\r\n            control: provided => ({\r\n                ...provided,\r\n                margin: 4,\r\n            }),\r\n            menu: provided => ({\r\n                ...provided, borderRadius: '0 0 4px 4px', backgroundColor: 'white',\r\n                margin: '4px 0 0 -4px', minWidth: ddlMinWidth, maxWidth: ddlMaxWidth,\r\n                boxShadow: `0 0 0 1px ${shadow}, 0 4px 11px ${shadow}`\r\n            }),\r\n            menuPortal: base => ({ ...base, zIndex: zIndex })\r\n        })\r\n};\r\n\r\nconst Dropdown = (props) => {\r\n    const { children, isOpen, target, onClose, zIndex, ddlMinWidth, ddlMaxWidth } = props;\r\n    return (<div style={{ position: 'relative' }}>\r\n        {target}\r\n        {isOpen ? <Menu zindexval={zIndex} ddlminwidth={ddlMinWidth} ddlmaxwidth={ddlMaxWidth}>{children}</Menu> : null}\r\n        {isOpen ? <Blanket onClick={onClose} /> : null}\r\n    </div>\r\n    );\r\n};\r\n\r\nconst Menu = props => {\r\n    const shadow = 'hsla(218, 50%, 10%, 0.1)';\r\n    return (\r\n        <div\r\n            style={{\r\n                minWidth: props.ddlminwidth,\r\n                maxWidth: props.ddlmaxwidth,\r\n                backgroundColor: 'white',\r\n                borderRadius: '4px 4px 0 0',\r\n                boxShadow: `0 0 0 1px ${shadow}`,\r\n                marginTop: 8,\r\n                marginBottom: 0,\r\n                // padding: '1px 0px',\r\n                // position: 'relative',\r\n                position: 'absolute',\r\n                zIndex: props.zindexval,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\nconst Blanket = props => (\r\n    <div\r\n        style={{\r\n            bottom: 0,\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        }}\r\n        {...props}\r\n    />\r\n);\r\n\r\nconst Svg = p => (\r\n    <svg\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        focusable=\"false\"\r\n        role=\"presentation\"\r\n        {...p}\r\n    />\r\n);\r\nconst DropdownSearch = () => (\r\n    <div style={{ color: colors.neutral20, height: 24, width: 32 }}>\r\n        <Svg>\r\n            <path\r\n                d=\"M16.436 15.085l3.94 4.01a1 1 0 0 1-1.425 1.402l-3.938-4.006a7.5 7.5 0 1 1 1.423-1.406zM10.5 16a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11z\"\r\n                fill=\"currentColor\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n        </Svg>\r\n    </div>\r\n);\r\n\r\nconst DropDownInputs = withStyles(theme => ({\r\n    iconCloseButton: {\r\n        // display: 'none',\r\n        padding: 0,\r\n        color: grey[400],\r\n        fontSize: 16,\r\n        '&:hover': {\r\n            color: grey[800],\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'flex',\r\n        marginLeft: 0, //8\r\n        flex: 1,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n        width: '100%',\r\n        // padding: '8px 0 5px'\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n    required: {\r\n        color: red[600],\r\n    }\r\n}))(props => {\r\n    const { classes, id, placeholder, styleType, valueKey, onHandleClickClear,\r\n        toggleOpen, onHandleDelete, disabled, required, width, ...other } = props;\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'inline-flex', alignItems: 'center' }} >\r\n            <AmInput\r\n                //fullWidth \r\n                id={id} readOnly={true} autoComplete=\"off\"\r\n                disabled={disabled}\r\n                required={required}\r\n                placeholder={placeholder} value={valueKey}\r\n                style={{ width: width }}\r\n                styleType={styleType}\r\n                // className={classes.input}\r\n                onFocus={disabled ? null : valueKey ? null : (val, obj, element, event) => element.blur()}\r\n                onClick={disabled ? null : (val, obj, ele, event) => {\r\n                    event.cancelBubble = true;\r\n                    toggleOpen();\r\n                }}\r\n                InputProps={{\r\n                    inputProps: {\r\n                        className: classes.input,\r\n                    },\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {disabled ? null : valueKey ?\r\n                                <CloseIcon className={classes.iconCloseButton}\r\n                                    style={{ zIndex: 900 }}\r\n                                    size=\"small\" aria-label=\"Close\" onClick={onHandleClickClear} />\r\n                                : null}\r\n                            <IconButton className={classes.iconButton} disabled={disabled} size=\"small\" aria-label=\"Search\" onClick={toggleOpen}>\r\n                                <ArrowDropDownIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                {...other}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nfunction NoOptionsMessage(props) {\r\n    return (\r\n        <Typography\r\n            color=\"textSecondary\"\r\n            className={props.selectProps.classes.noOptionsMessage}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n    return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props) {\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <AmInput\r\n                fullWidth\r\n                styleType={props.selectProps.styleType}\r\n                disabled={props.isDisabled}\r\n                required={props.selectProps.required}\r\n                InputProps={{\r\n                    inputComponent,\r\n                    inputProps: {\r\n                        className: props.selectProps.classes.input2,\r\n                        inputRef: props.innerRef,\r\n                        children: props.children,\r\n                        ...props.innerProps,\r\n                    },\r\n                }}\r\n                {...props.selectProps.textFieldProps}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nfunction Placeholder(props) {\r\n    return (\r\n        <Typography\r\n            // color=\"textSecondary\"\r\n            className={props.isDisabled ? props.selectProps.classes.placeholderDisabled : props.selectProps.classes.placeholder}\r\n            {...props.innerProps}\r\n        >\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction SingleValue(props) {\r\n    return (\r\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n            {props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction ValueContainer(props) {\r\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nconst DropdownIndicator1 = withStyles(theme => ({\r\n    root: {\r\n        marginTop: 2,\r\n        marginBottom: 2\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n}))(props => {\r\n    const { classes, ...other } = props;\r\n    return (\r\n        // <components.DropdownIndicator {...other}>\r\n        <div className={classes.root} >\r\n            <IconButton className={classes.iconButton} size=\"small\" aria-label=\"select\">\r\n                <ArrowDropDownIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </div>\r\n        // </components.DropdownIndicator>\r\n    );\r\n});\r\n\r\nconst CustomClearText = withStyles(theme => ({\r\n    iconCloseButton: {\r\n        color: grey[400],\r\n        fontSize: 14,\r\n        '&:hover': {\r\n            color: grey[800],\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n}))(props => {\r\n    return (\r\n        <CloseIcon className={props.classes.iconCloseButton} size=\"small\" aria-label=\"Close\" />\r\n    )\r\n});\r\nconst ClearIndicator = (props) => {\r\n    const { children = <CustomClearText />, getStyles, innerProps: { ref, ...restInnerProps } } = props;\r\n    return (\r\n        <div {...restInnerProps} ref={ref} style={getStyles('clearIndicator', props)}>\r\n            {/* <div style={{ padding: '0px 0px', display: 'inline-block' }}> */}\r\n            {children}\r\n            {/* </div> */}\r\n        </div>\r\n    );\r\n};\r\nconst MenuCustom = props => {\r\n    // const { children, getStyles, innerProps: { ref, ...restInnerProps } } = props;\r\n    // return (\r\n    //     <div {...restInnerProps} ref={ref} style={getStyles('menu', props)}>\r\n    //         {children}\r\n    //     </div>\r\n    // );\r\n};\r\n\r\nconst componentNormal = {\r\n    Control,\r\n    Placeholder,\r\n    SingleValue,\r\n    // Menu: MenuCustom,\r\n    ValueContainer,\r\n    NoOptionsMessage,\r\n    DropdownIndicator: DropdownIndicator1,\r\n    ClearIndicator,\r\n    IndicatorSeparator: null\r\n};\r\nconst componentSearch = {\r\n    DropdownIndicator: DropdownSearch,\r\n    IndicatorSeparator: null\r\n};\r\nconst DropdownComponent = (props) => {\r\n    const {\r\n        id,\r\n        disabled,\r\n        required,\r\n        classes,\r\n        theme,\r\n        zIndex,\r\n        placeholder,\r\n        styleType,\r\n        value,\r\n        defaultValue,\r\n        returnDefaultValue,\r\n        autoDefaultValue,\r\n        fieldDataKey,\r\n        queryApi,\r\n        data,\r\n        width,\r\n        ddlMinWidth,\r\n        ddlMaxWidth,\r\n        fieldLabel,\r\n        labelPattern,\r\n        onChange,\r\n        ddlType,\r\n        ...other } = props;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [valueData, setValueData] = useState(null);\r\n    const [optionList, setOptionList] = useState([]);\r\n    const [valueKey, setValueKey] = useState(\"\");\r\n    const [defaultVal, setDefaultVal] = useState(null);\r\n    const [autoDefaultVal, setAutoDefaultVal] = useState(null);\r\n    const [upreturnDefaultValue, setReturnDefaultValue] = useState(returnDefaultValue);\r\n\r\n    const toggleOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n    const onSelectChange = (e) => {\r\n        setOpen(!isOpen)\r\n        if (e) {\r\n            setReturnDefaultValue(false)\r\n            setDefaultVal(null);\r\n            setValueData(e);\r\n            getValueKey(e);\r\n            onChange(e.value, e, id, fieldDataKey);\r\n        } else {\r\n            setReturnDefaultValue(false)\r\n            setValueData(null);\r\n            setDefaultVal(null);\r\n            setValueKey(\"\");\r\n            onChange(null, null, id, fieldDataKey)\r\n        }\r\n    };\r\n    const onHandleClickClear = (e) => {\r\n        setReturnDefaultValue(false)\r\n        setValueData(null);\r\n        setDefaultVal(null);\r\n        setValueKey(\"\");\r\n        onChange(null, null, id, fieldDataKey)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (queryApi) {\r\n            getData(createQueryString(queryApi));\r\n            \r\n        } else if (data) {\r\n            var dataOptions = data;\r\n            dataOptions.forEach(datas => {\r\n                datas.value = datas[fieldDataKey];\r\n                datas.label = getLabel(datas);\r\n            });\r\n            setOptionList(dataOptions);\r\n            if (data.length === 0) {\r\n                if (defaultValue !== undefined && returnDefaultValue) {\r\n                    setReturnDefaultValue(false)\r\n                    setValueData(null);\r\n                    setDefaultVal(null);\r\n                    setValueKey(\"\");\r\n                    onChange(null, null, id, fieldDataKey)\r\n                } else if (autoDefaultValue && returnDefaultValue) {\r\n                    setReturnDefaultValue(false)\r\n                    setValueData(null);\r\n                    setDefaultVal(null);\r\n                    setValueKey(\"\");\r\n                    onChange(null, null, id, fieldDataKey)\r\n                }\r\n            } else {\r\n                setValueData(null);\r\n                if (defaultValue !== undefined && returnDefaultValue) {\r\n                    setReturnDefaultValue(true)\r\n                    setDefaultVal(defaultValue);\r\n                } else if (autoDefaultValue && returnDefaultValue) {\r\n                    setReturnDefaultValue(true)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            setOptionList([]);\r\n        }\r\n    }, [queryApi, data]);\r\n\r\n    useEffect(() => {\r\n        console.log(defaultValue)\r\n        if (defaultValue !== undefined) {\r\n            setDefaultVal(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    useEffect(() => {\r\n        if ((defaultVal !== undefined && defaultVal !== null) && upreturnDefaultValue) {\r\n            if (valueData) {\r\n                onChange(valueData[fieldDataKey], valueData, id, fieldDataKey);\r\n            } else {\r\n                onChange(null, null, id, fieldDataKey);\r\n            }\r\n        } else if (autoDefaultValue && upreturnDefaultValue) {\r\n            if (valueData) {\r\n                onChange(valueData[fieldDataKey], valueData, id, fieldDataKey);\r\n            } else {\r\n                onChange(null, null, id, fieldDataKey);\r\n            }\r\n        }\r\n    }, [valueKey, valueData]);\r\n    useEffect(() => {\r\n        setValueData(value)\r\n\r\n        if (optionList) {\r\n            if (optionList.length > 0) {\r\n\r\n                if (value) {\r\n                    getDefaultByValue(value);\r\n                }\r\n                else if (defaultVal !== undefined && defaultVal !== null) {\r\n                    let hasOpt = optionList.some(opt => opt[fieldDataKey] === defaultVal)\r\n                    if (hasOpt) {\r\n                        getDefaultByValue(defaultVal);\r\n                    } else {\r\n                        getDefaultByValue(null);\r\n                    }\r\n                }\r\n                else if (autoDefaultValue) {\r\n                    getDefaultByValue(null);\r\n                }\r\n            }\r\n        }\r\n    }, [optionList, value]);\r\n\r\n    function getValueKey(showValueData) {\r\n        let str = \"\";\r\n        if (!isEmpty(showValueData)) {\r\n            if (fieldLabel) {\r\n                if (labelPattern) {\r\n                    fieldLabel.forEach((value, index) => {\r\n                        if (index === fieldLabel.length - 1) {\r\n                            str = str.concat(showValueData[value]);\r\n                        } else {\r\n                            str = str.concat(showValueData[value], labelPattern);\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    fieldLabel.forEach((value) => {\r\n                        str = str.concat(showValueData[value]);\r\n                    })\r\n                }\r\n\r\n            }\r\n        }\r\n        setValueKey(str);\r\n    }\r\n\r\n    async function getData(qryString) {\r\n        try {\r\n            const resData = await Axios.get(qryString).then(res => {\r\n                if (res.data.datas) {\r\n                    var dataOptions = res.data.datas;\r\n                    dataOptions.forEach(datas => {\r\n                        datas.value = datas[fieldDataKey];\r\n                        datas.label = getLabel(datas);\r\n                    });\r\n                    return (dataOptions);\r\n                }\r\n            });\r\n            setOptionList(resData);\r\n        } catch (err) {\r\n            setOptionList([]);\r\n        }\r\n    }\r\n    function isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const getDefaultByValue = (value) => {\r\n        if (optionList.length > 0) {\r\n            let valuearray = null;\r\n            let dataoption = [...optionList];\r\n            if (value !== undefined && value !== null) {\r\n                dataoption.forEach((val, index) => {\r\n\r\n                    if (String(value) === String(val[fieldDataKey])) {\r\n                        valuearray = ({\r\n                            ...val,\r\n                            value: val[fieldDataKey],\r\n                            label: getLabel(val),\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                let firstdata = dataoption[0];\r\n                valuearray = ({\r\n                    ...firstdata,\r\n                    value: firstdata[fieldDataKey],\r\n                    label: getLabel(firstdata),\r\n                })\r\n            }\r\n\r\n            setValueData(valuearray);\r\n            getValueKey(valuearray);\r\n        }\r\n    }\r\n    const getLabel = (datas) => {\r\n        var str = \"\";\r\n        if (fieldLabel) {\r\n            if (labelPattern) {\r\n                fieldLabel.forEach((value, index) => {\r\n                    if (index === fieldLabel.length - 1) {\r\n                        str = str.concat(datas[value]);\r\n                    } else {\r\n                        str = str.concat(datas[value], labelPattern);\r\n                    }\r\n                })\r\n            } else {\r\n                fieldLabel.forEach((value) => {\r\n                    str = str.concat(datas[value]);\r\n                })\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    const selectStyles2 = (zIndex) => {\r\n        return (\r\n            {\r\n                input: (base) => ({\r\n                    ...base,\r\n                    textAlign: \"left\",\r\n                    color: theme.palette.text.primary,//rgba(0, 0, 0, 0.87)\r\n                    '& input': {\r\n                        font: 'inherit',\r\n                    },\r\n                }),\r\n                clearIndicator: (base, state) => ({\r\n                    ...base,\r\n                    padding: '2px 0 0 0',\r\n                }),\r\n                menuPortal: base => ({ ...base, zIndex: zIndex })\r\n            })\r\n    };\r\n    return (\r\n        <>\r\n            <div className={classes.root} >\r\n\r\n                {ddlType === \"search\" ?\r\n                    <Dropdown\r\n                        isOpen={isOpen}\r\n                        onClose={toggleOpen}\r\n                        zIndex={zIndex}\r\n                        ddlMinWidth={ddlMinWidth}\r\n                        ddlMaxWidth={ddlMaxWidth}\r\n                        target={\r\n                            <DropDownInputs\r\n                                id={id}\r\n                                disabled={disabled}\r\n                                styleType={styleType}\r\n                                placeholder={placeholder}\r\n                                toggleOpen={toggleOpen}\r\n                                valueKey={valueKey}\r\n                                width={width}\r\n                                onHandleClickClear={onHandleClickClear}\r\n                                required={required}\r\n                                defaultValue={defaultVal}\r\n                                {...other}\r\n                            />\r\n                        }\r\n                    >\r\n                        <div style={{ width: width }}>\r\n                            <ReactSelect\r\n                                autoFocus\r\n                                name={id}\r\n                                backspaceRemovesValue={false}\r\n                                components={componentSearch}\r\n                                controlShouldRenderValue={false}\r\n                                hideSelectedOptions={false}\r\n                                isClearable={false}\r\n                                menuIsOpen={isOpen}\r\n                                onChange={onSelectChange}\r\n                                options={optionList}\r\n                                placeholder=\"Search...\"\r\n                                styles={selectStyles(ddlMinWidth, ddlMaxWidth, zIndex)}\r\n                                tabSelectsValue={false}\r\n                                value={valueData}\r\n                                menuPortalTarget={document.body}\r\n                                maxMenuHeight={300}\r\n                                // menuPosition={'fixed'}\r\n                                menuPlacement={'auto'}\r\n                            />\r\n                        </div>\r\n                    </Dropdown>\r\n                    : ddlType === \"normal\" ?\r\n                        <div style={{ width: width }}>\r\n                            <NoSsr>\r\n                                <ReactSelect\r\n                                    name={id}\r\n                                    styleType={styleType}\r\n                                    value={valueData}\r\n                                    isDisabled={disabled ? true : false}\r\n                                    required={required}\r\n                                    isSearchable\r\n                                    classes={classes}\r\n                                    options={optionList}\r\n                                    styles={selectStyles2(zIndex)}\r\n                                    components={componentNormal}\r\n                                    onChange={onSelectChange}\r\n                                    placeholder={placeholder}\r\n                                    isClearable\r\n                                    maxMenuHeight={300}\r\n                                    menuPortalTarget={document.body}\r\n                                    // menuPosition={'fixed'} \r\n                                    menuPlacement={'auto'}\r\n                                />\r\n                            </NoSsr>\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nDropdownComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    // id: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    defaultValue: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    data: PropTypes.array,\r\n    queryApi: PropTypes.object,\r\n    width: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    ddlMinWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    ddlMaxWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    fieldDataKey: PropTypes.string.isRequired,\r\n    labelPattern: PropTypes.string,\r\n    fieldLabel: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    ddlType: PropTypes.string.isRequired,\r\n    disabled: PropTypes.bool,\r\n    zIndex: PropTypes.number,\r\n    returnDefaultValue: PropTypes.bool,\r\n    autoDefaultValue: PropTypes.bool\r\n}\r\nDropdownComponent.defaultProps = {\r\n    fieldDataKey: \"value\",\r\n    fieldLabel: [\"label\"],\r\n    ddlType: \"normal\",\r\n    zIndex: 9999,\r\n    ddlMinWidth: 'auto',\r\n    ddlMaxWidth: 'auto',\r\n    width: 'auto',\r\n    returnDefaultValue: false\r\n}\r\nexport default withStyles(styles, { withTheme: true })(DropdownComponent);","import React, { useState, useEffect } from 'react';\r\nimport _ from 'lodash'\r\nimport Workbook from 'react-excel-workbook'\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n\r\n//�Ը����¡��\r\n//��С��   false �����Ŵ��ѧ�ҡ����������� , true �����Ŵ�຺auto �������Ŵ��˹�ҷ���ա�����¡��component\r\n// const [isLoad, setIsLoad] = useState(false);  \r\n//���ҧ�ѧ���蹻�����Ŵ ����Ѻ button \r\n// const onHandleLoadFile = (e) => setIsLoad(true);\r\n//���¡�� Component \r\n// <LoadExcel data={data} fileName={\"Pack\"} columns={cols}  isLoading={isLoad} onToggleLoad={value => setIsLoad(value) } />\r\n// \r\n\r\nconst LoadWorkbook = (props) => {\r\n    const {\r\n        data,\r\n        isLoading,\r\n        fileName,\r\n        columns,\r\n        onToggleLoad,\r\n        headerItemNo = \"#\",\r\n        defaultNumRows = true\r\n    } = props;\r\n\r\n    const [dataSrc, setDataSrc] = useState([]);\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n    const [newfileName, setFileName] = useState(fileName + \"_\" + moment().format('DDMMYYYY_HHmm') + \".xlsx\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (data && data.length > 0) {\r\n            getData(data);\r\n        } else {\r\n            setDataSrc([]);\r\n        }\r\n        // return () => console.log(\"unmounting...\");\r\n    }, [data]);\r\n    useEffect(() => {\r\n        if (dataSrc.length > 0) {\r\n            if (isLoading === true) {\r\n                document.getElementById(\"btnLoad\").click();\r\n            }\r\n        }else{\r\n            onToggleLoad(false);\r\n        }\r\n    }, [dataSrc, isLoading]);\r\n\r\n    const getData = (datas) => {\r\n        var datass = datas.map((datarow, index) => {\r\n            for (var xfield in datarow) {\r\n                if (!isNaN(datarow[xfield])) {\r\n                    if (datarow[xfield] != null)\r\n                        datarow[xfield] = datarow[xfield].toString();\r\n                }\r\n            }\r\n            if (headerItemNo) {\r\n                if (datarow[\"norownum\"]) {\r\n                    datarow[headerItemNo] = \"\";\r\n                } else {\r\n                    datarow[headerItemNo] = (index + 1).toString();\r\n                }\r\n            }\r\n            return datarow\r\n        })\r\n        setDataSrc(datass)\r\n    }\r\n\r\n    const onHandleClick = (event) => {\r\n        event.preventDefault();\r\n        onToggleLoad(false);\r\n    }\r\n    const getColums = () => {\r\n        var newColumn = null;\r\n        if (defaultNumRows && columns.length > 0) {\r\n            let header = { Header: headerItemNo }\r\n            newColumn = _.uniqBy([header,...columns], \"Header\");\r\n        } else {\r\n            newColumn = columns;\r\n        }\r\n\r\n        var newCols = newColumn.map((item, idx) => {\r\n            return <Workbook.Column\r\n                key={idx}\r\n                label={typeof (item.Header) === \"function\" ? item.accessor : item.Header === \"\" ? item.accessor : item.Header}\r\n                value={item.accessor === undefined ? item.Header : item.accessor} />\r\n        })\r\n        return newCols;\r\n    }\r\n    return (\r\n        <div>\r\n            <Workbook filename={newfileName} element={<div id='btnLoad' onClick={onHandleClick} ></div>}>\r\n                <Workbook.Sheet data={dataSrc} name=\"Sheet 1\">\r\n                    {getColums()}\r\n                </Workbook.Sheet>\r\n            </Workbook>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nLoadWorkbook.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    fileName: PropTypes.string,\r\n    columns: PropTypes.array.isRequired,\r\n    onToggleLoad: PropTypes.func.isRequired\r\n}\r\nexport default React.memo(LoadWorkbook);","import React, { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\n\r\nconst AmValidate = withStyles(theme => ({\r\n  root: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  },\r\n  success: {\r\n    color: green[500]\r\n  },\r\n  error: {\r\n    color: red[800]\r\n  }\r\n}))(props => {\r\n  const {\r\n    classes,\r\n    value,\r\n    msgSuccess,\r\n    msgError,\r\n    regExp,\r\n    customValidate,\r\n    onValidate\r\n  } = props;\r\n  const [resValid, setResValid] = useState(true);\r\n  const [showValid, setShowValid] = useState(true);\r\n  useEffect(() => {\r\n    var values = value.toString();\r\n    if (regExp) {\r\n      if (values.match(regExp)) {\r\n        setResValid(true);\r\n        //onValidate(true, msgSuccess)\r\n      } else {\r\n        setResValid(false);\r\n        //onValidate(false, msgError)\r\n      }\r\n      if (values.length > 0) {\r\n        setShowValid(true);\r\n      } else {\r\n        setShowValid(false);\r\n      }\r\n      if (regExp == \"/^.+$/\") {\r\n        setShowValid(true);\r\n      }\r\n    } else if (customValidate) {\r\n      let checkCustom = customValidate(values);\r\n      setResValid(checkCustom);\r\n      if (checkCustom) {\r\n        //onValidate(true, msgSuccess)\r\n      } else {\r\n        //onValidate(false, msgError)\r\n      }\r\n\r\n      if (values.length > 0) {\r\n        setShowValid(true);\r\n      } else {\r\n        setShowValid(false);\r\n      }\r\n    }\r\n  }, [value, regExp, customValidate]);\r\n\r\n  return showValid ? (\r\n    resValid ? (\r\n      <label className={classNames(classes.success, classes.root)}>\r\n        {msgSuccess}\r\n      </label>\r\n    ) : (\r\n      <label className={classNames(classes.error, classes.root)}>\r\n        {msgError}\r\n      </label>\r\n    )\r\n  ) : null;\r\n});\r\nAmValidate.propTypes = {\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  msgSuccess: PropTypes.string,\r\n  msgError: PropTypes.string,\r\n  regExp: PropTypes.any,\r\n  customValidate: PropTypes.func\r\n};\r\nAmValidate.defaultProps = {\r\n  value: \"\",\r\n  msgSuccess: \"\",\r\n  msgError: \"\"\r\n};\r\nexport default AmValidate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiTablePagination: {\r\n      // Name of the rule\r\n      toolbar: {\r\n        minHeight:0,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Pageination = props => {\r\n  const [page, setPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.onPageChange(page);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (props.resetPage) setPage(0);\r\n  }, [props.resetPage]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <TablePagination\r\n        style={{ marginRight: '0'}}\r\n        colSpan={3}\r\n        rowsPerPageOptions={[]}\r\n        component='div'\r\n        count={props.totalSize ? props.totalSize : 0}\r\n        rowsPerPage={props.pageSize}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          'aria-label': 'Previous Page'\r\n        }}\r\n        nextIconButtonProps={{\r\n          'aria-label': 'Next Page'\r\n        }}\r\n        SelectProps={{ displayEmpty: 'false' }}\r\n        labelRowsPerPage={null}\r\n        onChangePage={(e, page) => setPage(page)}\r\n        onChangeRowsPerPage={(e, page) => setPage(page)}\r\n        ActionsComponent={TablePaginationActionsWrapped}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst actionsStyles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n});\r\n\r\nconst TablePaginationActions = props => {\r\n  const handleFirstPageButtonClick = event => {\r\n    props.onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    props.onChangePage(event, props.page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    props.onChangePage(event, props.page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(props.count / props.rowsPerPage) - 1)\r\n    );\r\n  };\r\n\r\n  const { classes, count, page, rowsPerPage, theme } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='First Page'\r\n        style={{padding:0}}\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label='Previous Page'\r\n        style={{padding:0}}\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='Next Page'\r\n        style={{padding:0}}\r\n      >\r\n        {theme.direction === 'rtl' ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label='Last Page'\r\n        style={{padding:0}}\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nTablePaginationActions.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  resetPage: PropTypes.object\r\n};\r\n\r\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, {\r\n  withTheme: true\r\n})(TablePaginationActions);\r\n\r\nexport default Pageination;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useTranslation } from 'react-i18next'\r\nimport AmButton from \"../AmButton\";\r\nimport AmExportExcel from '../AmExportExcel'\r\nimport { apicall } from '../../components/function/CoreFunction'\r\nconst Axios = new apicall();\r\nconst useExportExcel = (initialData, onExcelFooter) => {\r\n    const [dataSrc, setDataSrc] = useState(initialData);\r\n\r\n    async function GetDataExport(queryAPI) {\r\n        try {\r\n            const resData = await Axios.get(queryAPI).then(res => {\r\n                if (res.data.datas) {\r\n                    if (res.data._result.status !== 0) {\r\n                        return (res.data.datas);\r\n                    }\r\n                }\r\n            });\r\n            if (onExcelFooter) {\r\n                setDataSrc(onExcelFooter(resData));\r\n            } else {\r\n                setDataSrc(resData);\r\n            }\r\n        } catch (err) {\r\n            setDataSrc([]);\r\n        }\r\n\r\n    }\r\n    const onClickLoad = (queryAPI) => {\r\n        if (queryAPI) {\r\n            GetDataExport(queryAPI);\r\n        } else {\r\n            if (dataSrc && dataSrc.length > 0 && onExcelFooter) {\r\n                setDataSrc(onExcelFooter(dataSrc));\r\n            }\r\n        }\r\n    };\r\n\r\n    return { dataSrc, onClickLoad };\r\n};\r\nconst Export = (props) => {\r\n    const { t } = useTranslation()\r\n    const { data, excelQueryAPI, onExcelFooter, cols, fileName } = props;\r\n    const { dataSrc, onClickLoad } = useExportExcel(data, onExcelFooter);\r\n\r\n    const [isLoad, setIsLoad] = useState(false);\r\n    useEffect(() => {\r\n        if (dataSrc && dataSrc.length > 0) {\r\n            setIsLoad(true);\r\n        }\r\n    }, [dataSrc]);\r\n\r\n    return <div>\r\n        <AmButton styleType=\"warning\" onClick={(e) => onClickLoad(excelQueryAPI)}>\r\n            {t('Export Excel')}\r\n        </AmButton>\r\n        <AmExportExcel\r\n            data={dataSrc}\r\n            fileName={fileName}\r\n            columns={cols}\r\n            isLoading={isLoad}\r\n            onToggleLoad={value => setIsLoad(value)} />\r\n    </div>\r\n}\r\n\r\nexport default Export","import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport ReactTable from \"react-table\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"react-table/react-table.css\";\r\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\r\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\r\n\r\nimport AmExportDataTable from \"./AmExportDataTable\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\r\n\r\nconst AmTable = props => {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState(props.data);\r\n  const [selection, setSelection] = useState([]);\r\n\r\n  // props.defaultSelection ? props.defaultSelection : []\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const tableRef = useRef();\r\n  useEffect(() => {\r\n    if (props.defaultSelection) {\r\n      setSelection(props.defaultSelection);\r\n    } else {\r\n      setSelection([]);\r\n    }\r\n  }, [props.defaultSelection]);\r\n  useEffect(() => {\r\n    // console.log(props.excelData);\r\n    // console.log(props.exportData);\r\n  }, []);\r\n  const createColumn = () => {\r\n    let cols = [...props.columns];\r\n\r\n    cols.forEach(x => {\r\n      if (!x.Cell)\r\n        x.Cell = e => (\r\n          <pre\r\n            style={{\r\n              fontSize: \"inherit\",\r\n              fontFamily: \"inherit\",\r\n              overflow: \"hidden\",\r\n              color: \"inherit\",\r\n              textOverflow: \"inherit\",\r\n              padding: 0,\r\n              margin: 0\r\n            }}\r\n            title={e.original[x.accessor]}\r\n          >\r\n            {e.original[x.accessor]}\r\n          </pre>\r\n        );\r\n    });\r\n\r\n    if (props.selection) {\r\n      if (props.selectionType === \"radio\") {\r\n        cols.unshift({\r\n          mode: \"selection\",\r\n          fixed: \"left\",\r\n          width: 31,\r\n          sortable: false,\r\n          Cell: e => {\r\n            let checked =\r\n              checkSelection(e.original[props.primaryKey]).length > 0;\r\n            return (\r\n              <Radio\r\n                type=\"radio\"\r\n                checked={checked}\r\n                style={{ padding: 0 }}\r\n                name=\"selection\"\r\n                onChange={ele =>\r\n                  onHandleSelection(e, \"radio\", ele.target.checked)\r\n                }\r\n              />\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        const obj = {\r\n          mode: \"selection\",\r\n          fixed: \"left\",\r\n          Header: e => {\r\n            return (\r\n              <Checkbox\r\n                style={{ padding: 0 }}\r\n                checked={selectAll}\r\n                onClick={ele => {\r\n                  onHandleSelection(\r\n                    null,\r\n                    \"selectAll\",\r\n                    ele.target.checked,\r\n                    e.data\r\n                  );\r\n                }}\r\n              />\r\n            );\r\n          },\r\n          width: 31,\r\n          sortable: false,\r\n          Cell: e => {\r\n            let checked =\r\n              checkSelection(e.original[props.primaryKey]).length > 0;\r\n            return (\r\n              <Checkbox\r\n                checked={checked}\r\n                style={{ padding: 0 }}\r\n                className={classNames(\"selection\")}\r\n                onChange={ele =>\r\n                  onHandleSelection(e, \"checkbox\", ele.target.checked)\r\n                }\r\n              />\r\n            );\r\n          }\r\n        };\r\n        cols.unshift(obj);\r\n      }\r\n    }\r\n    if (props.currentPage !== undefined) {\r\n      cols.unshift({\r\n        fixed: \"left\",\r\n        width: 50,\r\n        sortable: false,\r\n        Cell: e => {\r\n          let numrow = 0;\r\n          if (props.currentPage !== undefined) {\r\n            if (props.currentPage > 0) {\r\n              numrow =\r\n                e.viewIndex +\r\n                1 +\r\n                parseInt(props.currentPage) * parseInt(props.pageSize);\r\n            } else {\r\n              numrow = e.viewIndex + 1;\r\n            }\r\n          }\r\n          return <span style={{ fontWeight: \"bold\" }}>{numrow}</span>;\r\n        }\r\n      });\r\n    }\r\n\r\n    const sortCols = cols.map(x => {\r\n      const { Header, type, ...row } = x;\r\n      let column;\r\n      if (\r\n        (x.sortable || x.sortable === undefined) &&\r\n        (props.sortable || props.sortable === undefined)\r\n      ) {\r\n        const header = typeof x.Header === \"string\" ? t(x.Header) : x.Header();\r\n        column = {\r\n          Header: () => <div className=\"sortable\">{header}</div>,\r\n          ...row\r\n        };\r\n      } else {\r\n        column = {\r\n          ...x,\r\n          Header: typeof Header === \"string\" ? t(Header) : Header\r\n        };\r\n      }\r\n\r\n      if (type === \"datetime\") {\r\n        column.Cell = data => {\r\n          if (\r\n            data.original[x.accessor] === \"\" ||\r\n            data.original[x.accessor] === null\r\n          ) {\r\n            return \"\";\r\n          } else {\r\n            return (\r\n              <span>\r\n                {Moment(data.original[x.accessor]).isValid\r\n                  ? Moment(data.original[x.accessor]).format(\r\n                    x.dateFormat ? x.dateFormat : \"DD/MM/YYYY HH:mm\"\r\n                  )\r\n                  : \"\"}\r\n              </span>\r\n            );\r\n          }\r\n        };\r\n      }\r\n\r\n      return column;\r\n    });\r\n\r\n    const sumCols = sortCols.map(x => {\r\n      const { Footer, ...row } = x;\r\n      if (x.Footer) {\r\n        const findFooter = props.sumFooter.find(\r\n          footer => x.accessor === footer.accessor\r\n        );\r\n\r\n        return {\r\n          Footer: () => <span>{findFooter.sumData}</span>,\r\n          ...row,\r\n          getFooterProps: () => ({\r\n            style: {\r\n              backgroundColor: \"#c8ced3\"\r\n            }\r\n          })\r\n        };\r\n      } else {\r\n        return x;\r\n      }\r\n    });\r\n    return sumCols;\r\n  };\r\n\r\n  const [columns, setColumns] = useState(createColumn());\r\n  useEffect(() => {\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setColumns(createColumn());\r\n  }, [props.columns]);\r\n\r\n  useEffect(() => {\r\n    if (data !== props.data) {\r\n      setLoading(true);\r\n      setData(props.data);\r\n      setSelection([]);\r\n      setSelectAll(false);\r\n      /* if (selectAll) {\r\n                onHandleSelection(null, \"selectAll\", selectAll, props.data)\r\n            } */\r\n    }\r\n  }, [props.data, props.reload]);\r\n\r\n  useEffect(() => {\r\n    if (props.selection) {\r\n      let cols = createColumn(selectAll);\r\n      setColumns(cols);\r\n      props.getSelection(selection);\r\n    }\r\n  }, [selectAll, selection]);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    let cols = createColumn();\r\n    setColumns(cols);\r\n  }, [props.currentPage, props.sumFooter, localStorage.getItem(\"Lang\")]);\r\n\r\n  const checkSelection = id => {\r\n    return selection.filter(x => x[props.primaryKey] === id);\r\n  };\r\n\r\n  const onHandleSelection = (rowdata, type, status, tableData) => {\r\n    let selectionData = selection;\r\n    if (type === \"checkbox\") {\r\n      if (selectionData.length > 0) {\r\n        selectionData.forEach((row, index) => {\r\n          if (row[props.primaryKey] === rowdata.original[props.primaryKey])\r\n            selectionData.splice(index, 1);\r\n        });\r\n        if (status) selectionData.push(rowdata.original);\r\n      } else {\r\n        if (status) selectionData.push(rowdata.original);\r\n      }\r\n      setSelection([...selectionData]);\r\n    } else if (type === \"selectAll\") {\r\n      if (status) {\r\n        let getData = tableData.map(row =>\r\n          row._original ? row._original : row\r\n        );\r\n        // selectionData.forEach((x, idx) => {\r\n        //   getData.forEach(row => {\r\n        //     if (x[props.primaryKey] === row[props.primaryKey]) {\r\n        //       selectionData.splice(idx, 1);\r\n        //     }\r\n        //   });\r\n        // });\r\n        // selectionData.push(...getData);\r\n        setSelection([...getData]);\r\n      } else {\r\n        selectionData.splice(0, selectionData.length);\r\n        setSelection([]);\r\n      }\r\n      setSelectAll(status);\r\n    } else {\r\n      selectionData.splice(0, selectionData.length);\r\n      selectionData.push(rowdata.original);\r\n      setSelection(selectionData);\r\n    }\r\n  };\r\n\r\n  const exportColumns = () => {\r\n    return props.columns.filter(x => {\r\n      return x.accessor;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"inline-flex\", float: \"right\" }}>\r\n        {props.renderCustomButtonB4}\r\n        {props.exportData ? (\r\n          <AmExportDataTable\r\n            data={props.excelData ? props.excelData : []}\r\n            excelQueryAPI={props.excelQueryAPI}\r\n            onExcelFooter={props.onExcelFooter}\r\n            fileName={props.fileNameTable ? props.fileNameTable : \"Table\"}\r\n            cols={exportColumns()}\r\n          />\r\n        ) : null}\r\n        {props.renderCustomButtonAF}\r\n      </div>\r\n      <div style={{ clear: \"both\" }} />\r\n      <ReactTableFixedColumns\r\n        ref={tableRef}\r\n        loading={props.loading ? loading : false}\r\n        sortable={props.sortable}\r\n        editable={false}\r\n        filterable={false}\r\n        defaultPageSize={props.pageSize}\r\n        data={data}\r\n        resizable={false}\r\n        columns={columns}\r\n        showPagination={false}\r\n        multiSort={false}\r\n        minRows={props.minRows ? props.minRows : 5}\r\n        headerStyle={{ background: \"red\" }}\r\n        style={{\r\n          marginTop: \"3px\",\r\n          backgroundColor: \"white\",\r\n          maxHeight: \"550px\",\r\n          border: \"0.5px solid #eceff1\",\r\n          zIndex: 0,\r\n          fontSize: \"14px\",\r\n          ...props.style\r\n        }}\r\n        onSortedChange={sorted => { \r\n          setData([]);\r\n          props.sort({\r\n            id: sorted[0].id,\r\n            sortDirection: sorted[0].desc ? \"desc\" : \"asc\"\r\n          });\r\n        }}\r\n        getTdProps={(state, row, col, instance) => {\r\n          if (col.type === \"number\") {\r\n            return { style: { textAlign: \"right\" } };\r\n          } else return {};\r\n        }}\r\n        getTrProps={(state, rowInfo) => {\r\n          if (props.getTrProps) {\r\n            return props.getTrProps(state, rowInfo);\r\n          } else {\r\n            if (rowInfo && rowInfo.row) {\r\n              if (rowInfo.original[props.editFlag]) {\r\n                return {\r\n                  onClick: () =>\r\n                    props.onRowClick\r\n                      ? props.onRowClick(rowInfo.original)\r\n                      : null,\r\n                  className: \"editData\"\r\n                };\r\n              } else {\r\n                return {\r\n                  onClick: () =>\r\n                    props.onRowClick ? props.onRowClick(rowInfo.original) : null\r\n                };\r\n              }\r\n            } else {\r\n              return {\r\n                onClick: () =>\r\n                  props.onRowClick ? props.onRowClick(rowInfo.original) : null\r\n              };\r\n            }\r\n          }\r\n        }}\r\n      />\r\n\r\n      <div style={{ display: \"inline-flex\", float: \"left\" }}>\r\n        {props.renderCustomButtonBTMLeft}\r\n      </div>\r\n      <div style={{ display: \"inline-flex\", float: \"right\" }}>\r\n        {props.renderCustomButtonBTMRight}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAmTable.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  pageSize: PropTypes.number,\r\n  sort: PropTypes.func,\r\n  sortable: PropTypes.bool,\r\n  selection: PropTypes.bool,\r\n  selectionType: PropTypes.string,\r\n  getSelection: PropTypes.func,\r\n  style: PropTypes.object,\r\n  onRowClick: PropTypes.func,\r\n  sumFooter: PropTypes.array,\r\n  currentPage: PropTypes.number,\r\n  editFlag: PropTypes.string,\r\n  exportData: PropTypes.bool\r\n};\r\n\r\nexport default AmTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { grey, red } from \"@material-ui/core/colors\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 'auto',\r\n        backgroundColor: \"white\"\r\n    },\r\n    iconCloseButton: {\r\n        // display: 'none',\r\n        padding: 0,\r\n        color: grey[400],\r\n        fontSize: 16,\r\n        \"&:hover\": {\r\n            color: grey[800],\r\n            cursor: \"pointer\"\r\n        }\r\n    },\r\n    required: {\r\n        color: red[600],\r\n        fontSize: \"18px\"\r\n    }\r\n}));\r\n\r\nexport default function DateAndTimePickers(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        fieldID,\r\n        TypeDate = \"datetime-local\",\r\n        disabled,\r\n        required,\r\n        defaultValue,\r\n        onChange,\r\n        onBlur,\r\n        setTimeZero,\r\n        ...other\r\n    } = props;\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // console.log(defaultValue)\r\n        // console.log(props)\r\n        if (defaultValue) {\r\n            let datetime = \"\";\r\n            if (typeof defaultValue === \"string\") {\r\n                datetime = defaultValue;\r\n            } else {\r\n                if (setTimeZero) {\r\n                    if (TypeDate === \"time\") {\r\n                        datetime = moment().format(\"00:00\");\r\n                    } else {\r\n                        datetime = moment().format(\"YYYY-MM-DDT00:00\");\r\n                    }\r\n                } else {\r\n\r\n                    if (TypeDate === \"time\") {\r\n                        datetime = moment().format(\"HH:mm\");\r\n                    } else if (TypeDate === \"date\") {\r\n                        datetime = moment().format(\"YYYY-MM-DD\");\r\n                    } else if (TypeDate === \"datetime-local\") {\r\n                        datetime = moment().format(\"YYYY-MM-DDTHH:mm\");\r\n                    } else {\r\n                        datetime = \"\"\r\n                    }\r\n                }\r\n            }\r\n            setValue(datetime)\r\n            let dataReturn = {\r\n                fieldID: fieldID,\r\n                fieldDataKey: datetime,\r\n                fieldDataObject: datetime\r\n            }\r\n\r\n            if (!onBlur) {\r\n                onChange(dataReturn)\r\n            } else {\r\n                onBlur(dataReturn)\r\n            }\r\n\r\n        } else {\r\n            setValue(\"\");\r\n        }\r\n\r\n    }, [defaultValue]);\r\n    const handleDateonBlur = (e) => {\r\n        if (e && e.target.value) {\r\n            setValue(e.target.value);\r\n            if (onBlur) {\r\n\r\n\r\n                let newDate = getFormatDateTime(e.target.value);\r\n                let dataReturn = {\r\n                    fieldID: fieldID,\r\n                    fieldDataKey: newDate,\r\n                    fieldDataObject: newDate\r\n                }\r\n                // console.log(\"onBlur\")\r\n                onBlur(dataReturn);\r\n            }\r\n        }\r\n    };\r\n    const handleDateonChange = (e) => {\r\n        if (e && e.target.value) {\r\n            setValue(e.target.value);\r\n            if (onChange) {\r\n\r\n                let newDate = getFormatDateTime(e.target.value);\r\n                let dataReturn = {\r\n                    fieldID: fieldID,\r\n                    fieldDataKey: newDate,\r\n                    fieldDataObject: newDate\r\n                }\r\n                // console.log(\"onChange\")\r\n                onChange(dataReturn);\r\n            }\r\n        }\r\n    };\r\n    const getFormatDateTime = (val) => {\r\n        if (val) {\r\n            if (TypeDate === \"time\") {\r\n                return moment(val).format(\"HH:mm\");\r\n            } else if (TypeDate === \"date\") {\r\n                return moment(val).format(\"YYYY-MM-DD\");\r\n            } else if (TypeDate === \"datetime-local\") {\r\n                return moment(val).format(\"YYYY-MM-DDTHH:mm:ss\");\r\n            } else {\r\n                return \"\"\r\n            }\r\n        } else {\r\n            if (TypeDate === \"time\") {\r\n                return moment().format(\"HH:mm\");\r\n            } else if (TypeDate === \"date\") {\r\n                return moment().format(\"YYYY-MM-DD\");\r\n            } else if (TypeDate === \"datetime-local\") {\r\n                return moment().format(\"YYYY-MM-DDTHH:mm:ss\");\r\n            } else {\r\n                return \"\"\r\n            }\r\n        }\r\n\r\n    }\r\n    const handleClear = () => {\r\n        setValue(\"\");\r\n        let newDate = \"\";\r\n        let dataReturn = {\r\n            fieldID: fieldID,\r\n            fieldDataKey: newDate,\r\n            fieldDataObject: newDate\r\n        }\r\n        if (onBlur) {\r\n            // console.log(dataReturn)\r\n            onBlur(dataReturn);\r\n        } else {\r\n            // console.log(dataReturn)\r\n            onChange(dataReturn);\r\n        }\r\n    }\r\n    return (\r\n        <form className={classes.container} noValidate>\r\n            <TextField\r\n                id={fieldID}\r\n                type={TypeDate}\r\n                disabled={disabled ? disabled : false}\r\n                size={\"small\"}\r\n                value={value}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                    shrink: true\r\n                }}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <CloseIcon\r\n                                className={classes.iconCloseButton}\r\n                                size=\"small\"\r\n                                aria-label=\"Close\"\r\n                                onClick={disabled ? null : handleClear}\r\n                            />\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n                onChange={handleDateonChange}\r\n                onBlur={handleDateonBlur}\r\n                {...other}\r\n            />\r\n            <div\r\n                style={{\r\n                    display: \"inline-flex\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                {required ? <label className={classes.required}>*</label> : null}\r\n            </div>\r\n        </form>\r\n    );\r\n}","import classNames from 'classnames';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { grey, red } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next'\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AmButton from \"./AmButton\";\r\nimport AmInput from \"./AmInput\";\r\nimport { apicall, createQueryString, Clone } from './function/CoreFunction2'\r\nimport Pagination from './table/AmPagination';\r\nimport Table from './table/AmTable';\r\n\r\nconst Axios = new apicall()\r\nconst SearchInput = withStyles(theme => ({\r\n    root: {\r\n        padding: '2px 0px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'auto',\r\n    },\r\n    input: {\r\n        marginLeft: 0, //8\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n    divider: {\r\n        width: 1,\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}))(props => {\r\n    const { classes, styleType, onClickSearch, onKeypress, ...other } = props;\r\n    const keywordRef = useRef(null);\r\n    const onHandleClick = () => {\r\n        onClickSearch(keywordRef.current.value);\r\n    }\r\n    const onHandleKeypress = (value, obj, ele, event) => {\r\n        if (event.key === 'Enter') {\r\n            onClickSearch(keywordRef.current.value);\r\n        }\r\n    }\r\n    return (\r\n        // <Paper className={classes.root} elevation={1} style={{ width: inputWidth }}>\r\n        //     <InputBase name=\"input_search\" className={classes.input} placeholder=\"Search...\" inputRef={keywordRef} onChange={onChangeInput} onKeyPress={onHandleKeypress} {...other} />\r\n        //     <IconButton className={classes.iconButton} size=\"small\" aria-label=\"Search\" onClick={onHandleClick}>\r\n        //         <SearchIcon fontSize=\"small\" />\r\n        //     </IconButton>\r\n        // </Paper>\r\n        <div className={classes.root}>\r\n            <AmInput type=\"search\" placeholder=\"Search...\" styleType={styleType} inputRef={keywordRef} onKeyPress={onHandleKeypress} {...other}\r\n                InputProps={{\r\n                    inputProps: {\r\n                        className: classes.input,\r\n                    },\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton className={classes.iconButton} size=\"small\" aria-label=\"Search\" onClick={onHandleClick}>\r\n                                <SearchIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst SearchText = withStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 'auto',\r\n    },\r\n    input: {\r\n        marginLeft: 0, //8\r\n        flex: 1,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n    iconCloseButton: {\r\n        // display: 'none',\r\n        padding: 0,\r\n        color: grey[400],\r\n        fontSize: 16,\r\n        '&:hover': {\r\n            color: grey[800],\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    divider: {\r\n        width: 1,\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}))(props => {\r\n    const { id, classes, styleType, required, value, onClickOpen, onClickClear, inputWidth, disabled, ...other } = props;\r\n    const onHandleClick = (e) => {\r\n        var idicon = \"closeicon\" + id;\r\n        if (e.target.id !== idicon) {\r\n            onClickOpen()\r\n        } else {\r\n            onClickClear()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <AmInput id={id} inputRef={props.popupref} disabled={disabled} required={required} readOnly={true} styleType={styleType} autoComplete=\"off\" value={value}\r\n                onFocus={value ? null : disabled ? null : (val, obj, element, event) => element.blur()}\r\n                onClick={disabled ? null : (val, obj, element, event) => onHandleClick(event)}\r\n                style={{ width: inputWidth }}\r\n                InputProps={{\r\n                    inputProps: {\r\n                        className: classes.input,\r\n                    },\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {value ?\r\n                                <CloseIcon id={\"closeicon\" + id} className={classes.iconCloseButton}\r\n                                    size=\"small\" aria-label=\"Close\" onClick={disabled ? null : onHandleClick} />\r\n                                : null}\r\n                            <IconButton className={classes.iconButton} size=\"small\" aria-label=\"Search\" onClick={disabled ? null : onClickOpen}>\r\n                                <SearchIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                {...other}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n    root: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n        padding: '3px'\r\n    },\r\n}))(props => {\r\n    const { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"Close\" size=\"small\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: '0 5px 0 5px',\r\n        overflowY: 'auto'\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n    root: {\r\n        borderTop: `1px solid ${theme.palette.divider}`,\r\n        margin: 0,\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nconst StyledSearch = styled.div`\r\n  position: relative;\r\n  top: 0;\r\n  margin: 10px;\r\n`\r\nconst FindPopup = (props) => {\r\n    const { t } = useTranslation()\r\n    const {\r\n        id,\r\n        value,\r\n        disabled,\r\n        styleType,\r\n        required,\r\n        labelTitle,\r\n        fieldLabel,\r\n        labelPattern,\r\n        queryApi,\r\n        fieldDataKey,\r\n        defaultValue,\r\n        columns,\r\n        width,\r\n        placeholder,\r\n        onChange,\r\n        popupref,\r\n        search,\r\n        ...other\r\n    } = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    // const [keywordMain, setKeywordMain] = useState(null);\r\n    const [keywordSub, setKeywordSub] = useState(null);\r\n    //Query Select from Main Page\r\n    const [query, setQuery] = useState(null);\r\n    const [data, setData] = useState([]);\r\n    const [valueKey, setValueKey] = useState(\"\");\r\n    const [defaultVal, setDefaultVal] = useState(null);\r\n    const [dataObjects, setDataObjects] = useState(null);\r\n\r\n    //table\r\n    const [totalSize, setTotalSize] = useState(0);\r\n    const [page, setPage] = useState();\r\n    const [sort, setSort] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            setDefaultVal(defaultValue);\r\n        }\r\n        // setValueKey(defaultValue)\r\n    }, [defaultValue]);\r\n    useEffect(() => {\r\n        if (value) {\r\n            if (dataObjects) {\r\n                getValueKey(dataObjects)\r\n            } else {\r\n                getDefaultByQuery(value);\r\n            }\r\n        } else if (defaultVal) {\r\n            getDefaultByQuery(defaultVal);\r\n        }\r\n\r\n    }, [value, defaultVal]);\r\n\r\n    useEffect(() => {\r\n        if (typeof (page) === \"number\") {\r\n            const queryEdit = JSON.parse(JSON.stringify(query));\r\n            queryEdit.sk = page === 0 ? 0 : page * parseInt(queryEdit.l, 10);\r\n            setQuery(queryEdit)\r\n            getData(createQueryString(queryEdit));\r\n        }\r\n    }, [page])\r\n    //อัพเดทข้อมูลเมื่อมีคำสั่ง sort เข้ามา\r\n    useEffect(() => {\r\n        if (sort) {\r\n            if (sort !== 0) {\r\n                const queryEdit = query;\r\n                queryEdit.s = '[{\"f\":\"' + sort.field + '\", \"od\":\"' + sort.order + '\"}]';\r\n                setQuery(queryEdit)\r\n                getData(createQueryString(queryEdit));\r\n            }\r\n        }\r\n    }, [sort])\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            setSort(0);\r\n            if (queryApi) {\r\n                queryApi.l = 10;\r\n                // queryApi.q = '[{ \"f\": \"Status\", \"c\":\"<\", \"v\": 2}]';\r\n            }\r\n            if (query === null) {\r\n                if (keywordSub !== null) {\r\n                    if (keywordSub === \"\") {\r\n                        setQuery(queryApi)\r\n                        getData(createQueryString(queryApi));\r\n                    } else {\r\n                        modifySelect();\r\n                    }\r\n                } else {\r\n                    setQuery(queryApi)\r\n                    getData(createQueryString(queryApi));\r\n                }\r\n\r\n            } else {\r\n                if (keywordSub !== null) {\r\n                    if (keywordSub === \"\") {\r\n                        setQuery(queryApi)\r\n                        getData(createQueryString(queryApi));\r\n                    } else {\r\n                        modifySelect();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return () => {\r\n            setKeywordSub(null)\r\n        };\r\n    }, [open, keywordSub]);\r\n\r\n    const getDefaultByQuery = (val) => {\r\n        if (queryApi) {\r\n            let newQueryStr = Clone(queryApi);\r\n            let sel = [];\r\n            if (newQueryStr.q) {\r\n                sel = JSON.parse(newQueryStr.q)\r\n            }\r\n            sel.push({ \"f\": fieldDataKey, \"c\": \"=\", \"v\": val })\r\n            newQueryStr.q = JSON.stringify(sel);\r\n            getDataDefault(createQueryString(newQueryStr));\r\n        }\r\n    }\r\n    async function getDataDefault(qryString) {\r\n        const res = await Axios.get(qryString).then(res => res)\r\n        if (res.data.datas) {\r\n            getValueKey(res.data.datas[0])\r\n            onHandleClickChange(res.data.datas[0])\r\n        }\r\n    }\r\n    function getValueKey(showValueData) {\r\n        let str = \"\";\r\n        if (!isEmpty(showValueData)) {\r\n            if (fieldLabel) {\r\n                if (labelPattern) {\r\n                    fieldLabel.forEach((value, index) => {\r\n                        if (index === fieldLabel.length - 1) {\r\n                            str = str.concat(showValueData[value])\r\n                        } else {\r\n                            str = str.concat(showValueData[value], labelPattern)\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    fieldLabel.forEach((value) => {\r\n                        str = str.concat(showValueData[value])\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                str = showValueData[fieldDataKey];\r\n            }\r\n        }\r\n        setValueKey(str)\r\n    }\r\n    function isEmpty(obj) {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    async function getData(qryString) {\r\n        const res = await Axios.get(qryString).then(res => res)\r\n        if (res.data.datas) {\r\n            setData(res.data.datas)\r\n            setTotalSize(res.data.counts)\r\n        } else {\r\n            setData([])\r\n            setTotalSize(0)\r\n        }\r\n    }\r\n    const modifySelect = () => {\r\n        let queryStrEdit = Clone(queryApi);\r\n        let defaultSel = [];\r\n        let newSel = [];\r\n\r\n        if (queryStrEdit.q) {\r\n            defaultSel = JSON.parse(queryStrEdit.q)\r\n        }\r\n        // q: '[{\"q\":[{ \"f\": \"ID\", \"c\":\"like\", \"v\": \"%aa%\"},{ \"o\": \"or\",\"f\": \"Code\", \"c\":\"like\", \"v\": \"%aa%\"}]}, { \"f\": \"Status\", \"c\":\"<\", \"v\": 2}]',\r\n\r\n        columns.map((item, index) => {\r\n            if (item.accessor !== \"\") {\r\n                if (index === 0) {\r\n                    newSel.push({\r\n                        // \"o\": \"and\", \r\n                        \"f\": item.accessor,\r\n                        \"c\": \"like\", \"v\": encodeURIComponent(keywordSub)\r\n                    })\r\n                } else {\r\n                    newSel.push({\r\n                        \"o\": \"or\", \"f\": item.accessor,\r\n                        \"c\": \"like\", \"v\": encodeURIComponent(keywordSub)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n        defaultSel.unshift({ \"q\": newSel })\r\n        queryStrEdit.q = JSON.stringify(defaultSel);\r\n        setQuery(queryStrEdit)\r\n        getData(createQueryString(queryStrEdit));\r\n    }\r\n\r\n\r\n    const onHandleClick = (e) => {\r\n        setKeywordSub(e)\r\n    }\r\n    const onHandleClickChange = (dataObject) => {\r\n        setOpen(false);\r\n        setKeywordSub(null);\r\n        setDefaultVal(null);\r\n        setQuery(null);\r\n        //ค่าที่ส่งกลับไป id,datakey,fieldDataKey,dataObject\r\n        // let value = dataObject[fieldDataKey];\r\n        getValueKey(dataObject)\r\n\r\n        setDataObjects(dataObject)\r\n        onChange(dataObject[fieldDataKey], dataObject, id, fieldDataKey);\r\n\r\n    }\r\n    const onHandleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const onHandleClickClose = (e) => {\r\n        setOpen(false);\r\n        setKeywordSub(null);\r\n        setQuery(null);\r\n    }\r\n    const onHandleClickClear = () => {\r\n        setValueKey(\"\");\r\n        setDataObjects(null);\r\n        setDefaultVal(null);\r\n        onChange(null, null, id, fieldDataKey)\r\n    }\r\n    const calWidth = (columsList) => {\r\n        let tableWidth = 0;\r\n        columsList.forEach((row) => tableWidth = tableWidth + row.width);\r\n        return tableWidth\r\n    }\r\n    return (\r\n        <>\r\n            <SearchText id={id} popupref={popupref} placeholder={placeholder} styleType={styleType} required={required} value={valueKey} disabled={disabled}\r\n                onClickOpen={onHandleClickOpen} inputWidth={width} onClickClear={onHandleClickClear}  {...other} />\r\n            <Dialog\r\n                onClose={onHandleClickClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n                maxWidth=\"xl\"\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={onHandleClickClose}>\r\n                    {t(labelTitle)}\r\n                </DialogTitle>\r\n                {search !== false ? <StyledSearch>\r\n                    <SearchInput name=\"searchSub\" styleType={styleType} onClickSearch={onHandleClick} />\r\n                </StyledSearch> : null}\r\n\r\n                <DialogContent>\r\n                    <Table\r\n                        //ข้อมูลตาราง\r\n                        data={data}\r\n                        //ข้อมูลหัวตาราง\r\n                        columns={columns}\r\n                        //จำนวนข้อมูลต่อหน้า\r\n                        pageSize={10}\r\n                        //func sort argument = Obj\r\n                        sort={(sort) => setSort({ field: sort.id, order: sort.sortDirection })}\r\n                        onRowClick={onHandleClickChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Pagination\r\n                        //จำนวนข้อมูลทั้งหมด\r\n                        totalSize={totalSize}\r\n                        //จำนวนข้อมูลต่อหน้า\r\n                        pageSize={10}\r\n                        //return หน้าที่ถูกกด : function\r\n                        onPageChange={(page) => setPage(page)} />\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nFindPopup.propTypes = {\r\n    queryApi: PropTypes.object.isRequired,\r\n    width: PropTypes.number,\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    defaultValue: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    labelTitle: PropTypes.string,\r\n    fieldDataKey: PropTypes.string,\r\n    fieldLabel: PropTypes.array.isRequired,\r\n    disabled: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\nexport default FindPopup;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Input from '@material-ui/core/Input'\r\nimport FilledInput from '@material-ui/core/FilledInput/FilledInput'\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport blue from '@material-ui/core/colors/blue'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport cx from 'classnames'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { indigo, grey, red } from '@material-ui/core/colors';\r\n\r\nconst variantComponent = {\r\n    standard: Input,\r\n    filled: FilledInput,\r\n    outlined: OutlinedInput\r\n}\r\n\r\nconst styles = (theme) => {\r\n    const light = theme.palette.type === 'light'\r\n    const bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)'\r\n\r\n    return {\r\n        root: {},\r\n        inputRoot: {\r\n            display: 'inline-block',\r\n            flex: 1,\r\n            marginTop: 2,\r\n            paddingBottom: 3,\r\n            minWidth: 70,\r\n            // alignItems: 'center',\r\n            '&$outlined,&$filled': {\r\n                boxSizing: 'border-box'\r\n            },\r\n            '&$outlined': {\r\n                paddingTop: 14\r\n            },\r\n            '&$filled': {\r\n                paddingTop: 28\r\n            }, \r\n        },\r\n        input: {\r\n            display: 'inline-block',\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            appearance: 'none', // Remove border in Safari, doesn't seem to break anything in other browsers\r\n            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated style).\r\n            float: 'left',\r\n            width: '100%',\r\n            '&:not($standard)': {\r\n                paddingTop: 0\r\n            }\r\n        },\r\n        chipContainer: {\r\n            display: 'flex',\r\n            flexFlow: 'row wrap',\r\n            cursor: 'text',\r\n            marginBottom: -4,\r\n            backgroundColor: 'white',\r\n            // minHeight: 40,\r\n            '&$labeled&$standard': {\r\n                marginTop: 18\r\n            }\r\n        },\r\n        outlined: {},\r\n        standard: {},\r\n        filled: {},\r\n        labeled: {},\r\n        label: {\r\n            top: 4,\r\n            '&$outlined&:not($labelShrink)': {\r\n                top: -4\r\n            },\r\n            '&$filled&:not($labelShrink)': {\r\n                top: 0\r\n            }\r\n        },\r\n        labelShrink: {\r\n            top: 0\r\n        },\r\n        helperText: {\r\n            marginBottom: -20\r\n        },\r\n        inkbar: {\r\n            '&:after': {\r\n                backgroundColor: theme.palette.primary[light ? 'dark' : 'light'],\r\n                left: 0,\r\n                bottom: 0,\r\n                // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\r\n                content: '\"\"',\r\n                height: 2,\r\n                position: 'absolute',\r\n                right: 0,\r\n                transform: 'scaleX(0)',\r\n                transition: theme.transitions.create('transform', {\r\n                    duration: theme.transitions.duration.shorter,\r\n                    easing: theme.transitions.easing.easeOut\r\n                }),\r\n                pointerEvents: 'none' // Transparent to the hover style.\r\n            }, \r\n        },\r\n        focused: {},\r\n        disabled: {},\r\n        underline: {\r\n            '&:before': {\r\n                backgroundColor: bottomLineColor,\r\n                left: 0,\r\n                bottom: 0,\r\n                // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\r\n                content: '\"\"',\r\n                height: 1,\r\n                position: 'absolute',\r\n                right: 0,\r\n                transition: theme.transitions.create('background-color', {\r\n                    duration: theme.transitions.duration.shorter,\r\n                    easing: theme.transitions.easing.easeIn\r\n                }),\r\n                pointerEvents: 'none' // Transparent to the hover style.\r\n            },\r\n            '&:hover:not($disabled):before': {\r\n                backgroundColor: theme.palette.text.primary,\r\n                height: 2\r\n            },\r\n            '&$disabled:before': {\r\n                background: 'transparent',\r\n                backgroundImage: `linear-gradient(to right, ${bottomLineColor} 33%, transparent 0%)`,\r\n                backgroundPosition: 'left top',\r\n                backgroundRepeat: 'repeat-x',\r\n                backgroundSize: '2px 1px'\r\n            }\r\n        },\r\n        error: {\r\n            '&:after': {\r\n                backgroundColor: theme.palette.error.main,\r\n                transform: 'scaleX(1)' // error is always underlined in red\r\n            }\r\n        },\r\n        chip: {\r\n            margin: '4px 0px 0px 0',\r\n            float: 'left',\r\n            height: 24,\r\n        }\r\n    }\r\n}\r\n\r\nconst keyCodes = {\r\n    BACKSPACE: 8,\r\n    DELETE: 46,\r\n    LEFT_ARROW: 37,\r\n    RIGHT_ARROW: 39\r\n}\r\n\r\nclass ChipInput extends React.Component {\r\n    state = {\r\n        chips: [],\r\n        customChips: [],\r\n        errorText: undefined,\r\n        focusedChip: null,\r\n        inputValue: '',\r\n        isClean: true,\r\n        isFocused: false,\r\n        prevPropsValue: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        if (props.defaultValue) {\r\n            this.state.chips = props.defaultValue\r\n        }\r\n        this.labelRef = React.createRef()\r\n        this.input = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.variant === 'outlined') {\r\n            this.labelNode = ReactDOM.findDOMNode(this.labelRef.current)\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.inputBlurTimeout)\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        let newState = null\r\n\r\n        if (props.value && props.value.length !== state.prevPropsValue.length) {\r\n            newState = { prevPropsValue: props.value }\r\n            if (props.clearInputValueOnChange) {\r\n                newState.inputValue = ''\r\n            }\r\n        }\r\n\r\n        // if change detection is only needed for clearInputValueOnChange\r\n        if (props.clearInputValueOnChange && props.value && props.value.length !== state.prevPropsValue.length) {\r\n            newState = { prevPropsValue: props.value, inputValue: '' }\r\n        }\r\n\r\n        if (props.disabled) {\r\n            newState = { ...newState, focusedChip: null }\r\n        }\r\n\r\n        return newState\r\n    }\r\n\r\n    /**\r\n     * Blurs this component.\r\n     * @public\r\n     */\r\n    blur() {\r\n        if (this.input) this.actualInput.blur()\r\n    }\r\n\r\n    /**\r\n     * Focuses this component.\r\n     * @public\r\n     */\r\n    focus = () => {\r\n        this.actualInput.focus()\r\n        if (this.state.focusedChip != null) {\r\n            this.setState({ focusedChip: null })\r\n        }\r\n    }\r\n\r\n    handleInputBlur = (event) => {\r\n        if (this.props.onBlur) {\r\n            this.props.onBlur(event)\r\n        }\r\n        this.setState({ isFocused: false })\r\n        if (this.state.focusedChip != null) {\r\n            this.setState({ focusedChip: null })\r\n        }\r\n        const value = event.target.value\r\n        switch (this.props.blurBehavior) {\r\n            case 'add':\r\n                if (this.props.delayBeforeAdd) {\r\n                    // Lets assume that we only want to add the existing content as chip, when\r\n                    // another event has not added a chip within 200ms .\r\n                    // e.g. onSelection Callback in Autocomplete case\r\n                    let numChipsBefore = (this.props.value || this.state.chips).length\r\n                    this.inputBlurTimeout = setTimeout(() => {\r\n                        let numChipsAfter = (this.props.value || this.state.chips).length\r\n                        if (numChipsBefore === numChipsAfter) {\r\n                            this.handleAddChip(value)\r\n                        } else {\r\n                            this.clearInput()\r\n                        }\r\n                    }, 150)\r\n                } else {\r\n                    this.handleAddChip(value)\r\n                }\r\n                break\r\n            case 'clear':\r\n                this.clearInput()\r\n                break\r\n        }\r\n    }\r\n\r\n    handleInputFocus = (event) => {\r\n        this.setState({ isFocused: true })\r\n        if (this.props.onFocus) {\r\n            this.props.onFocus(event)\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        const { focusedChip } = this.state\r\n        this._keyPressed = false\r\n        this._preventChipCreation = false\r\n        if (this.props.onKeyDown) {\r\n            // Needed for arrow controls on menu in autocomplete scenario\r\n            this.props.onKeyDown(event)\r\n            // Check if the callback marked the event as isDefaultPrevented() and skip further actions\r\n            // enter key for example should not always add the current value of the inputField\r\n            if (event.isDefaultPrevented()) {\r\n                return\r\n            }\r\n        }\r\n        const chips = this.props.value || this.state.chips\r\n        if (this.props.newChipKeyCodes.indexOf(event.keyCode) >= 0) {\r\n            const result = this.handleAddChip(event.target.value)\r\n            if (result !== false) {\r\n                event.preventDefault()\r\n            }\r\n            return\r\n        }\r\n\r\n        switch (event.keyCode) {\r\n            case keyCodes.BACKSPACE:\r\n                if (event.target.value === '') {\r\n                    if (focusedChip != null) {\r\n                        this.handleDeleteChip(chips[focusedChip], focusedChip)\r\n                        if (focusedChip > 0) {\r\n                            this.setState({ focusedChip: focusedChip - 1 })\r\n                        }\r\n                    } else {\r\n                        this.setState({ focusedChip: chips.length - 1 })\r\n                    }\r\n                }\r\n                break\r\n            case keyCodes.DELETE:\r\n                if (event.target.value === '' && focusedChip != null) {\r\n                    this.handleDeleteChip(chips[focusedChip], focusedChip)\r\n                    if (focusedChip <= chips.length - 1) {\r\n                        this.setState({ focusedChip })\r\n                    }\r\n                }\r\n                break\r\n            case keyCodes.LEFT_ARROW:\r\n                if (focusedChip == null && event.target.value === '' && chips.length) {\r\n                    this.setState({ focusedChip: chips.length - 1 })\r\n                } else if (focusedChip != null && focusedChip > 0) {\r\n                    this.setState({ focusedChip: focusedChip - 1 })\r\n                }\r\n                break\r\n            case keyCodes.RIGHT_ARROW:\r\n                if (focusedChip != null && focusedChip < chips.length - 1) {\r\n                    this.setState({ focusedChip: focusedChip + 1 })\r\n                } else {\r\n                    this.setState({ focusedChip: null })\r\n                }\r\n                break\r\n            default:\r\n                this.setState({ focusedChip: null })\r\n                break\r\n        }\r\n    }\r\n\r\n    handleKeyUp = (event) => {\r\n        if (!this._preventChipCreation && this.props.newChipKeyCodes.indexOf(event.keyCode) > 0 && this._keyPressed) {\r\n            this.clearInput()\r\n        } else {\r\n            this.updateInput(event.target.value)\r\n        }\r\n        if (this.props.onKeyUp) { this.props.onKeyUp(event) }\r\n    }\r\n\r\n    handleKeyPress = (event) => {\r\n        this._keyPressed = true\r\n        if (this.props.onKeyPress) { this.props.onKeyPress(event) }\r\n    }\r\n\r\n    handleUpdateInput = (e) => {\r\n        if (this.props.inputValue == null) {\r\n            this.updateInput(e.target.value)\r\n        }\r\n\r\n        if (this.props.onUpdateInput) {\r\n            this.props.onUpdateInput(e)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles adding a chip.\r\n     * @param {string|object} chip Value of the chip, either a string or an object (if dataSourceConfig is set)\r\n     * @returns True if the chip was added (or at least `onAdd` was called), false if adding the chip was prevented\r\n     */\r\n    handleAddChip(chip) {\r\n        if (this.props.onBeforeAdd && !this.props.onBeforeAdd(chip)) {\r\n            this._preventChipCreation = true\r\n            return false\r\n        }\r\n        this.clearInput()\r\n        const chips = this.props.value || this.state.chips\r\n\r\n        if (this.props.dataSourceConfig) {\r\n            if (typeof chip === 'string') {\r\n                chip = {\r\n                    [this.props.dataSourceConfig.text]: chip,\r\n                    [this.props.dataSourceConfig.value]: chip\r\n                }\r\n            }\r\n\r\n            if (this.props.allowDuplicates || !chips.some((c) => c[this.props.dataSourceConfig.value] === chip[this.props.dataSourceConfig.value])) {\r\n                if (this.props.value && this.props.onAdd) {\r\n                    this.props.onAdd(chip)\r\n                } else {\r\n                    this.updateChips([...this.state.chips, chip])\r\n                }\r\n            }\r\n            return true\r\n        }\r\n\r\n        if (chip.trim().length > 0) {\r\n            if (this.props.allowDuplicates || chips.indexOf(chip) === -1) {\r\n                if (this.props.value && this.props.onAdd) {\r\n                    this.props.onAdd(chip)\r\n                } else {\r\n                    this.updateChips([...this.state.chips, chip])\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    handleDeleteChip(chip, i) {\r\n        if (!this.props.value) {\r\n            const chips = this.state.chips.slice()\r\n            const changed = chips.splice(i, 1) // remove the chip at index i\r\n            if (changed) {\r\n                let focusedChip = this.state.focusedChip\r\n                if (this.state.focusedChip === i) {\r\n                    focusedChip = null\r\n                } else if (this.state.focusedChip > i) {\r\n                    focusedChip = this.state.focusedChip - 1\r\n                }\r\n                this.updateChips(chips, { focusedChip })\r\n            }\r\n        } else if (this.props.onDelete) {\r\n            this.props.onDelete(chip, i)\r\n        }\r\n    }\r\n\r\n    updateChips(chips, additionalUpdates = {}) {\r\n        this.setState({ chips, ...additionalUpdates })\r\n        if (this.props.onChange) {\r\n            this.props.onChange(chips)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the text field for adding new chips.\r\n     * This only works in uncontrolled input mode, i.e. if the inputValue prop is not used.\r\n     * @public\r\n     */\r\n    clearInput() {\r\n        this.updateInput('')\r\n    }\r\n\r\n    updateInput(value) {\r\n        this.setState({ inputValue: value })\r\n    }\r\n\r\n    /**\r\n     * Set the reference to the actual input, that is the input of the Input.\r\n     * @param {object} ref - The reference\r\n     */\r\n    setActualInputRef = (ref) => {\r\n        this.actualInput = ref\r\n        if (this.props.inputRef) {\r\n            this.props.inputRef(ref)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            allowDuplicates,\r\n            alwaysShowPlaceholder,\r\n            blurBehavior,\r\n            children,\r\n            chipRenderer = defaultChipRenderer,\r\n            classes,\r\n            className,\r\n            clearInputValueOnChange,\r\n            dataSource,\r\n            dataSourceConfig,\r\n            defaultValue,\r\n            delayBeforeAdd,\r\n            disabled,\r\n            disableUnderline,\r\n            error,\r\n            filter,\r\n            FormHelperTextProps,\r\n            fullWidth,\r\n            fullWidthInput,\r\n            helperText,\r\n            id,\r\n            InputProps = {},\r\n            inputRef,\r\n            InputLabelProps = {},\r\n            inputValue,\r\n            label,\r\n            newChipKeyCodes,\r\n            onBeforeAdd,\r\n            onAdd,\r\n            onBlur,\r\n            onDelete,\r\n            onChange,\r\n            onFocus,\r\n            onKeyDown,\r\n            onKeyPress,\r\n            onKeyUp,\r\n            onUpdateInput,\r\n            placeholder,\r\n            required,\r\n            rootRef,\r\n            value,\r\n            variant,\r\n            onCustomDelete,\r\n            customValue,\r\n            ...other\r\n        } = this.props\r\n\r\n        const chips = value || this.state.chips\r\n        const actualInputValue = inputValue != null ? inputValue : this.state.inputValue\r\n\r\n        const hasInput = (this.props.value || actualInputValue).length > 0 || actualInputValue.length > 0\r\n        const shrinkFloatingLabel = InputLabelProps.shrink != null\r\n            ? InputLabelProps.shrink\r\n            : (label != null && (hasInput || this.state.isFocused || chips.length > 0))\r\n\r\n        const chipComponents = chips.map((chip, i) => {\r\n            const value = dataSourceConfig ? chip[dataSourceConfig.value] : chip\r\n            return chipRenderer(\r\n                {\r\n                    value,\r\n                    text: dataSourceConfig ? chip[dataSourceConfig.text] : chip,\r\n                    chip,\r\n                    isDisabled: !!disabled,\r\n                    isFocused: this.state.focusedChip === i,\r\n                    handleClick: () => this.setState({ focusedChip: i }),\r\n                    handleDelete: () => this.handleDeleteChip(chip, i),\r\n                    className: classes.chip\r\n                },\r\n                i\r\n            )\r\n        })\r\n\r\n        const InputMore = {}\r\n        if (variant === 'outlined') {\r\n            InputMore.notched = shrinkFloatingLabel\r\n            InputMore.labelWidth =\r\n                (shrinkFloatingLabel && this.labelNode && this.labelNode.offsetWidth) ||\r\n                0\r\n        }\r\n\r\n        if (variant !== 'standard') {\r\n            InputMore.startAdornment = (\r\n                <React.Fragment>{chipComponents}</React.Fragment>\r\n            )\r\n        } else {\r\n            InputProps.disableUnderline = true\r\n        }\r\n\r\n        const InputComponent = variantComponent[variant]\r\n\r\n        return (\r\n            <FormControl\r\n                ref={rootRef}\r\n                fullWidth={fullWidth}\r\n                className={cx(className, classes.root)}\r\n                error={error}\r\n                required={required}\r\n                onClick={this.focus}\r\n                disabled={disabled}\r\n                variant={variant}\r\n                {...other}\r\n            >\r\n                {label && (\r\n                    <InputLabel\r\n                        htmlFor={id}\r\n                        classes={{ root: cx(classes[variant], classes.label), shrink: classes.labelShrink }}\r\n                        shrink={shrinkFloatingLabel}\r\n                        focused={this.state.isFocused}\r\n                        variant={variant}\r\n                        ref={this.labelRef}\r\n                        {...InputLabelProps}\r\n                    >\r\n                        {label}\r\n                    </InputLabel>\r\n                )}\r\n                <div\r\n                    className={cx(\r\n                        classes[variant],\r\n                        classes.chipContainer,\r\n                        {\r\n                            [classes.inkbar]: !disableUnderline && variant === 'standard',\r\n                            [classes.focused]: this.state.isFocused,\r\n                            [classes.underline]: !disableUnderline && variant === 'standard',\r\n                            [classes.disabled]: disabled,\r\n                            [classes.labeled]: label != null,\r\n                            [classes.error]: error\r\n                        })}\r\n                >\r\n                    {variant === 'standard' && chipComponents}\r\n                    <InputComponent\r\n                        ref={this.input}\r\n                        classes={{\r\n                            input: cx(classes.input, classes[variant]),\r\n                            root: cx(classes.inputRoot, classes[variant])\r\n                        }}\r\n                        id={id}\r\n                        value={actualInputValue}\r\n                        onChange={this.handleUpdateInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onKeyPress={this.handleKeyPress}\r\n                        onKeyUp={this.handleKeyUp}\r\n                        onFocus={this.handleInputFocus}\r\n                        onBlur={this.handleInputBlur}\r\n                        inputRef={this.setActualInputRef}\r\n                        disabled={disabled}\r\n                        fullWidth={fullWidthInput}\r\n                        placeholder={(!hasInput && (shrinkFloatingLabel || label == null)) || alwaysShowPlaceholder ? placeholder : null}\r\n                        {...InputProps}\r\n                        {...InputMore}\r\n                    />\r\n                </div>\r\n                {helperText && (\r\n                    <FormHelperText\r\n                        {...FormHelperTextProps}\r\n                        className={FormHelperTextProps ? cx(FormHelperTextProps.className, classes.helperText) : classes.helperText}\r\n                    >\r\n                        {helperText}\r\n                    </FormHelperText>\r\n                )}\r\n            </FormControl>\r\n        )\r\n    }\r\n}\r\n\r\nChipInput.propTypes = {\r\n    /** Allows duplicate chips if set to true. */\r\n    allowDuplicates: PropTypes.bool,\r\n    /** If true, the placeholder will always be visible. */\r\n    alwaysShowPlaceholder: PropTypes.bool,\r\n    /** Behavior when the chip input is blurred: `'clear'` clears the input, `'add'` creates a chip and `'ignore'` keeps the input. */\r\n    blurBehavior: PropTypes.oneOf(['clear', 'add', 'ignore']),\r\n    /** A function of the type `({ value, text, chip, isFocused, isDisabled, handleClick, handleDelete, className }, key) => node` that returns a chip based on the given properties. This can be used to customize chip styles.  Each item in the `dataSource` array will be passed to `chipRenderer` as arguments `chip`, `value` and `text`. If `dataSource` is an array of objects and `dataSourceConfig` is present, then `value` and `text` will instead correspond to the object values defined in `dataSourceConfig`. If `dataSourceConfig` is not set and `dataSource` is an array of objects, then a custom `chipRenderer` must be set. `chip` is always the raw value from `dataSource`, either an object or a string. */\r\n    chipRenderer: PropTypes.func,\r\n    /** Whether the input value should be cleared if the `value` prop is changed. */\r\n    clearInputValueOnChange: PropTypes.bool,\r\n    /** Data source for auto complete. This should be an array of strings or objects. */\r\n    dataSource: PropTypes.array,\r\n    /** Config for objects list dataSource, e.g. `{ text: 'text', value: 'value' }`. If not specified, the `dataSource` must be a flat array of strings or a custom `chipRenderer` must be set to handle the objects. */\r\n    dataSourceConfig: PropTypes.shape({\r\n        text: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired\r\n    }),\r\n    /** The chips to display by default (for uncontrolled mode). */\r\n    defaultValue: PropTypes.array,\r\n    /** Whether to use `setTimeout` to delay adding chips in case other input events like `onSelection` need to fire first */\r\n    delayBeforeAdd: PropTypes.bool,\r\n    /** Disables the chip input if set to true. */\r\n    disabled: PropTypes.bool,\r\n    /** Disable the input underline. Only valid for 'standard' variant */\r\n    disableUnderline: PropTypes.bool,\r\n    /** Props to pass through to the `FormHelperText` component. */\r\n    FormHelperTextProps: PropTypes.object,\r\n    /** If true, the chip input will fill the available width. */\r\n    fullWidth: PropTypes.bool,\r\n    /** If true, the input field will always be below the chips and fill the available space. By default, it will try to be beside the chips. */\r\n    fullWidthInput: PropTypes.bool,\r\n    /** Helper text that is displayed below the input. */\r\n    helperText: PropTypes.node,\r\n    /** Props to pass through to the `InputLabel`. */\r\n    InputLabelProps: PropTypes.object,\r\n    /** Props to pass through to the `Input`. */\r\n    InputProps: PropTypes.object,\r\n    /** Use this property to pass a ref callback to the native input component. */\r\n    inputRef: PropTypes.func,\r\n    /** The input value (enables controlled mode for the text input if set). */\r\n    inputValue: PropTypes.string,\r\n    /* The content of the floating label. */\r\n    label: PropTypes.node,\r\n    /** The key codes used to determine when to create a new chip. */\r\n    newChipKeyCodes: PropTypes.arrayOf(PropTypes.number),\r\n    /** Callback function that is called when a new chip was added (in controlled mode). */\r\n    onAdd: PropTypes.func,\r\n    /** Callback function that is called with the chip to be added and should return true to add the chip or false to prevent the chip from being added without clearing the text input. */\r\n    onBeforeAdd: PropTypes.func,\r\n    /** Callback function that is called when the chips change (in uncontrolled mode). */\r\n    onChange: PropTypes.func,\r\n    /** Callback function that is called when a new chip was removed (in controlled mode). */\r\n    onDelete: PropTypes.func,\r\n    /** Callback function that is called when the input changes. */\r\n    onUpdateInput: PropTypes.func,\r\n    /** A placeholder that is displayed if the input has no values. */\r\n    placeholder: PropTypes.string,\r\n    /** The chips to display (enables controlled mode if set). */\r\n    value: PropTypes.array,\r\n    /** The variant of the Input component */\r\n    variant: PropTypes.oneOf(['outlined', 'standard', 'filled']),\r\n    onCustomDelete: PropTypes.func,\r\n    customValue: PropTypes.array\r\n}\r\n\r\nChipInput.defaultProps = {\r\n    allowDuplicates: false,\r\n    blurBehavior: 'clear',\r\n    clearInputValueOnChange: false,\r\n    delayBeforeAdd: false,\r\n    disableUnderline: false,\r\n    newChipKeyCodes: [13],\r\n    variant: 'standard'\r\n}\r\n\r\nexport default withStyles(styles, { name: 'WAMuiChipInput' })(ChipInput)\r\n\r\nexport const defaultChipRenderer = ({ value, text, isFocused, isDisabled, handleClick, handleDelete, className }, key) => (\r\n    <Chip\r\n        key={key}\r\n        className={className}\r\n        style={{ pointerEvents: isDisabled ? 'none' : undefined, backgroundColor: isFocused ? blue[300] : undefined }}\r\n        onClick={handleClick}\r\n        onDelete={handleDelete}\r\n        label={text}\r\n        deleteIcon={<CloseIcon style={{ color: '#e0e0e0', fontSize: 16, borderRadius: '25px', padding: '1px', background: 'rgba(0, 0, 0, 0.22)' }} />}\r\n    />\r\n)\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ReactSelect from 'react-select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { colors } from 'react-select/lib/theme';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { grey, red } from '@material-ui/core/colors';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport { apicall, createQueryString } from './function/CoreFunction'\r\nimport AmChipInput from './AmChipInput';\r\n\r\nconst Axios = new apicall()\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: 'auto', \r\n    },\r\n    chipContainer: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap',\r\n        cursor: 'text',\r\n        marginBottom: -2,\r\n        // minHeight: 40,\r\n        marginTop: 10,\r\n        minWidth: 400\r\n    },\r\n\r\n});\r\nconst selectStyles = (ddlMinWidth, ddlMaxWidth, zIndex) => {\r\n    const shadow = 'hsla(218, 50%, 10%, 0.1)';\r\n    return (\r\n        {\r\n            control: provided => ({\r\n                ...provided,\r\n                margin: 4,\r\n            }),\r\n            menu: provided => ({\r\n                ...provided, borderRadius: '0 0 4px 4px', backgroundColor: 'white',\r\n                margin: '4px 0 0 -4px', minWidth: ddlMinWidth, maxWidth: ddlMaxWidth,\r\n                boxShadow: `0 0 0 1px ${shadow}, 0 4px 11px ${shadow}`\r\n            }),\r\n            menuList: base => ({ ...base, maxHeight: '150px' }),\r\n            menuPortal: base => ({ ...base, zIndex: zIndex })\r\n        })\r\n};\r\n\r\nconst Dropdown = (props) => {\r\n    const { children, isOpen, target, onClose, zIndex } = props;\r\n    return (<div style={{ position: 'relative' }}>\r\n        {target}\r\n        {isOpen ? <Menu zindexval={zIndex}>{children}</Menu> : null}\r\n        {isOpen ? <Blanket onClick={onClose} /> : null}\r\n    </div>\r\n    );\r\n};\r\n\r\nconst Menu = props => {\r\n    const shadow = 'hsla(218, 50%, 10%, 0.1)';\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '4px 4px 0 0',\r\n                boxShadow: `0 0 0 1px ${shadow}`,\r\n                marginTop: 8,\r\n                marginBottom: 0,\r\n                position: 'absolute',\r\n                zIndex: props.zindexval,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\nconst Blanket = props => (\r\n    <div\r\n        style={{\r\n            bottom: 0,\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        }}\r\n        {...props}\r\n    />\r\n);\r\n\r\nconst Svg = p => (\r\n    <svg\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        focusable=\"false\"\r\n        role=\"presentation\"\r\n        {...p}\r\n    />\r\n);\r\nconst DropdownIndicator = () => (\r\n    <div style={{ color: colors.neutral20, height: 24, width: 32 }}>\r\n        <Svg>\r\n            <path\r\n                d=\"M16.436 15.085l3.94 4.01a1 1 0 0 1-1.425 1.402l-3.938-4.006a7.5 7.5 0 1 1 1.423-1.406zM10.5 16a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11z\"\r\n                fill=\"currentColor\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n        </Svg>\r\n    </div>\r\n);\r\n\r\nconst ChipInputs = withStyles(theme => ({\r\n    iconCloseButton: {\r\n        // display: 'none',\r\n        marginTop: '-2px',\r\n        padding: '0 0 2px 0',\r\n        color: grey[400],\r\n        fontSize: 18,\r\n        '&:hover': {\r\n            color: grey[800],\r\n            cursor: 'pointer'\r\n        },\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n        marginBottom: 5\r\n    },\r\n    inputAdor: {\r\n        position: 'absolute',\r\n        float: 'right',\r\n        top: 0,\r\n        right: 0,\r\n        justifyContent: 'middle',\r\n        alignItems: 'baseline'\r\n    },\r\n    input: {\r\n        // display: 'flex',\r\n        // marginLeft: 0, //8\r\n        // flex: 1,\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n        // width: '100%',\r\n        // padding: '8px 0 5px'\r\n    },\r\n    required: {\r\n        color: red[600]\r\n    }\r\n}))(props => {\r\n    const { classes, id, placeholder, valueKey, onHandleClickClear,\r\n        toggleOpen, onHandleDelete, disabled, required, width, ...other } = props;\r\n\r\n    return (\r\n        <div style={{ display: 'inline-flex', alignItems: 'center' }}   >\r\n            <AmChipInput\r\n                id={id} readOnly={true}\r\n                disabled={disabled}\r\n                placeholder={placeholder}\r\n                onFocus={disabled ? null : valueKey === null || valueKey.length === 0 ? null : (e) => e.target.blur()}\r\n                onClick={disabled ? null : (e) => { e.cancelBubble = true; toggleOpen(); }}\r\n                value={valueKey}\r\n                onDelete={disabled ? null : (e) => onHandleDelete(e)}\r\n                style={{ width: width }}\r\n                // fullWidth\r\n                InputProps={{\r\n                    inputProps: {\r\n                        className: classes.input,\r\n                    },\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\" className={classes.inputAdor} >\r\n                            {disabled ? null : valueKey === null || valueKey.length === 0 ? null :\r\n                                <CloseIcon className={classes.iconCloseButton}\r\n                                    style={{ zIndex: 900 }}\r\n                                    size=\"small\" aria-label=\"Close\" onClick={onHandleClickClear} />\r\n                            }\r\n                            <IconButton className={classes.iconButton} disabled={disabled} size=\"small\" aria-label=\"Search\" onClick={toggleOpen}>\r\n                                <ArrowDropDownIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n\r\n                }}\r\n                {...other}\r\n            />\r\n            {required ? <label className={classes.required}>*</label> : null}\r\n        </div>\r\n    );\r\n});\r\n\r\nconst MultiDropdown = (props) => {\r\n    const { id,\r\n        disabled,\r\n        required,\r\n        classes,\r\n        value,\r\n        zIndex,\r\n        defaultValue,\r\n        returnDefaultValue,\r\n        fieldDataKey,\r\n        fieldLabel,\r\n        labelPattern,\r\n        data,\r\n        queryApi,\r\n        width,\r\n        ddlMinWidth,\r\n        ddlMaxWidth,\r\n        onChange,\r\n        placeholder } = props;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [valueData, setValueData] = useState([]);\r\n    const [optionList, setOptionList] = useState([]);\r\n    const [valueChips, setValueChips] = useState([]);\r\n    const [defaultVal, setDefaultVal] = useState([]);\r\n    const [upreturnDefaultValue, setReturnDefaultValue] = useState(returnDefaultValue);\r\n\r\n    const toggleOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n    const onSelectChange = (valueSel, e) => {\r\n        // console.log(valueSel)\r\n        setDefaultVal([])\r\n        setReturnDefaultValue(false)\r\n        setValueData(valueSel);\r\n        var temp = [];\r\n        var tempLabel = [];\r\n        valueSel.forEach((value) => {\r\n            temp.push(value.value);\r\n            tempLabel.push(value.label);\r\n        });\r\n        setValueChips(tempLabel);\r\n\r\n        onChange(temp, valueSel, id, fieldDataKey);\r\n    };\r\n    const onHandleClickClear = (e) => {\r\n        setReturnDefaultValue(false)\r\n        setValueData([]);\r\n        setDefaultVal([])\r\n        setValueChips([])\r\n        onChange(null, null, id, fieldDataKey)\r\n    }\r\n    const onHandleDelete = (labelDel) => {\r\n        var chipData = [...valueData];\r\n        chipData.forEach((value, index) => {\r\n            if (value.label === labelDel) {\r\n                var chipToDelete = chipData.indexOf(chipData[index]);\r\n                chipData.splice(chipToDelete, 1);\r\n            }\r\n        });\r\n        var temp = [];\r\n        var tempLabel = [];\r\n        chipData.forEach((value, index) => {\r\n            temp.push(value.value);\r\n            tempLabel.push(value.label);\r\n        });\r\n        setReturnDefaultValue(false)\r\n        setValueData(chipData);\r\n        setValueChips(tempLabel);\r\n        onChange(temp, chipData, id, fieldDataKey);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (queryApi) {\r\n            if (optionList === null || optionList === undefined) {\r\n                // queryApi.l = 0;\r\n                getData(createQueryString(queryApi))\r\n            } else {\r\n                if (optionList.length === 0) {\r\n                    // queryApi.l = 0;\r\n                    getData(createQueryString(queryApi))\r\n                }\r\n            }\r\n        } else if (data) {\r\n            var dataOptions = data;\r\n            dataOptions.forEach(datas => {\r\n                datas.value = datas[fieldDataKey]\r\n                datas.label = getLabel(datas)\r\n            });\r\n            setOptionList(dataOptions)\r\n        } else {\r\n            setOptionList([])\r\n        }\r\n    }, [queryApi, data]);\r\n\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            setDefaultVal(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n    useEffect(() => {\r\n        if (defaultVal.length > 0 && upreturnDefaultValue) {\r\n            onChange(defaultVal, valueData, id, fieldDataKey);\r\n        }\r\n    }, [valueChips, valueData]);\r\n    useEffect(() => {\r\n        if (optionList) {\r\n            if (optionList.length > 0) {\r\n                if (value) {\r\n                    getDefaultByValue(value);\r\n                }\r\n                else if (defaultVal) {\r\n                    getDefaultByValue(defaultVal);\r\n                }\r\n            }\r\n        }\r\n    }, [optionList, value]);\r\n\r\n    const getDefaultByValue = (valuekey) => {\r\n        if (optionList.length > 0) {\r\n            var arrayLabel = [];\r\n            var dataoption = optionList;\r\n            valuekey.forEach((val1) => {\r\n                dataoption.forEach((val2) => {\r\n                    if (String(val1) === String(val2[fieldDataKey])) {\r\n                        arrayLabel.push({\r\n                            ...val2,\r\n                            value: val2[fieldDataKey],\r\n                            label: getLabel(val2),\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n            // console.log(arrayLabel)\r\n            setValueData(arrayLabel)\r\n            var temp = [];\r\n            arrayLabel.forEach((value) => {\r\n                temp.push(value.label);\r\n            });\r\n            // console.log(temp)\r\n            setValueChips(temp);\r\n        }\r\n    }\r\n    async function getData(qryString) {\r\n        try {\r\n            const resData = await Axios.get(qryString).then(res => {\r\n                if (res.data.datas) {\r\n                    var dataOptions = res.data.datas;\r\n                    dataOptions.forEach(datas => {\r\n                        datas.value = datas[fieldDataKey]\r\n                        datas.label = getLabel(datas)\r\n                    });\r\n                    return (dataOptions)\r\n                }\r\n            });\r\n            setOptionList(resData)\r\n        } catch (err) {\r\n            setOptionList([])\r\n        }\r\n    }\r\n    const getLabel = (datas) => {\r\n        var str = \"\";\r\n        if (fieldLabel) {\r\n            if (labelPattern) {\r\n                fieldLabel.forEach((value, index) => {\r\n                    if (index === fieldLabel.length - 1) {\r\n                        str = str.concat(datas[value])\r\n                    } else {\r\n                        str = str.concat(datas[value], labelPattern)\r\n                    }\r\n                })\r\n            } else {\r\n                fieldLabel.forEach((value) => {\r\n                    str = str.concat(datas[value])\r\n                })\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(classes.root)}>\r\n            <Dropdown\r\n                isOpen={isOpen}\r\n                onClose={toggleOpen}\r\n                zIndex={zIndex}\r\n                target={\r\n                    <ChipInputs\r\n                        id={id}\r\n                        disabled={disabled}\r\n                        width={width}\r\n                        placeholder={placeholder}\r\n                        toggleOpen={toggleOpen}\r\n                        valueKey={valueChips}\r\n                        onHandleClickClear={onHandleClickClear}\r\n                        onHandleDelete={onHandleDelete}\r\n                        required={required}\r\n                    />\r\n                }\r\n            >\r\n                <div style={{ width: width }}>\r\n                    <ReactSelect\r\n                        name={id}\r\n                        autoFocus\r\n                        backspaceRemovesValue={false}\r\n                        components={{ DropdownIndicator, IndicatorSeparator: null }}\r\n                        controlShouldRenderValue={false}\r\n                        hideSelectedOptions={false}\r\n                        isClearable={false}\r\n                        menuIsOpen={isOpen}\r\n                        onChange={onSelectChange}\r\n                        options={optionList}\r\n                        placeholder=\"Search...\"\r\n                        styles={selectStyles(ddlMinWidth, ddlMaxWidth, zIndex)}\r\n                        tabSelectsValue={false}\r\n                        value={valueData}\r\n                        closeMenuOnSelect={false}\r\n                        isMulti\r\n                        maxMenuHeight={150}\r\n                        menuPortalTarget={document.body}\r\n                        // menuPosition={'fixed'}\r\n                        menuPlacement={'auto'}\r\n                    />\r\n                </div>\r\n            </Dropdown>\r\n        </div >\r\n    );\r\n}\r\nMultiDropdown.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.array,\r\n    defaultValue: PropTypes.array,\r\n    queryApi: PropTypes.object,\r\n    data: PropTypes.array,\r\n    width: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    ddlMinWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    ddlMaxWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    fieldDataKey: PropTypes.string.isRequired,\r\n    labelPattern: PropTypes.string,\r\n    fieldLabel: PropTypes.array.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    chipputRenderer: PropTypes.func,\r\n    disabled: PropTypes.bool,\r\n    returnDefaultValue: PropTypes.bool,\r\n    zIndex: PropTypes.number\r\n}\r\nMultiDropdown.defaultProps = {\r\n    fieldDataKey: \"value\",\r\n    fieldLabel: [\"label\"],\r\n    zIndex: 9999,\r\n    ddlMinWidth: 'auto',\r\n    ddlMaxWidth: 'auto',\r\n    returnDefaultValue: false,\r\n    width: 'auto'\r\n}\r\nexport default withStyles(styles)(MultiDropdown);","function ExplodeRangeNum(value) {\r\n\r\n    let newvalue = \"\";\r\n    let newArray = ExplodeRangeNumToIntArray(value);\r\n    newArray.forEach((value, index) => {\r\n        if (index === newArray.length - 1) {\r\n            newvalue = newvalue.concat(value);\r\n        } else {\r\n            newvalue = newvalue.concat(value, ',');\r\n        }\r\n    })\r\n    return newvalue;\r\n}\r\n\r\nfunction ExplodeRangeNumToIntArray(value) {\r\n    let newArray = [];\r\n    let strVal = [];\r\n\r\n    if (value) {\r\n        if (Array.isArray(value)) {\r\n            if (value.length > 0) {\r\n                value.forEach(element => {\r\n                    newArray = newArray.concat(ConvertRangeNumToIntArray(element));\r\n                });\r\n            }\r\n        } else {\r\n            if (value.includes(\",\")) {\r\n                strVal = value.split(\",\");\r\n                strVal.forEach(element => {\r\n                    if (element != null && element.length > 0)\r\n                        newArray = newArray.concat(ConvertRangeNumToIntArray(element));\r\n                });\r\n            } else {\r\n                newArray = newArray.concat(ConvertRangeNumToIntArray(value))\r\n            }\r\n        }\r\n        newArray.sort((a, b) => a - b);\r\n    }\r\n    return newArray;\r\n}\r\n\r\nfunction ConvertRangeNumToIntArray(element) {\r\n    let newArray = [];\r\n    if (element.includes(\"-\")) {\r\n        let eleArray = element.split(\"-\").map((a) => {\r\n            return a = a ? parseInt(a) : 0;\r\n        });\r\n        let i = eleArray[0];\r\n        let end = eleArray[1];\r\n\r\n        if (end === 0) {\r\n            newArray.push(i);\r\n        } else {\r\n            while (i <= end) {\r\n                newArray.push(i);\r\n                i++;\r\n            }\r\n        }\r\n    } else {\r\n        newArray.push(Number(element));\r\n    }\r\n    newArray.sort((a, b) => a - b);\r\n    return newArray;\r\n}\r\n\r\nfunction MergeRangeNum(value) {\r\n    let res = ToRanges(value.split(',').map((a) => {\r\n        return a = a ? parseInt(a) : 0;\r\n    }));\r\n    return res.join();\r\n}\r\n\r\nfunction ConvertToRangeNum(values) { //values type array\r\n    var res = ToRanges(values);\r\n    return res.join();\r\n}\r\n\r\nfunction ToRanges(value) {\r\n    if (value.length < 1) return [];\r\n    value.sort((a, b) => a - b);\r\n    let lng = value.length;\r\n    let fromnums = [];\r\n    let tonums = [];\r\n    for (var i = 0; i < lng - 1; i++) {\r\n        if (i == 0)\r\n            fromnums.push(value[0]);\r\n        if (value[i + 1] > value[i] + 1) {\r\n            tonums.push(value[i]);\r\n            fromnums.push(value[i + 1]);\r\n        }\r\n    }\r\n    tonums.push(value[lng - 1]);\r\n    return fromnums.map((x, i) => x.toString() + (tonums[i] === x ? \"\" : \"-\" + tonums[i].toString()));\r\n}\r\nconst match = (arr, arr2) => {\r\n    var ret = [];\r\n    for (var i in arr) {\r\n        if (arr2.indexOf(arr[i]) > -1) {\r\n            ret.push(arr[i]);\r\n        }\r\n    }\r\n    return ret;\r\n};\r\nexport { ExplodeRangeNum, ExplodeRangeNumToIntArray, ConvertToRangeNum, MergeRangeNum, ToRanges, match }","import React, { useState, useEffect, useContext, useReducer } from \"react\";\r\nimport { apicall, createQueryString } from '../../components/function/CoreFunction2';\r\nimport { ExplodeRangeNum, MergeRangeNum, ExplodeRangeNumToIntArray, ConvertToRangeNum } from '../../components/function/RangeNumUtill';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AmFindPopup from '../../components/AmFindPopup';\r\nimport AmDropdown from '../../components/AmDropdown';\r\nimport AmMultiDropdown from '../../components/AmMultiDropdown';\r\nimport AmButton from \"../../components/AmButton\";\r\nimport styled from 'styled-components'\r\nimport { indigo, grey, red } from '@material-ui/core/colors';\r\nimport AmInput from '../../components/AmInput';\r\nimport AmValidate from '../../components/AmValidate';\r\nimport AmDatePicker from '../../components/AmDatePicker';\r\nimport moment from \"moment\";\r\n\r\nconst Axios = new apicall()\r\nconst styles = theme => ({\r\n    root: {\r\n        borderBottom: '2px solid red[400] !important',\r\n        '&:after': {\r\n            borderBottom: '2px solid red[800] !important',\r\n        },\r\n    },\r\n    button: {\r\n        margin: theme.spacing(),\r\n        width: '130px',\r\n    },\r\n    div: {\r\n        width: '300px',\r\n    },\r\n})\r\nconst FormInline = styled.div`\r\n\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\nalign-items: center;\r\nlabel {\r\n    margin: 5px 5px 5px 0;\r\n}\r\ninput {\r\n    vertical-align: middle;\r\n}\r\n@media (max-width: 800px) {\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    \r\n  }\r\n`;\r\nconst LabelH = styled.label`\r\nfont-weight: bold;\r\n  width: 80px;\r\n`;\r\n\r\nconst InputDiv = styled.div`\r\n    margin: 5px;\r\n    @media (max-width: 800px) {\r\n        margin: 0;\r\n    }\r\n`;\r\nconst optiontest = [\r\n    { label: 'Yes', value: 'y' },\r\n    { label: 'No', value: 'n' },\r\n];\r\nconst suggestions = [\r\n    { label: 'Afghanistan', },\r\n    { label: 'Aland Islands' },\r\n    { label: 'Albania' },\r\n    { label: 'Algeria' },\r\n    { label: 'American Samoa' },\r\n    { label: 'Andorra' },\r\n    { label: 'Angola' },\r\n    { label: 'Anguilla' },\r\n    { label: 'Antarctica' },\r\n    { label: 'Antigua and Barbuda' },\r\n    { label: 'Argentina' },\r\n    { label: 'Armenia' },\r\n    { label: 'Aruba' },\r\n    { label: 'Australia' },\r\n    { label: 'Austria' },\r\n    { label: 'Azerbaijan' },\r\n    { label: 'Bahamas' },\r\n    { label: 'Bahrain' },\r\n    { label: 'Bangladesh' },\r\n    { label: 'Barbados' },\r\n    { label: 'Belarus' },\r\n    { label: 'Belgium' },\r\n    { label: 'Belize' },\r\n    { label: 'Benin' },\r\n    { label: 'Bermuda' },\r\n    { label: 'Bhutan' },\r\n    { label: 'Bolivia, Plurinational State of' },\r\n    { label: 'Bonaire, Sint Eustatius and Saba' },\r\n    { label: 'Bosnia and Herzegovina' },\r\n    { label: 'Botswana' },\r\n    { label: 'Bouvet Island' },\r\n    { label: 'Brazil' },\r\n    { label: 'British Indian Ocean Territory' },\r\n    { label: 'Brunei Darussalam' },\r\n].map(suggestion => ({\r\n    ...suggestion,\r\n    value: suggestion.label,\r\n    label: suggestion.label,\r\n}));\r\n\r\nconst txtQuery = {\r\n    queryString: window.apipath + \"/v2/SelectDataViwAPI\",\r\n    t: \"SKUMaster\",\r\n    q: '[{ \"f\": \"Status\", \"c\":\"<\", \"v\": 2}]',\r\n    f: \"ID,SKUMasterType_ID,SKUTypeCode,SKUTypeName,UnitType_ID,UnitTypeCode,UnitTypeName,Code,\" +\r\n        \"Name,Description,WeightKG,WidthM,LengthM,HeightM,Cost,Price,Revision,Status,Created,Modified,ObjectSize_ID,ObjectSize_Code,LastUpdate\",\r\n    g: \"\",\r\n    s: \"[{'f':'ID','od':'desc'}]\",\r\n    sk: 0,\r\n    l: 0,\r\n    all: \"\",\r\n};\r\nconst UnitTypeQuery = {\r\n    queryString: window.apipath + \"/v2/SelectDataMstAPI\",\r\n    t: \"UnitType\",\r\n    q: '[{ \"f\": \"Status\", \"c\":\"<\", \"v\": 2}]',\r\n    f: \"ID,Code\",\r\n    g: \"\",\r\n    s: \"[{'f':'ID','od':'asc'}]\",\r\n    sk: 0,\r\n    l: 100,\r\n    all: \"\",\r\n}\r\nconst SKUMasterTypeQuery = {\r\n    queryString: window.apipath + \"/v2/SelectDataViwAPI\",\r\n    t: \"SKUMasterType\",\r\n    q: '[{ \"f\": \"Status\", \"c\":\"<\", \"v\": 2}]',\r\n    // q: '[{\"q\":[{ \"f\": \"ID\", \"c\":\"like\", \"v\": \"%aa%\"},{ \"o\": \"or\",\"f\": \"Code\", \"c\":\"like\", \"v\": \"%aa%\"}]}, { \"f\": \"Status\", \"c\":\"<\", \"v\": 2}]',\r\n    f: \"ID,Code,Name\",\r\n    g: \"\",\r\n    s: \"[{'f':'ID','od':'asc'}]\",\r\n    sk: 0,\r\n    l: 100,\r\n    all: \"\",\r\n}\r\nfunction Test6(props) {\r\n    const { classes } = props;\r\n\r\n    // รูปแบบการประกาศ state เก็บข้อมูลของพวกdropdown\r\n    const [valueText, setValueText] = useState({\r\n        txtCode: {\r\n            value: 13802\r\n        },\r\n        txtUnitType: {\r\n            value: 92\r\n        },\r\n        ddlUnitType: {\r\n            value: 93\r\n        },\r\n        ddlUnitType2: {},\r\n        ddlSKUType: {},\r\n        ddlTest: {},\r\n        ddlSKUType2: {\r\n            // value: [34, 35]\r\n        },\r\n        ddlTest2: {\r\n            // value: ['Austria', 'Azerbaijan']\r\n        },\r\n        ddlTest3: {},\r\n        txtEmail: {},//value: 13802\r\n        txtEmail2: {},\r\n    });\r\n\r\n    const [defaultValue, setDefaultValue] = useState(2);\r\n    const [dataSrc, setDataSrc] = useState([]);\r\n\r\n    const cols = [\r\n        {\r\n            Header: 'ID',\r\n            accessor: 'ID',\r\n            fixed: 'left',\r\n            width: 30,\r\n            sortable: true,\r\n        },\r\n        {\r\n            Header: 'Code',\r\n            accessor: 'Code',\r\n            fixed: 'left',\r\n            width: 130,\r\n            sortable: true,\r\n        },\r\n        {\r\n            Header: 'Name',\r\n            accessor: 'Name',\r\n            width: 200,\r\n            sortable: true,\r\n        },\r\n        {\r\n            Header: 'Category',\r\n            accessor: 'SKUTypeCode',\r\n            width: 100,\r\n            sortable: true\r\n        },\r\n        {\r\n            Header: 'Gross Weight (Kg.)',\r\n            accessor: 'WeightKG',\r\n            width: 150,\r\n            sortable: true\r\n        },\r\n        {\r\n            Header: 'Last Update',\r\n            accessor: 'LastUpdate',\r\n            width: 200,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    const colsUnitType = [\r\n        {\r\n            Header: 'ID',\r\n            accessor: 'ID',\r\n            fixed: 'left',\r\n            width: 100,\r\n            sortable: true,\r\n        },\r\n        {\r\n            Header: 'Code',\r\n            accessor: 'Code',\r\n            sortable: true,\r\n        },\r\n    ];\r\n    const colsSKUType = [\r\n        {\r\n            Header: 'ID',\r\n            accessor: 'ID',\r\n            fixed: 'left',\r\n            width: 100,\r\n            sortable: true,\r\n        },\r\n        {\r\n            Header: 'Code',\r\n            accessor: 'Code',\r\n            sortable: true,\r\n        },\r\n        {\r\n            Header: 'Name',\r\n            accessor: 'Name',\r\n            sortable: true,\r\n        }\r\n    ];\r\n    // useEffect(() => {\r\n    //     getData(createQueryString(SKUMasterTypeQuery))\r\n    // }, [SKUMasterTypeQuery]);\r\n    async function getData(qryString) {\r\n        const res = await Axios.get(qryString).then(res => res)\r\n        setDataSrc(res.data.datas)\r\n    }\r\n    // useEffect(() => { console.log(valueText) }, [valueText])\r\n\r\n    //ค่าที่ส่งกลับมา ของcomponent AmDropdown, AmMultiDropdown, AmFindPopup,\r\n    //value, dataObject, inputID=ไอดีของinput, fieldDataKey=ชื่อฟิล์ดที่ลิงค์กับtableในdb\r\n    const onHandleChange = (value, dataObject, inputID, fieldDataKey) => {\r\n        // if (inputID === \"txtCode\") {\r\n        //     setValueText({\r\n        //         ...valueText, [inputID]: {\r\n        //             value: value,\r\n        //             dataObject: dataObject,\r\n        //             fieldDataKey: fieldDataKey,\r\n        //         }\r\n        //     });\r\n        // } else {\r\n        setValueText({\r\n            ...valueText, [inputID]: {\r\n                value: value,\r\n                dataObject: dataObject,\r\n                fieldDataKey: fieldDataKey,\r\n            }\r\n        });\r\n        // }\r\n    };\r\n\r\n    //ค่าที่ส่งกลับมา ของcomponent AmDropdown, AmMultiDropdown, AmFindPopup,\r\n    const onHandleDDLChange = (value, dataObject, inputID, fieldDataKey) => {\r\n        // console.log(dataObject)\r\n        setValueText({\r\n            ...valueText, [inputID]: {\r\n                value: value,\r\n                dataObject: dataObject,\r\n                fieldDataKey: fieldDataKey,\r\n            }\r\n        });\r\n    };\r\n\r\n    //ค่าที่ส่งกลับมา ของ AmInput\r\n    const onHandleInputChange = (value, obj, element, event) => {\r\n        // console.log(obj)\r\n        // console.log(event)\r\n        setValueText({\r\n            ...valueText, [element.id]: {\r\n                value: value\r\n            }\r\n        });\r\n    };\r\n    const onHandleInputPress = (value, obj, element, event) => {\r\n        if (event.key == \"Enter\") {\r\n            event.preventDefault();\r\n            setValueText({\r\n                ...valueText, [element.id]: {\r\n                    value: value\r\n                }\r\n            });\r\n        } else {\r\n            alert(value)\r\n        }\r\n    };\r\n    //ค่าที่ส่งกลับมา ของ AmButton\r\n    const onHandleSearch = (value, obj, event) => {\r\n        // console.log(value)\r\n        // console.log(obj)\r\n        // console.log(event)\r\n        // alert(\"ID: \" + valueText.txtCode.value +\r\n        //     \" :: \" + valueText.txtCode.label +\r\n        //     \"<br >ID: \" + valueText.txtUnitType.value +\r\n        //     \" :: \" + valueText.txtUnitType.label)\r\n        // Axios.get(createQueryString(txtQuery)).then(res =>\r\n        //     console.log(res.data.datas)\r\n        // );\r\n    }\r\n\r\n    const onHandlePress = (value, obj, element, event) => {\r\n        alert(value);\r\n    };\r\n    //Ex. function ที่ส่งเป็น props ไปยัง AmValidate\r\n    const onCustomValidate = (value) => {\r\n        // console.log(value)\r\n        var regExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (value.match(regExp)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    const customDropdown = () => {\r\n        return <AmDropdown\r\n            id=\"ddlUnitType\"\r\n            // disabled\r\n            placeholder=\"Select Unit Type\"\r\n            fieldDataKey=\"ID\" //ฟิล์ดดColumn ที่ตรงกับtable ในdb \r\n            fieldLabel={[\"ID\", \"Code\"]} //ฟิล์ดที่ต้องการเเสดงผลใน optionList และ ช่อง input\r\n            labelPattern=\" : \" //สัญลักษณ์ที่ต้องการขั้นระหว่างฟิล์ด\r\n            width={200} //กำหนดความกว้างของช่อง input\r\n            ddlMinWidth={200} //กำหนดความกว้างของกล่อง dropdown\r\n            // value={valueText.ddlUnitType.value} //ค่า value ที่เลือก\r\n            defaultValue={null}\r\n            autoDefaultValue={true}\r\n            returnDefaultValue={true}\r\n            queryApi={UnitTypeQuery}\r\n            onChange={onHandleDDLChange}\r\n            ddlType={\"search\"} //รูปแบบ Dropdown \r\n            zIndex={1000}\r\n            required\r\n        />;\r\n    }\r\n    const customMultiDropdown = () => {\r\n        return <AmMultiDropdown\r\n            id=\"ddlTest2\"\r\n            placeholder=\"Select Test2\"\r\n            fieldDataKey=\"value\"\r\n            fieldLabel={[\"label\"]}\r\n            width={400}\r\n            // ddlMinWidth={200}\r\n            ddlMaxWidth={250}\r\n            data={suggestions} //ส่ง option แบบarray\r\n            value={valueText.ddlTest2.value}\r\n            // defaultValue={['Austria','Azerbaijan']}\r\n            onChange={onHandleDDLChange} />;\r\n    }\r\n    const convertData = () => {\r\n        let val1 = [\"1-6\", \"9\", \"12-14\"];\r\n        let val2 = \"1-6\";\r\n        let val3 = \"1-6,25,9,12-14,23\";\r\n        let val4 = \"1,2,3,4,5,6,9,12,13,14,23\";\r\n        let val5 = \"5,4,3,2,1,6,10,12,13,14,23\";\r\n        let val6 = [5, 4, 3, 2, 1, 6, 10, 12, 13, 14, 23];\r\n        //   console.log(ExplodeRangeNum(val1));\r\n        //   console.log(ExplodeRangeNum(val2));\r\n        //   console.log(ExplodeRangeNum(val3));\r\n        //   console.log(MergeRangeNum(val4));\r\n        //   console.log(MergeRangeNum(val5));\r\n\r\n        // console.log(ExplodeRangeNumToIntArray(val1));\r\n        // console.log(ExplodeRangeNumToIntArray(val2));\r\n        // console.log(ExplodeRangeNumToIntArray(val3));\r\n        // console.log(ExplodeRangeNumToIntArray(val4));\r\n        // console.log(ExplodeRangeNumToIntArray(val5));\r\n        // console.log(ConvertToRangeNum(val6));\r\n    }\r\n    return (\r\n        <>\r\n            <AmDatePicker\r\n                defaultValue={true}\r\n                // style={{ display: \"inline-block\" }}\r\n                // onChange={(ele) => { console.log(ele) }}\r\n                TypeDate={\"datetime-local\"}\r\n                fieldID=\"fromDate\"\r\n                // setTimeZero={true}\r\n                onBlur={(e) => { console.log(e) }} required\r\n            />\r\n\r\n            <AmButton id=\"btnSearch\" styleType=\"add\" className={classNames(classes.button)} onClick={onHandleSearch}>\r\n                {'Test Search'}\r\n            </AmButton>\r\n            <label>== Find Popup ==</label>\r\n            {/* width ถ้าไม่ส่งไปจะเป็น auto */}\r\n            <FormInline>\r\n                <label>Code: </label>\r\n                {/* ใช้กับตัวเลือกที่มีข้อมูลเยอะมากๆ เช่น sku */}\r\n                <AmFindPopup\r\n                    id=\"txtCode\"\r\n                    placeholder=\"Select SKU\"\r\n                    fieldDataKey=\"ID\" //ฟิล์ดดColumn ที่ตรงกับtable ในdb \r\n                    labelPattern=\" : \" //สัญลักษณ์ที่ต้องการขั้นระหว่างฟิล์ด\r\n                    fieldLabel={[\"Code\", \"Name\"]} //ฟิล์ดที่ต้องการเเสดงผลใน ช่อง input\r\n                    // value={valueText.txtCode.value} // ใช้เมื่อต้องการเปลี่ยน value จากหน้า frontโดยตรง\r\n                    defaultValue={13802}\r\n                    labelTitle=\"Search of Code\" //ข้อความแสดงในหน้าpopup\r\n                    queryApi={txtQuery} //object query string\r\n                    columns={cols} //array column สำหรับแสดง table\r\n                    width={400} //กำหนดความกว้างของช่อง input\r\n                    onChange={onHandleChange} />\r\n            </FormInline>\r\n            <FormInline>\r\n                <label>Unit Type</label>\r\n                <AmFindPopup\r\n                    id=\"txtUnitType\"\r\n                    // disabled\r\n                    required={true}\r\n                    placeholder=\"Select Unit Type\"\r\n                    fieldDataKey=\"ID\"\r\n                    fieldLabel={[\"Code\"]}\r\n                    // value={valueText.txtUnitType.value} //ใช้เมื่อต้องการเปลี่ยน value จากหน้า frontโดยตรง\r\n                    defaultValue={2}\r\n                    labelTitle=\"Search of Unit Type\"\r\n                    queryApi={UnitTypeQuery}\r\n                    columns={colsUnitType}\r\n                    width={200}\r\n                    onChange={onHandleChange} />\r\n            </FormInline>\r\n            <br />\r\n            <FormInline>\r\n                <label>SKU Type</label>\r\n                <AmFindPopup\r\n                    id=\"txtSKUType\"\r\n                    // disabled\r\n                    required={true}\r\n                    placeholder=\"Select SKU Type\"\r\n                    fieldDataKey=\"ID\"\r\n                    fieldLabel={[\"Code\"]}\r\n                    // value={valueText.txtUnitType.value} //ใช้เมื่อต้องการเปลี่ยน value จากหน้า frontโดยตรง\r\n                    // defaultValue={2}\r\n                    labelTitle=\"Search of SKU Type\"\r\n                    queryApi={SKUMasterTypeQuery}\r\n                    columns={colsSKUType}\r\n                    width={200}\r\n                    onChange={onHandleChange} />\r\n            </FormInline>\r\n            <br />\r\n            <label>== Dropdown ==</label>\r\n            {/* Dropdown ส่งค่าoptionlist ได้ 3 แบบ ผ่าน props\r\n             [1] queryApi={UnitTypeQuery}  ส่งobject  query string =>component จะแปลงข้อมูลเป็น optionlist ให้\r\n             [2] data={dataSrc} ส่่ง array ข้อมูลที่ดึงมาจากdb  โดยส่งข้อมูลจาก res.data.datas =>component จะแปลงข้อมูลเป็น optionlist ให้\r\n            \r\n             func: onChange={onHandleDDLChange} \r\n             เมื่อมีการเลือกค่าใหม่หรือลบค่าที่เลือก จะส่งข้อมูลกลับมาผ่านfunc นี้ \r\n             (value, dataObject, inputID, fieldDataKey)\r\n            \r\n                กำหนดความกว้าง ถ้าไม่กำหนดเอง ค่า default = auto\r\n            width={400}\r\n            ddlMinWidth={200}\r\n            ddlMaxWidth={250}\r\n                ค่า default \r\n             fieldDataKey=\"value\"\r\n             fieldLabel={[\"label\"]}\r\n            */}\r\n\r\n            {/* Dropdown แบบมีช่อง Search \r\n            ต้องส่ง props ddlType={\"search\"} \r\n            Ex.ส่ง queryApi สำหรับแปลงเป็น optionlist \r\n            */}\r\n            {customDropdown()}\r\n            {/* <AmDropdown\r\n                id=\"ddlUnitType\"\r\n                // disabled\r\n                placeholder=\"Select Unit Type\"\r\n                fieldDataKey=\"ID\" //ฟิล์ดดColumn ที่ตรงกับtable ในdb \r\n                fieldLabel={[\"ID\", \"Code\"]} //ฟิล์ดที่ต้องการเเสดงผลใน optionList และ ช่อง input\r\n                labelPattern=\" : \" //สัญลักษณ์ที่ต้องการขั้นระหว่างฟิล์ด\r\n                width={200} //กำหนดความกว้างของช่อง input\r\n                ddlMinWidth={200} //กำหนดความกว้างของกล่อง dropdown\r\n                value={valueText.ddlUnitType.value} // ใช้เมื่อต้องการเปลี่ยน value จากหน้า frontโดยตรง\r\n                defaultValue={2}\r\n                queryApi={UnitTypeQuery}\r\n                onChange={onHandleDDLChange}\r\n                ddlType={\"search\"} //รูปแบบ Dropdown \r\n            /> */}\r\n            <FormInline>\r\n                <label>Unit Type</label>\r\n                <AmDropdown\r\n                    id=\"ddlUnitType2\"\r\n                    // disabled\r\n                    placeholder=\"Select Unit Type\"\r\n                    fieldDataKey=\"ID\" //ฟิล์ดดColumn ที่ตรงกับtable ในdb \r\n                    fieldLabel={[\"ID\", \"Code\"]} //ฟิล์ดที่ต้องการเเสดงผลใน optionList และ ช่อง input\r\n                    labelPattern=\" : \" //สัญลักษณ์ที่ต้องการขั้นระหว่างฟิล์ด\r\n                    width={200} //กำหนดความกว้างของช่อง input\r\n                    ddlMinWidth={200} //กำหนดความกว้างของกล่อง dropdown\r\n                    // value={valueText.ddlUnitType2.value} // ใช้เมื่อต้องการเปลี่ยน value จากหน้า frontโดยตรง\r\n                    defaultValue={2}\r\n                    queryApi={UnitTypeQuery}\r\n                    onChange={onHandleDDLChange}\r\n                    ddlType={\"search\"} //รูปแบบ Dropdown \r\n                    zIndex={1000}\r\n                    disabled\r\n                // required={true}\r\n                />\r\n            </FormInline>\r\n\r\n            {/* Dropdown แบบไม่มีช่อง Search \r\n            ต้องส่ง props ddlType={\"normal\"} \r\n            */}\r\n            <AmDropdown id=\"ddlTest\"\r\n                // disabled={true} \r\n                styleType=\"default\"\r\n                placeholder=\"Select Test\"\r\n                // fieldDataKey=\"value\"\r\n                // fieldLabel={[\"label\"]}\r\n                zIndex={1000}\r\n                // width={200}\r\n                // ddlMinWidth={200}  ถ้าใช้ เเบบ normal ไม่ได้ต้องส่งค่า ddlMinWidth,ddlMaxWidth\r\n                data={optiontest}\r\n                autoDefaultValue={true}\r\n                returnDefaultValue={true}\r\n                // value={valueText.ddlTest.value}\r\n                onChange={onHandleDDLChange}\r\n                ddlType={\"normal\"}\r\n            />\r\n\r\n            {/* Ex.ส่ง queryDatas สำหรับแปลงเป็น optionlist */}\r\n            <FormInline>\r\n                <label>Unit Type</label>\r\n                <AmDropdown id=\"ddlSKUType\"\r\n                    // disabled\r\n                    placeholder=\"Select SKU Type\"\r\n                    fieldDataKey=\"ID\"\r\n                    fieldLabel={[\"Code\"]}\r\n                    labelPattern=\" : \"\r\n                    width={300}\r\n                    zIndex={1000}\r\n                    // value={valueText.ddlSKUType.value}\r\n                    data={dataSrc}\r\n                    onChange={onHandleDDLChange}\r\n                    ddlType={\"normal\"} />\r\n            </FormInline>\r\n\r\n            {/* Ex.ส่ง ค่า option แบบเป็นarray  */}\r\n            <AmDropdown\r\n                id=\"ddlTest3\"\r\n                // disabled\r\n                placeholder=\"Select Test\"\r\n                // fieldDataKey=\"value\"\r\n                // fieldLabel={[\"label\"]}\r\n                width={300}\r\n                zIndex={1000}\r\n                data={suggestions}\r\n                // value={valueText.ddlTest3.value}\r\n                onChange={onHandleDDLChange}\r\n                ddlType={\"search\"} />\r\n\r\n            <br />\r\n            <label>== MultiDropdown ==</label>\r\n            {/* ใช้เหมือนกับdropdown */}\r\n            {/* MultiDropdown ส่งค่าoptionlist ได้ 3 แบบ ผ่าน props\r\n             [1] queryApi={UnitTypeQuery}  ส่งobject  query string =>component จะแปลงข้อมูลเป็น optionlist ให้\r\n             [2] data={dataSrc} ส่่ง array ข้อมูลที่ดึงมาจากdb  โดยส่งข้อมูลจาก res.data.datas =>component จะแปลงข้อมูลเป็น optionlist ให้\r\n            \r\n             func: onChange={onHandleDDLChange} \r\n             เมื่อมีการเลือกค่าใหม่หรือลบค่าที่เลือก จะส่งข้อมูลกลับมาผ่านfunc นี้ \r\n             (value, dataObject, inputID, fieldDataKey)\r\n            \r\n             กำหนดความกว้าง ถ้าไม่กำหนดเอง ค่า default = auto\r\n            width={400} //ความกว้าง ของช่อง input\r\n            ddlMinWidth={200} //Min ความกว้าง ของ กล่อง dropdown\r\n            ddlMaxWidth={250} //Max ความกว้าง ของ กล่อง dropdown\r\n\r\n             ค่า default \r\n             fieldDataKey=\"value\"\r\n             fieldLabel={[\"label\"]}\r\n            */}\r\n            {/* {customMultiDropdown()} */}\r\n\r\n            <AmMultiDropdown\r\n                id=\"ddlTest2\"\r\n                // disabled\r\n                // required={true}\r\n                placeholder=\"Select Test2\"\r\n                // fieldDataKey=\"value\"\r\n                // fieldLabel={[\"label\"]}\r\n                width={300}\r\n                zIndex={1000}\r\n                ddlMinWidth={300}\r\n                // ddlMaxWidth={300}\r\n                data={suggestions} //ส่ง option แบบarray\r\n                // value={valueText.ddlTest2.value} //ใช้เมื่อต้องการเปลี่ยน value จากหน้า frontโดยตรง\r\n                defaultValue={['Austria', 'Azerbaijan']}\r\n                returnDefaultValue={true}\r\n                onChange={onHandleDDLChange} />\r\n            {/* ส่ง query ที่ต้องการดึงจาก db มาสร้างเป็น option */}\r\n            <AmMultiDropdown\r\n                id=\"ddlSKUType2\"\r\n                placeholder=\"Select SKU Type\"\r\n                fieldDataKey=\"ID\" //ชื่อฟิิล์ดข้อมูล ที่ใช้อ้างอิงกับค่าใน table\r\n                fieldLabel={[\"Code\", \"Name\"]}\r\n                labelPattern=\" : \" // \r\n                width={300}\r\n                zIndex={1000}\r\n                ddlMinWidth={300}\r\n                // ddlMaxWidth={350}\r\n                // value={valueText.ddlSKUType2.value}\r\n                defaultValue={[45]}\r\n                returnDefaultValue={true}\r\n                queryApi={SKUMasterTypeQuery}  //ส่ง querystring ไป\r\n                // data={dataSrc}  //ส่ง data ที่ดังมากจาก db แล้ว\r\n                onChange={onHandleDDLChange}\r\n            />\r\n            <br />\r\n            <FormInline>\r\n                <LabelH>Email:</LabelH>\r\n                <InputDiv>\r\n                    <AmInput\r\n                        id=\"txtEmail\"\r\n                        name=\"email\"\r\n                        required={true}\r\n                        // defaultValue={111}\r\n                        //value={valueText.txtEmail.value}\r\n                        placeholder=\"Email\"\r\n                        onChange={onHandleInputChange}\r\n                        validate={true} //ประกาศใช้ตรวจสอบค่าinput\r\n                        // styleValidate={{display: 'block'}} <=แสดงใต้input เปลี่ยนสไตล์ส่วนเเสดงผลข้อความเตือน default จะเเสดงแถวเดียวกับinput\r\n                        // msgSuccess=\"Success\" //ข้อความสำเร็จ\r\n                        msgError=\"Error\" //ข้อความผิดพลาด\r\n                        regExp={/^[0-9\\.]+$/}\r\n                    //    regExp={/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/}  \r\n                    />\r\n                </InputDiv>\r\n                {/* <AmValidate\r\n                    value={valueText.txtEmail.value}\r\n                    // msgSuccess=\"Success\" \r\n                    msgError=\"Error\"\r\n                    regExp={/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/} /> */}\r\n            </FormInline>\r\n            <br />\r\n            <FormInline>\r\n                <LabelH>Email:</LabelH>\r\n                <InputDiv>\r\n                    <AmInput\r\n                        id=\"txtEmail2\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required={true}\r\n                        defaultValue=\"pop@ggg\"\r\n                        onChange={onHandleInputChange}\r\n                        onKeyPress={onHandleInputPress}//onHandlePress\r\n                        // onKeyDown={(value, obj, element, event)=>alert(value)}//onHandlePress\r\n                        // onMouseOver={()=>alert(\"xxx2\")}\r\n                        // onMouseOut={()=>alert(\"xxx3\")}\r\n                        // onFocus={()=>alert(\"xxx\")}\r\n                        validate  //ประกาศใช้ตรวจสอบค่าinput\r\n                        msgSuccess=\"Success\"\r\n                        msgError=\"Error\"\r\n                        customValidate={onCustomValidate} //ฟังก์ชั่นจากหน้าหลัก จัดการเอง\r\n                    // onMouseOver={(a,b,c) => console.log(c)} \r\n                    />\r\n                </InputDiv>\r\n                {/* <AmValidate\r\n                        value={valueText.txtEmail2.value}\r\n                        msgSuccess=\"Success\"\r\n                        msgError=\"Error\"\r\n                        customValidate={onCustomValidate}\r\n                    // regExp={/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/} \r\n                    /> */}\r\n            </FormInline>\r\n\r\n            {convertData()}\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nTest6.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(Test6);"],"sourceRoot":""}