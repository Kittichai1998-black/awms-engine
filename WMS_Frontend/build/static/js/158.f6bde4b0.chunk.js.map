{"version":3,"sources":["views/page/GCL/Receive/MonitorReceive.js"],"names":["tableHaderColumns","id","label","minWidth","align","format","value","Number","toFixed","toLocaleString","useStyles","makeStyles","root","width","padding","intervalGetSPReportAPI","AddReceiveModal","open","handleClose","handleSetToast","handleOnSuccess","useState","wms_doc","setWmsDoc","customer","setCustomer","to_wh","setToWH","grade","setGrade","lot","setLot","no_strat","setNoStrat","no_end","setNoEnd","sku","setSKU","status","setStatus","qty_pallet","setQtyPallet","unit","setUnit","isLoading","setIsLoading","useEffect","onClose","aria-labelledby","maxWidth","onSubmit","event","window","loading","onLoading","no_strat_value","no_end_value","qty_pallet_value","GCLService","post","then","res","onLoaded","data","_result","msg","type","message","preventDefault","autoComplete","autoFocus","margin","fullWidth","required","onChange","target","helperText","InputProps","step","style","marginLeft","backgroundColor","size","variant","onClick","color","startIcon","MonitorReceive","props","classes","dataTable","setDataTable","page","setPage","rowsPerPage","setRowsPerPage","isOpenModalAddReceive","setIsOpenModalAddReceive","toast","setToast","cloasing","setCloasing","confirmClosed","setConfirmClosed","get","spname","isMockData","mockDataGCL","monitorReceive","datas","setInterval","clearInterval","className","display","flexDirection","marginBottom","maxHeight","stickyHeader","aria-label","map","column","key","length","slice","row","index","hover","toLowerCase","disabled","indexOf","colSpan","severity","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","indexLoading","splice","anchorOrigin","vertical","horizontal","autoHideDuration","elevation"],"mappings":"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","file":"static/js/158.f6bde4b0.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Paper,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow,Snackbar,CircularProgress } from '@material-ui/core';\r\nimport {Button,IconButton,TextField, Dialog, DialogActions,DialogContent,DialogContentText,DialogTitle,Tooltip} from '@material-ui/core';\r\n// import ToastAlert from '../../../../components/function/ToastAlert';\r\nimport GCLService from '../../../../components/function/GCLService';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {AddCircleOutline,CloseSharp,Save, Cancel,CheckCircleOutlineRounded,CheckCircle} from '@material-ui/icons'\r\nimport \"../../../../assets/css/TableCustom.css\";\r\n\r\nconst tableHaderColumns = [\r\n  {id: 'status', label: 'Status', minWidth: 100},\r\n  {id: 'wms_doc', label: 'WMS\\u00a0Doc', minWidth: 100 },\r\n  {id: 'customer',label: 'Cutomer', minWidth: 100, },\r\n  {id: 'grade',label: 'Grade', minWidth: 100},\r\n  {id: 'lot', label: 'Lot', minWidth: 100},\r\n  {id: 'no_pallet', label: 'No Pallet', minWidth: 100 },\r\n  {id: 'qty', label: 'Qty', minWidth: 100, align:'right', format: (value) => Number(value.toFixed(3)).toLocaleString('en-US') },\r\n  {id: 'unit', label: 'Unit', minWidth: 100 },\r\n  {id: 'waiting_pallet', label: 'Waiting(Pallet)', minWidth: 100, align:'right'},\r\n  {id: 'received_pallet', label: 'Received(Pallet)', minWidth: 100, align:'right'},\r\n  {id: 'action', label: '🛠', minWidth: 100, align:'center'},\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    padding:15\r\n  },\r\n});\r\nlet intervalGetSPReportAPI=null\r\n\r\nconst MonitorReceive=(props)=>{\r\n  const classes = useStyles();\r\n  const [dataTable, setDataTable] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [isOpenModalAddReceive,setIsOpenModalAddReceive] = useState(false);\r\n  const [toast,setToast] = useState({msg:null,open:false,type:null});\r\n  const [cloasing,setCloasing] = useState([]);\r\n  const [confirmClosed,setConfirmClosed] = useState(null);\r\n\r\n  useEffect(() => {\r\n        window.loading.onLoading();\r\n        GCLService.get('/v2/GetSPReportAPI',{spname:'Recieve_PLAN_Load_Front'}).then(res=>{\r\n            window.loading.onLoaded();\r\n            if(GCLService.isMockData)return setDataTable(GCLService.mockDataGCL.monitorReceive)\r\n            if(!res.data._result.status) {\r\n              setToast({msg:\"Load data fail : \"+res.data._result.message ,open:true,type:'error'})\r\n              return ;\r\n            }\r\n            setDataTable(res.data.datas)\r\n            //auto load data\r\n            intervalGetSPReportAPI=setInterval(()=>{\r\n                GCLService.get('/v2/GetSPReportAPI',{spname:'Recieve_PLAN_Load_Front'}).then(res=>{\r\n                  if(!res.data._result.status) {\r\n                    setToast({msg:\"Load data fail : \"+res.data._result.message ,open:true,type:'error'})\r\n                    return ;\r\n                  }\r\n                  setDataTable(res.data.datas)\r\n                })\r\n            },5000)\r\n        })\r\n\r\n        //on component unmount\r\n        return () => {\r\n            clearInterval(intervalGetSPReportAPI);\r\n        }\r\n  }, [])\r\n  \r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const onAddReceiveSuccess=()=>{\r\n    clearInterval(intervalGetSPReportAPI);\r\n    intervalGetSPReportAPI=setInterval(()=>{\r\n      GCLService.get('/v2/GetSPReportAPI',{spname:'Recieve_PLAN_Load_Front'}).then(res=>{\r\n        if(!res.data._result.status) {\r\n          setToast({msg:\"Load data fail : \"+res.data._result.message ,open:true,type:'error'})\r\n          return ;\r\n        }\r\n        setDataTable(res.data.datas)\r\n      })\r\n    },5000)\r\n  }\r\n\r\n  const onClosed=(wms_doc)=>{\r\n    setCloasing([...cloasing,wms_doc]);\r\n    GCLService.post('/v2/Recieve_PLAN_Close_Front',{wms_doc}).then(res=>{\r\n      const indexLoading = cloasing.indexOf(wms_doc);\r\n      if (indexLoading > -1)cloasing.splice(indexLoading, 1);\r\n      setCloasing(cloasing);\r\n      if(!res.data._result.status) {\r\n        setToast({msg:\"Fail : \"+res.data._result.message ,open:true,type:'error'})\r\n        return ;\r\n      }        \r\n      setToast({msg:\"Success\",open:true,type:'success'})\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <AddReceiveModal open={isOpenModalAddReceive} handleClose={()=>setIsOpenModalAddReceive(false)} handleSetToast={setToast} handleOnSuccess={onAddReceiveSuccess} />\r\n      <div style={{display:'flex',flexDirection:'row-reverse', marginBottom:10}}>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            startIcon={<AddCircleOutline />}\r\n            onClick={()=>setIsOpenModalAddReceive(true)}\r\n        > Add Receive</Button>\r\n      </div>\r\n      <TableContainer className=\"tableCustom\" style={{maxHeight: 440}}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {tableHaderColumns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, backgroundColor:'#BBB',padding:10 }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {dataTable.length>0 && dataTable.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n              return (\r\n                <TableRow hover key={index}>\r\n                  {tableHaderColumns.map((column,key) => {\r\n                    const value = row[column.id];\r\n                    if(column.id=='action'){\r\n                      return (\r\n                        <TableCell key={column.id+index} align={column.align} style={{padding:10}}>\r\n                            {row.status.toLowerCase()!='Closed'.toLowerCase() &&\r\n                            <Button variant=\"contained\" color=\"primary\" style={{backgroundColor:'#16C050'}} size=\"small\" onClick={()=>setConfirmClosed(row.wms_doc)} disabled={cloasing.length>0}>\r\n                              {cloasing.indexOf(row.wms_doc)>-1 ? <CircularProgress size={20} />:<CheckCircle />} Closed\r\n                            </Button>\r\n                            }\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <TableCell key={column.id+index} align={column.align} style={{padding:10}}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            {dataTable.length<=0 &&\r\n              <TableRow>\r\n                <TableCell colSpan='11'>\r\n                  <Alert severity='info'>Empty Data</Alert>\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 30, 100]}\r\n        component=\"div\"\r\n        count={dataTable.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n\r\n      <Dialog maxWidth='xl' onClose={()=>setConfirmClosed(null)} aria-labelledby=\"simple-dialog-title\" open={confirmClosed!=null}>\r\n        <DialogTitle id=\"simple-dialog-title\">Are you sure?</DialogTitle>\r\n        <DialogContent>Closed \"{confirmClosed}\"</DialogContent>\r\n        <DialogActions style={{backgroundColor:'#eee'}}>\r\n          <Button size='medium' variant=\"contained\" onClick={()=>setConfirmClosed(null)} color=\"secondary\" startIcon={<CloseSharp/>} >\r\n            No\r\n          </Button>\r\n          <Button size='medium' variant=\"contained\" onClick={()=>{onClosed(confirmClosed);setConfirmClosed(null)}} color=\"primary\" startIcon={<CheckCircleOutlineRounded/>} type='submit'>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {toast.open &&\r\n      <Snackbar anchorOrigin={{ vertical:'top', horizontal:'center' }} open={toast.open} autoHideDuration={5000} onClose={()=>setToast({msg:\"\",open:false,type:\"\"})}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={()=>setToast({msg:\"\",open:false,type:\"\"})} severity={toast.type}>\r\n          {toast.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      }\r\n    </Paper>\r\n  );\r\n}\r\n\r\n// model add\r\nconst AddReceiveModal=({open,handleClose,handleSetToast=()=>{},handleOnSuccess=()=>{}})=>{\r\n  const classes = useStyles();\r\n  const [wms_doc,setWmsDoc]=useState(\"\")\r\n  const [customer,setCustomer]=useState(\"\")\r\n  const [to_wh,setToWH]=useState(\"\")\r\n  const [grade,setGrade]=useState(\"\")\r\n  const [lot,setLot]=useState(\"\")\r\n  const [no_strat,setNoStrat]=useState(\"\")\r\n  const [no_end,setNoEnd]=useState(\"\")\r\n  const [sku,setSKU]=useState(\"\")\r\n  const [status,setStatus]=useState(\"\")\r\n  const [qty_pallet,setQtyPallet]=useState(\"\")\r\n  const [unit,setUnit]=useState(\"\")\r\n  const [isLoading,setIsLoading]=useState(false)\r\n\r\n  useEffect(() => {\r\n        //on component unmount\r\n        return () => {}\r\n  }, [])\r\n\r\n  const onSubmitForm=(event)=>{\r\n    handleOnSuccess()\r\n    window.loading.onLoading();\r\n    setIsLoading(true)\r\n    let no_strat_value = !(no_strat==\"\") ? Number(no_strat) : no_strat;\r\n    let no_end_value = !(no_end==\"\") ? Number(no_end) : no_end;\r\n    let qty_pallet_value = !(qty_pallet==\"\") ? Number(qty_pallet) : qty_pallet;\r\n    GCLService.post('/v2/Recieve_PLAN_Front',{wms_doc,customer,to_wh,grade,lot,no_strat: no_strat_value, no_end: no_end_value,sku,status, qty_pallet:qty_pallet_value,unit}).then(res=>{\r\n      window.loading.onLoaded();\r\n      setIsLoading(false)\r\n      if(!res.data._result.status) {\r\n        handleSetToast({msg:\"Fail : \"+res.data._result.message ,open:true,type:'error'})\r\n        return ;\r\n      }\r\n      handleSetToast({msg:\"Success\",open:true,type:'success'})\r\n      handleOnSuccess()\r\n      handleClose()\r\n    })\r\n    event.preventDefault()\r\n  }\r\n\r\n  return <>\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='xs'>\r\n      <form onSubmit={onSubmitForm} autoComplete=\"off\">\r\n      <DialogTitle id=\"form-dialog-title\" onClose={handleClose}><center>Add Receive</center></DialogTitle>\r\n      <DialogContent>\r\n          <TextField autoFocus type=\"text\" margin=\"dense\" id=\"wms_doc\" label=\"WMS Doc\" fullWidth required value={wms_doc} onChange={(event)=>setWmsDoc(event.target.value)} helperText={null}/>\r\n          <TextField type=\"text\" margin=\"dense\" id=\"customer\" label=\"Customer\" fullWidth required value={customer} onChange={(event)=>setCustomer(event.target.value)} />\r\n          <TextField type=\"text\" margin=\"dense\" id=\"to_wh\" label=\"To WH\" fullWidth required value={to_wh} onChange={(event)=>setToWH(event.target.value)} />\r\n          <TextField type=\"text\" margin=\"dense\" id=\"grade\" label=\"Grade\" fullWidth required value={grade} onChange={(event)=>setGrade(event.target.value)} />\r\n          <TextField type=\"text\" margin=\"dense\" id=\"lot\" label=\"Lot\" fullWidth required value={lot} onChange={(event)=>setLot(event.target.value)} />\r\n          <TextField type=\"number\" margin=\"dense\" id=\"no_strat\" label=\"No Strat\"  required InputProps={{step:1}} value={no_strat} onChange={(event)=>setNoStrat(event.target.value)} />\r\n          <TextField type=\"number\" margin=\"dense\" id=\"no_end\" label=\"No End\" style={{marginLeft:10}}  required InputProps={{step:1}} value={no_end} onChange={(event)=>setNoEnd(event.target.value)} />\r\n          <TextField type=\"text\" margin=\"dense\" id=\"sku\" label=\"SKU\" fullWidth required value={sku} onChange={(event)=>setSKU(event.target.value)} />\r\n          <TextField type=\"text\" margin=\"dense\" id=\"status\" label=\"Status\" fullWidth required value={status} onChange={(event)=>setStatus(event.target.value)} />\r\n          <TextField type=\"number\" margin=\"dense\" id=\"qty_pallet\" label=\"Qty Pallet\" fullWidth required value={qty_pallet} onChange={(event)=>setQtyPallet(event.target.value)} />\r\n          <TextField type=\"text\" margin=\"dense\" id=\"unit\" label=\"Unit\" fullWidth required InputProps={{step:1}} value={unit} onChange={(event)=>setUnit(event.target.value)} />\r\n      </DialogContent>\r\n      <DialogActions style={{backgroundColor:'#eee'}}>\r\n        {isLoading ?\r\n          <CircularProgress /> :\r\n          <>\r\n            <Button size='small' variant=\"contained\" onClick={handleClose} color=\"secondary\" startIcon={<CloseSharp/>} >\r\n              Cancel\r\n            </Button>\r\n            <Button size='small' variant=\"contained\" onClick={()=>{}} color=\"primary\" startIcon={<Save/>} type='submit'>\r\n              Save\r\n            </Button>\r\n          </>\r\n        }\r\n      </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  </>\r\n}\r\n\r\nexport default MonitorReceive"],"sourceRoot":""}