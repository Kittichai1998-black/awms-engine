{"version":3,"sources":["components/AmDialogs.js","../node_modules/@material-ui/icons/Close.js","components/AmPopup.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","assets/logo/home.png","assets/logo/stalogo.png","assets/logo/mrklogo-new.png","assets/logo/taplogo.png","assets/logo/botlogo.jpg","views/page/Pages/Home.js"],"names":["withStyles","theme","close","padding","spacing","props","useState","typePopup","type","setType","icon","colorBlock","width","height","colorIcon","content","message","setMessage","open","setOpen","preview","setPreview","timeOut","useEffect","handleClose","event","reason","onAccept","HomeIcon","style","marginRight","color","d","createMuiTheme","overrides","MuiSnackbarContent","textOverflow","whiteSpace","overflow","root","flexWrap","backgroundColor","opacity","paddingTop","paddingBottom","paddingInlineStart","paddingRight","zIndex","MuiIconButton","typography","useNextVariants","closeState","e","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","display","float","amIcon","action","key","aria-label","onClick","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","AmPopup","setContent","setTypePopup","titlePopup","defaultTitlePopup","setDefaultTitlePopup","MuiPaper","borderStyle","borderColor","border","rounded","borderRadius","MuiTypography","h6","fontWeight","aria-labelledby","aria-describedby","id","autoFocus","DialogContentText","ref","Typography","_extends","component","variant","marginBottom","name","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","BackdropProps","children","classes","className","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","Modal","clsx","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onMouseUp","target","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","position","scrollPaper","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","verticalAlign","outline","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","DialogTitle","_props$disableTypogra","disableTypography","flex","DialogContent","_props$dividers","dividers","WebkitOverflowScrolling","borderTop","palette","divider","borderBottom","DialogActions","_props$disableSpacing","disableSpacing","marginLeft","module","Container","apicall","styled","div","Home","ContentImg","dialogState","setDialogState","Img","window","project","src","marginTop","state","align"],"mappings":"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","file":"static/js/135.19158ef8.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  createMuiTheme\r\n} from \"@material-ui/core/styles\";\r\nimport amIcon from \"./AmIconMenu\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport AmPopup from \"./AmPopup\";\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n});\r\n\r\nconst AmDialogs = props => {\r\n  const [type, setType] = useState(props.typePopup);\r\n  const [icon, setIcon] = useState(props.icon);\r\n  const [colorBlock, setColorBlock] = useState(props.colorBlock);\r\n  const [width, setWidth] = useState(props.width);\r\n  const [height, setHeight] = useState(props.height);\r\n  const [colorIcon, setColorIcon] = useState(props.colorIcon);\r\n  const [message, setMessage] = useState(props.content);\r\n  const [open, setOpen] = useState(false);\r\n  const [sentOpen, setSentOpen] = useState(props.open);\r\n  const [queue, setQueue] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState(\"\");\r\n  const [preview, setPreview] = useState(false);\r\n  const [timeOut, setTimeOut] = useState(props.timeOut);\r\n\r\n  useEffect(() => {\r\n    setMessage(props.content);\r\n    // console.log(props.content)\r\n  }, [props.content]);\r\n\r\n  useEffect(() => {\r\n    setType(props.typePopup);\r\n    // console.log(props.content)\r\n  }, [props.typePopup]);\r\n\r\n  // useEffect(() => {\r\n  //     handleClick(message)\r\n  // },[]);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n  }, [props.open]);\r\n\r\n  // const handleClick =  (message) => {\r\n\r\n  //     setMessageInfo(message)\r\n  //     // processQueue();\r\n\r\n  // };\r\n\r\n  // const processQueue = () => {\r\n\r\n  //     setOpen(sentOpen)\r\n  // };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n    props.onAccept(false);\r\n  };\r\n\r\n  const handle = () => {\r\n    setPreview(true);\r\n  };\r\n\r\n  function HomeIcon(icon) {\r\n    return (\r\n      <SvgIcon style={{ marginRight: \"10px\" }}>\r\n        <path\r\n          style={{\r\n            color:\r\n              type === \"success\"\r\n                ? colorIcon\r\n                  ? colorIcon\r\n                  : \"#A5D6A7\"\r\n                : type === \"error\"\r\n                ? colorIcon\r\n                  ? colorIcon\r\n                  : \"#EF9A9A\"\r\n                : colorIcon\r\n                ? colorIcon\r\n                : \"#FFCC80\"\r\n          }}\r\n          d={icon}\r\n        />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n  return (\r\n    <MuiThemeProvider\r\n      theme={createMuiTheme({\r\n        overrides: {\r\n          MuiSnackbarContent: {\r\n            message: {\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n              overflow: \"hidden\"\r\n            },\r\n            root: {\r\n              flexWrap: \"nowrap\",\r\n              backgroundColor:\r\n                type === \"success\"\r\n                  ? colorBlock\r\n                    ? colorBlock\r\n                    : \"#2E7D32\"\r\n                  : type === \"error\"\r\n                  ? colorBlock\r\n                    ? colorBlock\r\n                    : \"#C62828\"\r\n                  : colorBlock\r\n                  ? colorBlock\r\n                  : \"#EF6C00\",\r\n              opacity: 0.8,\r\n              paddingTop: \"10px\",\r\n              paddingBottom: \"10px\",\r\n              paddingInlineStart: \"10px\",\r\n              paddingRight: \"10px\",\r\n              width: width ? width : null,\r\n              height: height ? height : null,\r\n              zIndex: 999999999999999999999\r\n            }\r\n          },\r\n          MuiIconButton: {\r\n            root: {\r\n              padding: \"0px\",\r\n              paddingRight: \"5px\"\r\n            }\r\n          }\r\n        },\r\n\r\n        typography: {\r\n          useNextVariants: true\r\n        }\r\n      })}\r\n    >\r\n      <div>\r\n        {/* <Button onClick={(e) => handleClick(\"sss\")}>Show message A</Button> \r\n        <Button onClick={(e) => handleClick(\"ssssssssssssccccccccccccccccccccccccccccccccccccccccccccccccccccdddddddddddddddddddddddddddddddddddddddddddddddddddd\")}>Show message B</Button> */}\r\n\r\n        {\r\n          <AmPopup\r\n            content={message}\r\n            typePopup={type}\r\n            open={preview}\r\n            closeState={e => setPreview(e)}\r\n          />\r\n        }\r\n\r\n        <Snackbar //style={{ zIndex: 1400 }}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n          open={open}\r\n          autoHideDuration={timeOut ? timeOut : 2000}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={\r\n            <div\r\n              style={{\r\n                display: \"inline\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"hidden\"\r\n              }}\r\n            >\r\n              <div style={{ display: \"inline\", float: \"left\" }}>\r\n                {\" \"}\r\n                {HomeIcon(\r\n                  type === \"success\"\r\n                    ? amIcon[icon ? icon : \"Success\"]\r\n                    : type === \"error\"\r\n                    ? amIcon[icon ? icon : \"Error\"]\r\n                    : amIcon[icon ? icon : \"Warning\"]\r\n                )}\r\n              </div>\r\n              {message}\r\n            </div>\r\n          }\r\n          action={[\r\n            <IconButton\r\n              key=\"preview\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={handle}\r\n            >\r\n              {HomeIcon(amIcon[\"Preview\"])}\r\n            </IconButton>,\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AmDialogs);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  createMuiTheme\r\n} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport amIcon from \"./AmIconMenu\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\n\r\nconst AmPopup = props => {\r\n  const [open, setOpen] = useState(props.open);\r\n  const [width, setWidth] = useState(props.width);\r\n  const [height, setHeight] = useState(props.height);\r\n  const [icon, setIcon] = useState(props.icon);\r\n  const [colorIcon, setColorIcon] = useState(props.colorIcon);\r\n  const [colorBlock, setColorBlock] = useState(props.colorBlock);\r\n  const [content, setContent] = useState(props.content);\r\n  const [typePopup, setTypePopup] = useState(props.typePopup);\r\n  const [titlePopup, setTitlePopup] = useState(props.titlePopup);\r\n  const [defaultTitlePopup, setDefaultTitlePopup] = useState(\"\");\r\n  //const [openPreview, setOpenPreview] = useState(props.openPreview);\r\n  useEffect(() => {\r\n\r\n    if (props.typePopup === \"success\") {\r\n      setDefaultTitlePopup(\"SUCCESS\");\r\n    } else if (props.typePopup === \"error\") {\r\n      setDefaultTitlePopup(\"ERROR\");\r\n    } else if (props.typePopup === \"warning\") {\r\n      setDefaultTitlePopup(\"WARNING\");\r\n    } else if (props.typePopup === \"info\") {\r\n      setDefaultTitlePopup(\"INFO\");\r\n    } else {\r\n      setDefaultTitlePopup(\"\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    setTypePopup(props.typePopup)\r\n    if (props.typePopup === \"success\") {\r\n      setDefaultTitlePopup(\"SUCCESS\");\r\n    } else if (props.typePopup === \"error\") {\r\n      setDefaultTitlePopup(\"ERROR\");\r\n    } else if (props.typePopup === \"warning\") {\r\n      setDefaultTitlePopup(\"WARNING\");\r\n    } else if (props.typePopup === \"info\") {\r\n      setDefaultTitlePopup(\"INFO\");\r\n    } else {\r\n      setDefaultTitlePopup(\"\");\r\n    }\r\n    if (props.open) setOpen(true);\r\n    else {\r\n      setOpen(false);\r\n    }\r\n  }, [props.open]);\r\n\r\n  useEffect(() => {\r\n    setContent(props.content);\r\n\r\n  }, [props.content]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.closeState(false);\r\n    setOpen(false);\r\n  };\r\n\r\n  function HomeIcon(type) {\r\n    return (\r\n      <SvgIcon\r\n        style={{\r\n          color:\r\n            typePopup === \"success\"\r\n              ? colorIcon\r\n                ? colorIcon\r\n                : \"#C5E1A5\"\r\n              : typePopup === \"info\"\r\n                ? colorIcon\r\n                  ? colorIcon\r\n                  : \"#37474F\"\r\n                : colorIcon === \"error\"\r\n                  ? colorIcon\r\n                    ? colorIcon\r\n                    : \"#EF9A9A\"\r\n                  : colorIcon\r\n                    ? colorIcon\r\n                    : \"#FFF59D\"\r\n        }}\r\n      >\r\n        <path d={type} />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MuiThemeProvider\r\n      theme={createMuiTheme({\r\n        overrides: {\r\n          MuiPaper: {\r\n            root: {\r\n              borderStyle: \"solid\",\r\n              borderColor:\r\n                typePopup === \"success\"\r\n                  ? colorBlock\r\n                    ? colorBlock\r\n                    : \"#4CAF50\"\r\n                  : typePopup === \"info\"\r\n                    ? colorBlock\r\n                      ? colorBlock\r\n                      : \"#9E9E9E\"\r\n                    : typePopup === \"error\"\r\n                      ? colorBlock\r\n                        ? colorBlock\r\n                        : \"#F44336\"\r\n                      : colorBlock\r\n                        ? colorBlock\r\n                        : \"#FFA726\",\r\n              border: \"5px\",\r\n              width: width ? width : \"500px\",\r\n              height: height ? height : null\r\n            },\r\n            rounded: {\r\n              borderRadius: \"20px\"\r\n            }\r\n          },\r\n\r\n          MuiTypography: {\r\n            h6: {\r\n              fontWeight: \"0px\"\r\n            }\r\n          }\r\n        },\r\n\r\n        typography: {\r\n          useNextVariants: true\r\n        }\r\n      })}\r\n    >\r\n      <div>\r\n        {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n              Open alert dialog\r\n            </Button> */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle\r\n            id=\"alert-dialog-title\"\r\n            style={{\r\n              padding: \"15px 15px 15px\",\r\n              backgroundColor:\r\n                typePopup === \"success\"\r\n                  ? colorBlock\r\n                    ? colorBlock\r\n                    : \"#4CAF50\"\r\n                  : typePopup === \"info\"\r\n                    ? colorBlock\r\n                      ? colorBlock\r\n                      : \"#9E9E9E\"\r\n                    : typePopup === \"error\"\r\n                      ? colorBlock\r\n                        ? colorBlock\r\n                        : \"#F44336\"\r\n                      : colorBlock\r\n                        ? colorBlock\r\n                        : \"#FFA726\"\r\n            }}\r\n          >\r\n            {HomeIcon(\r\n              typePopup === \"success\"\r\n                ? amIcon[icon ? icon : \"Success\"]\r\n                : typePopup === \"info\"\r\n                  ? amIcon[icon ? icon : \"Info\"]\r\n                  : typePopup === \"error\"\r\n                    ? amIcon[icon ? icon : \"Error\"]\r\n                    : amIcon[icon ? icon : \"Warning\"]\r\n            )}{\" \"}\r\n            {titlePopup ? titlePopup : defaultTitlePopup}\r\n          </DialogTitle>\r\n          <DialogContent style={{ padding: \"20px\" }}>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AmPopup;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","module.exports = __webpack_public_path__ + \"static/media/home.8546db16.png\";","module.exports = __webpack_public_path__ + \"static/media/stalogo.91c784f4.png\";","module.exports = __webpack_public_path__ + \"static/media/mrklogo-new.4a6e4edb.png\";","module.exports = __webpack_public_path__ + \"static/media/taplogo.d4f95c33.png\";","module.exports = __webpack_public_path__ + \"static/media/botlogo.277b1091.jpg\";","\r\nimport React, { useState } from \"react\";\r\nimport img from '../../../assets/logo/home.png'\r\nimport Assignment from \"@material-ui/icons/Assignment\";\r\nimport { apicall } from '../../../components/function/CoreFunction'\r\nimport AmDialogs from \"../../../components/AmDialogs\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport styled from 'styled-components'\r\nconst Axios = new apicall();\r\nconst Container = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    `;\r\n\r\nconst Home = (props) => {\r\n  const [dialogState, setDialogState] = useState({});\r\n  let Img = require('../../../assets/logo/home.png')\r\n  let ContentImg;\r\n  if (window.project === \"ENGINE\") { Img = require('../../../assets/logo/home.png'); ContentImg = <img src={Img} width=\"50%\" style={{ marginTop: '5%' }}></img> }\r\n  else if (window.project === \"STA\" || window.project === \"STGT\") { Img = require('../../../assets/logo/stalogo.png'); ContentImg = <img src={Img} width=\"35%\" style={{ marginTop: '3%' }}></img> }\r\n  else if (window.project === \"MRK\") { Img = require('../../../assets/logo/mrklogo-new.png'); ContentImg = <img src={Img} width=\"40%\" style={{ marginTop: '5%' }}></img> }\r\n  else if (window.project === \"TAP\") { Img = require('../../../assets/logo/taplogo.png'); ContentImg = <img src={Img} width=\"40%\" style={{ marginTop: '5%' }}></img> }\r\n  else if (window.project === \"BOT\") { Img = require('../../../assets/logo/botlogo.jpg'); ContentImg = <img src={Img} width=\"100%\" style={{ marginTop: '5%' }}></img> }\r\n  else { ContentImg = <img src={Img} width=\"50%\" style={{ marginTop: '5%' }}></img> }\r\n\r\n  const sentReport = () => {\r\n\r\n    Axios.post(window.apipath + \"/v2/stock_daily_report\", {}).then(res => {\r\n      if (res.data._result !== undefined) {\r\n        if (res.data._result.status === 1) {\r\n          setDialogState({ type: \"success\", content: \"Success\", state: true })\r\n        } else {\r\n          setDialogState({ type: \"error\", content: res.data._result.message, state: true })\r\n\r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Container>\r\n      <AmDialogs\r\n        typePopup={dialogState.type}\r\n        onAccept={(e) => { setDialogState({ ...dialogState, state: false }) }}\r\n        open={dialogState.state}\r\n        content={dialogState.content} />\r\n      <div align=\"center\">\r\n\r\n        {ContentImg}\r\n        {/* <br />\r\n        <IconButton\r\n          size=\"Large\"\r\n          aria-label=\"info\"\r\n          style={{ marginLeft: \"3px\" }}\r\n        >\r\n          <Assignment\r\n            size=\"Large\"\r\n            onClick={() => { sentReport() }}\r\n          />\r\n        </IconButton >\r\n        <label style={{\r\n\r\n          color: \"#535c68\",\r\n          fontSize: \"18px\",\r\n          textAlign: \"center\",\r\n          marginTop: \"10px\"\r\n        }}>\r\n          รายงานประจำวัน</label>*/}\r\n      </div> \r\n    </Container >\r\n\r\n  );\r\n}\r\nexport default Home;"],"sourceRoot":""}